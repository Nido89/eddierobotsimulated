<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IRobot.Y2007.M01</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService">
            <summary>
            iRobot Create Lite
            Service Implementation for lightweight processors
            </summary>
            <remarks>The iRobot Lite service calls to the serial port and may block a thread
            The ActivationSettings attribute with Sharing == false makes the runtime
            dedicate a dispatcher thread pool just for this service.</remarks>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService._defaultPollingInterval">
            <summary>
            Default sensor polling rate (ms)
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService._initialWaitForCommand">
            <summary>
            Default serial port time to wait after request (ms)
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService._dataWaitingInterval">
            <summary>
            Default serial port polling when a response is expected (ms)
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService._minWirelessInterval">
            <summary>
            Minimum polling rate over wireless connection (ms)
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService._state">
            <summary>
            iRobot State
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService._mainPort">
            <summary>
            _main Port
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService._internalPort">
            <summary>
            Internal port for handling state updates
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService._streamPort">
            <summary>
            Serial Port Communications Port
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService._httpUtilities">
            <summary>
            Http Post Helper Port
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.#ctor(Microsoft.Dss.ServiceModel.Dssp.DsspServiceCreationPort)">
            <summary>
            Default Service Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.Start">
            <summary>
            Service Start
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.UpdateConfigureHandler(Microsoft.Robotics.Services.IRobot.Roomba.Configure)">
            <summary>
            Update iRobot Configuration
            </summary>
            <param name="configure"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.UpdateConnectHandler(Microsoft.Robotics.Services.IRobot.Roomba.Connect)">
            <summary>
            Update Connect Handler
            </summary>
            <param name="update"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.UpdateStatePoseHandler(Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdatePose)">
            <summary>
            Update state with current pose.
            </summary>
            <param name="updatePose"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.UpdateStatePowerHandler(Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdatePower)">
            <summary>
            Update state with current power.
            </summary>
            <param name="updatePower"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.UpdateStateSensorsHandler(Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateBumpsCliffsAndWalls)">
            <summary>
            Update state with current sensors.
            </summary>
            <param name="updateBumpsCliffsAndWalls"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.UpdateTelemetryHandler(Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateTelemetry)">
            <summary>
            Update state with current telemetry sensors.
            </summary>
            <param name="updateTelemetry"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.UpdateCliffDetailHandler(Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateCliffDetail)">
            <summary>
            Update state with current cliff sensors.
            </summary>
            <param name="updateCliffDetail"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.UpdateStateAllHandler(Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateAll)">
            <summary>
            Update state with all current sensors.
            </summary>
            <param name="updateAll"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.SetLastUpdatedHandler(System.DateTime)">
            <summary>
            Update the _state.LastUpdated
            </summary>
            <param name="lastUpdated"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.UpdateModeHandler(Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateMode)">
            <summary>
            Update state with the current Roomba Mode
            </summary>
            <param name="updateMode"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.GetHandler(Microsoft.Robotics.Services.IRobot.Roomba.Get)">
            <summary>
            Get Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.HttpGetHandler(Microsoft.Dss.Core.DsspHttp.HttpGet)">
            <summary>
            HttpGet Handler
            </summary>
            <param name="httpGet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.HttpPostHandler(Microsoft.Dss.Core.DsspHttp.HttpPost)">
            <summary>
            HttpPost Handler
            </summary>
            <param name="httpPost"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.SubscribeHandler(Microsoft.Robotics.Services.IRobot.SensorUpdates.Subscribe)">
            <summary>
            Subscribe Handler
            </summary>
            <param name="subscribe"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.ConnectHandler(Microsoft.Robotics.Services.IRobot.Roomba.Connect)">
            <summary>
            Connect Handler
            </summary>
            <param name="connect"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.ConfigureHandler(Microsoft.Robotics.Services.IRobot.Roomba.Configure)">
            <summary>
            Configure Handler
            </summary>
            <param name="configure"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.RoombaSetModeHandler(Microsoft.Robotics.Services.IRobot.Roomba.RoombaSetMode)">
            <summary>
            RoombaSetMode Handler
            </summary>
            <param name="createSetMode"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.RoombaSetLedsHandler(Microsoft.Robotics.Services.IRobot.Roomba.RoombaSetLeds)">
            <summary>
            RoombaSetLeds Handler
            </summary>
            <param name="setLeds"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.RoombaPlaySongHandler(Microsoft.Robotics.Services.IRobot.Roomba.RoombaPlaySong)">
            <summary>
            RoombaPlaySong Handler
            </summary>
            <param name="playSong"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.RoombaGetSensorsHandler(Microsoft.Robotics.Services.IRobot.Roomba.RoombaGetSensors)">
            <summary>
            RoombaGetSensors Handler
            </summary>
            <param name="getSensors"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.RoombaDriveHandler(Microsoft.Robotics.Services.IRobot.Roomba.RoombaDrive)">
            <summary>
            RoombaDrive Handler
            </summary>
            <remarks></remarks>
            <param name="drive"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.CreateDriveDirectHandler(Microsoft.Robotics.Services.IRobot.Create.CreateDriveDirect)">
            <summary>
            CreateDriveDirect Handler
            </summary>
            <param name="driveDirect"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.BlockedCommandHandler(System.Object)">
            <summary>
            Invalid Inbound Command Handler
            </summary>
            <param name="header"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.DropHandler(Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop)">
            <summary>
            Custom Drop Handler
            </summary>
            <param name="drop"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.ChangeToModeHandler(Microsoft.Robotics.Services.IRobot.Roomba.ChangeToMode)">
            <summary>
            Change to the specified Mode
            </summary>
            <param name="changeMode"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.ConfigureStreamHandler(Microsoft.Robotics.Services.DssStream.Proxy.ReplaceStreamState)">
            <summary>
            Configure the iRobot communications stream
            </summary>
            <param name="replace"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.Connect">
            <summary>
            Connect to the underlying communications port.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.CloseConnection(System.Boolean)">
            <summary>
            Close the serial port connections
            </summary>
            <param name="dispose"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.ProcessAtomicCommandHandler(Microsoft.Robotics.Services.IRobot.Roomba.ProcessAtomicCommand)">
            <summary>
            Send iRobot Command to the serial port.
            </summary>
            <remarks>Exclusive to handlers which reference _internalState.</remarks>
            <param name="atomicCommand"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.CalcCmdExpiration(System.DateTime,System.Int32)">
            <summary>
            Calculate the Command Expiration Time
            </summary>
            <param name="start"></param>
            <param name="ms"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.DefaultUpdateResponseTypeHandler(Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType)">
            <summary>
            Acknowledge a success
            </summary>
            <param name="ok"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.DefaultFaultHandler(W3C.Soap.Fault)">
            <summary>
            Default Error Handler
            </summary>
            <param name="fault"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.DataWaitingHandler(Microsoft.Robotics.Services.IRobot.Lite.DataWaiting)">
            <summary>
            Process waiting data on the serial port.
            </summary>
            <param name="dataWaiting"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.ProcessUnrequestedText">
            <summary>
            Process unrequested text and ignore it.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.AnalyzeBuffer(System.DateTime)">
            <summary>
            Analyze the buffer.
            When a command response is found,
              the response is posted back to the caller,
              the pending command is removed from the queue,
              and the ReadBuffer is updated.
            </summary>
            <param name="dataReceivedTime"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.GetResponsePacket(Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommand,System.DateTime,System.Int32@)">
            <summary>
            Retrieve a response packet from the data stream
            </summary>
            <param name="cmd"></param>
            <param name="timestamp"></param>
            <param name="ixCmdStart"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.ConfigureCreate(System.Boolean)">
            <summary>
            Configure the Create
            </summary>
            <param name="connect"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.ConnectIRobotStream(Microsoft.Robotics.Services.IRobot.Roomba.RoombaState)">
            <summary>
            Configure the IRobot Stream
            <remarks>This should be called any time the
            iRobot configuration changes</remarks>
            </summary>
            <param name="state"></param>
            <returns>The Configuration Response Port</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.SendRoombaCommand(Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommand)">
            <summary>
            Send a Roomba command and wait for the reply.
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.SendCommand(Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommand,Microsoft.Ccr.Core.IPortSet)">
            <summary>
            Send a command to the iRobot and post the response to responsePort.
            </summary>
            <param name="cmd"></param>
            <param name="responsePort"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.ProcessCommand(Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommand,Microsoft.Ccr.Core.IPortSet)">
            <summary>
            <remarks>SpawnIterator[RoombaCommand, IPortSet](ProcessCommand)</remarks>
            </summary>
            <param name="cmd"></param>
            <param name="responsePort"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.DefaultSubmitResponseTypeHandler(Microsoft.Dss.ServiceModel.Dssp.DefaultSubmitResponseType)">
            <summary>
            Default Submit Response Type Handler
            </summary>
            <param name="ok"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.GetModeCommand(Microsoft.Robotics.Services.IRobot.Roomba.RoombaSetMode)">
            <summary>
            Set the iRobot Mode
            </summary>
            <param name="roombaSetMode"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.HttpPostSuccess(Microsoft.Dss.Core.DsspHttp.HttpPost,Microsoft.Robotics.Services.IRobot.Roomba.RoombaState,System.String)">
            <summary>
            Send Http Post Success Response
            </summary>
            <param name="httpPost"></param>
            <param name="state"></param>
            <param name="transform"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.HttpPostFailure(Microsoft.Dss.Core.DsspHttp.HttpPost,W3C.Soap.Fault)">
            <summary>
            Send Http Post Failure Response
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.BrowseToThisService(System.Boolean)">
            <summary>
            Start up the web browser so user can configure
            </summary>
            <param name="triedToConnect"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.StartTimer(System.Int32)">
            <summary>
            Start the timer
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.TimerHandler(System.DateTime)">
            <summary>
            The Timer Handler fires every _tickInterval milliseconds
            </summary>
            <param name="time"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.WaitForNextTimer(System.DateTime)">
            <summary>
            Wait for _tickInterval before calling the TimerHandler
            </summary>
            <param name="ok"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.WaitForNextTimer(Microsoft.Robotics.Services.IRobot.Roomba.ReturnAll)">
            <summary>
            Wait for _tickInterval before calling the TimerHandler
            </summary>
            <param name="ok"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.WaitForNextTimer">
            <summary>
            Wait for _tickInterval before calling the TimerHandler
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.SendNotification``1(System.Object)">
            <summary>
            Sends a message to the subscription manager to send a notification.
            </summary>
            <typeparam name="T">The message type to send as a notification</typeparam>
            <param name="notificationBody">Message body to send in the notification</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.SendNotification``1(System.String,System.Object)">
            <summary>
            Sends a message to the subscription manager to send a notification.
            </summary>
            <typeparam name="T">The message type to send as a notification</typeparam>
            <param name="subscriber">Address of a subscriber to notify. If this is null or Empty then all subscribers are notified</param>
            <param name="notificationBody">Message body to send in the notification</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.SendNotification``1(``0)">
            <summary>
            Send Notification (without SubMgr)
            </summary>
            <typeparam name="T"></typeparam>
            <param name="notification"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteService.SendNotification``1(System.String,``0)">
            <summary>
            Sends a message to the subscription manager to send a notification.
            </summary>
            <typeparam name="T">The message type to send as a notification</typeparam>
            <param name="subscriber">Address of a subscriber to notify. If this is null or Empty then all subscribers are notified</param>
            <param name="notification">Message to send as a notification</param>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations">
            <summary>
            IRobotLite Main Operations Port
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.#ctor">
            <summary>
            IRobotLite Main Operations Port
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations)~Microsoft.Ccr.Core.Port{Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup}">
            <summary>
            Implicit Operator for Port of DsspDefaultLookup
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations)~Microsoft.Ccr.Core.Port{Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop}">
            <summary>
            Implicit Operator for Port of DsspDefaultDrop
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.Get}">
            <summary>
            Implicit Operator for Port of irobot.Get
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations)~Microsoft.Ccr.Core.Port{Microsoft.Dss.Core.DsspHttp.HttpGet}">
            <summary>
            Implicit Operator for Port of Microsoft.Dss.Core.DsspHttp.HttpGet
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations)~Microsoft.Ccr.Core.Port{Microsoft.Dss.Core.DsspHttp.HttpPost}">
            <summary>
            Implicit Operator for Port of Microsoft.Dss.Core.DsspHttp.HttpPost
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.SensorUpdates.Subscribe}">
            <summary>
            Implicit Operator for Port of sensorupdates.Subscribe
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.Connect}">
            <summary>
            Implicit Operator for Port of irobot.Connect
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.Configure}">
            <summary>
            Implicit Operator for Port of irobot.Configure
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.RoombaSetMode}">
            <summary>
            Implicit Operator for Port of irobot.RoombaSetMode
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.RoombaSetLeds}">
            <summary>
            Implicit Operator for Port of irobot.RoombaSetLeds
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.RoombaPlaySong}">
            <summary>
            Implicit Operator for Port of irobot.RoombaPlaySong
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.RoombaGetSensors}">
            <summary>
            Implicit Operator for Port of irobot.RoombaGetSensors
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.RoombaDrive}">
            <summary>
            Implicit Operator for Port of irobot.RoombaDrive
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Create.CreateDriveDirect}">
            <summary>
            Implicit Operator for Port of create.CreateDriveDirect
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateAll}">
            <summary>
            Implicit Operator for Port of sensorupdates.UpdateAll
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateBumpsCliffsAndWalls}">
            <summary>
            Implicit Operator for Port of sensorupdates.UpdateBumpsCliffsAndWalls
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdatePose}">
            <summary>
            Implicit Operator for Port of sensorupdates.UpdatePose
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdatePower}">
            <summary>
            Implicit Operator for Port of sensorupdates.UpdatePower
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateMode}">
            <summary>
            Implicit Operator for Port of sensorupdates.UpdateMode
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateCliffDetail}">
            <summary>
            Implicit Operator for Port of sensorupdates.UpdateCliffDetail
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateTelemetry}">
            <summary>
            Implicit Operator for Port of sensorupdates.UpdateTelemetry
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateNotifications}">
            <summary>
            Implicit Operator for Port of sensorupdates.UpdateNotifications
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.Post(System.Object)">
            <summary>
            Untyped Post
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.DsspDefaultLookup(Microsoft.Dss.ServiceModel.Dssp.LookupRequestType)">
            <summary>
            Post DsspDefaultLookup and return the response port.
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.DsspDefaultLookup">
            <summary>
            Post DsspDefaultLookup and return the response port.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.DsspDefaultDrop(Microsoft.Dss.ServiceModel.Dssp.DropRequestType)">
            <summary>
            Post DsspDefaultDrop and return the response port.
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.DsspDefaultDrop">
            <summary>
            Post DsspDefaultDrop and return the response port.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.Get(Microsoft.Dss.ServiceModel.Dssp.GetRequestType)">
            <summary>
            Post Get and return the response port.
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.Get">
            <summary>
            Post Get and return the response port.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.HttpGet(Microsoft.Dss.Core.DsspHttp.HttpGetRequestType)">
            <summary>
            Post HttpGet and return the response port.
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.HttpPost(Microsoft.Dss.Core.DsspHttp.HttpPostRequestType)">
            <summary>
            Post HttpPost and return the response port.
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.Subscribe(Microsoft.Dss.ServiceModel.Dssp.SubscribeRequestType,Microsoft.Ccr.Core.IPort)">
            <summary>
            Post Subscribe and return the response port.
            </summary>
            <param name="body"></param>
            <param name="notificationPort"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.Subscribe(Microsoft.Ccr.Core.IPort)">
            <summary>
            Post Subscribe and return the response port.
            </summary>
            <param name="notificationPort"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.Connect">
            <summary>
            Post Connect and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.Connect(Microsoft.Robotics.Services.IRobot.Roomba.IRobotConnect)">
            <summary>
            Post Connect and return the response port.
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.SetMode(Microsoft.Robotics.Services.IRobot.Roomba.CmdSetMode)">
            <summary>
            Post RoombaSetMode and return the response port.
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.SetLeds(Microsoft.Robotics.Services.IRobot.Roomba.CmdLeds)">
            <summary>
            Post RoombaSetLeds and return the response port.
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.PlaySong(Microsoft.Robotics.Services.IRobot.Roomba.CmdPlaySong)">
            <summary>
            Post RoombaPlaySong and return the response port.
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.GetSensors(Microsoft.Robotics.Services.IRobot.Roomba.CmdSensors)">
            <summary>
            Post RoombaGetSensors and return the response port.
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.RoombaDrive(Microsoft.Robotics.Services.IRobot.Roomba.CmdDrive)">
            <summary>
            Post RoombaDrive and return the response port.
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.DriveDirect(Microsoft.Robotics.Services.IRobot.Create.CmdDriveDirect)">
            <summary>
            Post CreateDriveDirect and return the response port.
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.IRobotLiteOperations.DriveDirect(System.Int32,System.Int32)">
            <summary>
            Post CreateDriveDirect and return the response port.
            </summary>
            <param name="rightVelocity"></param>
            <param name="leftVelocity"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Lite.SerialPortOperations">
            <summary>
            Serial Port Operations Port
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.SerialPortOperations.#ctor">
            <summary>
            Stream Service Operations Port
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.SerialPortOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Lite.SerialPortOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.DssStream.Proxy.ReplaceStreamState}">
            <summary>
            Implicit conversion
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.SerialPortOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Lite.SerialPortOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Lite.DataWaiting}">
            <summary>
            Implicit conversion
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.SerialPortOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Lite.SerialPortOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.DssStream.Proxy.WriteData}">
            <summary>
            Implicit conversion
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.SerialPortOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Lite.SerialPortOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.ProcessAtomicCommand}">
            <summary>
            Implicit conversion
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.SerialPortOperations.DataWaiting">
            <summary>
            Data Waiting
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.SerialPortOperations.WriteData(System.Byte[],System.DateTime)">
            <summary>
            Write Data Packet
            </summary>
            <param name="data"></param>
            <param name="timestamp"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.SerialPortOperations.ProcessAtomicCommand(Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommand)">
            <summary>
            Process an Atomic Command
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.SerialPortOperations.ConfigureAndConnect(Microsoft.Robotics.Services.DssStream.Proxy.StreamState)">
            <summary>
            Post Replace Stream State and return the response port.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Lite.DataWaitingInfo">
            <summary>
            Data Waiting Info
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Lite.WriteCommandInfo">
            <summary>
            Write Command Info
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Lite.WriteCommandInfo.AtomicCommand">
            <summary>
            Atomic Command
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.WriteCommandInfo.#ctor">
            <summary>
            Write Command Info
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.WriteCommandInfo.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.ProcessAtomicCommand)">
            <summary>
            Write Command Info
            </summary>
            <param name="atomicCommand"></param>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Lite.DataWaiting">
            <summary>
            Process waiting data on the serial port
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.DataWaiting.#ctor">
            <summary>
            Process waiting data on the serial port
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.DataWaiting.#ctor(Microsoft.Robotics.Services.IRobot.Lite.DataWaitingInfo)">
            <summary>
            Process waiting data on the serial port
            </summary>
            <param name="body"></param>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Lite.PrivateState">
            <summary>
            Private State
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Lite.PrivateState.Maxbuffer">
            <summary>
            Maximum buffer size
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.PrivateState.#ctor">
            <summary>
            Private State Initialization
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Lite.PrivateState.ReadBuffer">
            <summary>
            The inbound data
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Lite.PrivateState.Start">
            <summary>
            Index to the start of the current data
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Lite.PrivateState.End">
            <summary>
            Index to the byte following the end of the current data
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Lite.PrivateState.StreamState">
            <summary>
            Stream State
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Lite.PrivateState.SerialPort">
            <summary>
            Serial Port
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Lite.PrivateState.IRobotConnection">
            <summary>
            iRobot Connection
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Lite.PrivateState.PendingCommands">
            <summary>
            Pending Commands
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Lite.PrivateState.Initialized">
            <summary>
            iRobot is initialized
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Lite.PrivateState.BrowsedToService">
            <summary>
            Have we already opened a browser to configure the service?
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Lite.Contract">
            <summary>
            IRobotLite Contract class
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Lite.Contract.Identifier">
            <summary>
            The Dss Service contract
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.DssStream.iRobotStreamService">
            <summary>
            iRobotstream Service
            </summary>
            <remarks>The iRobot stream service calls to the serial port and may block a thread
            The ActivationSettings attribute with Sharing == false makes the runtime
            dedicate a dispatcher thread pool just for this service.</remarks>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.DssStream.iRobotStreamService._mainPort">
            <summary>
            _main Port
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.DssStream.iRobotStreamService._state">
            <summary>
            Stream state
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.DssStream.iRobotStreamService._serialPort">
            <summary>
            The connection to the iRobot
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.DssStream.iRobotStreamService.#ctor(Microsoft.Dss.ServiceModel.Dssp.DsspServiceCreationPort)">
            <summary>
            Default Service Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.DssStream.iRobotStreamService.Start">
            <summary>
            Service Start
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.DssStream.iRobotStreamService.WriteDataHandler(Microsoft.Robotics.Services.DssStream.Proxy.WriteData)">
            <summary>
            Write Data to the iRobot devices
            </summary>
            <param name="submit"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.DssStream.iRobotStreamService.WriteTextHandler(Microsoft.Robotics.Services.DssStream.Proxy.WriteText)">
            <summary>
            Write Text to the iRobot device
            </summary>
            <param name="submit"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.DssStream.iRobotStreamService.ReplaceHandler(Microsoft.Robotics.Services.DssStream.Proxy.ReplaceStreamState)">
            <summary>
            Configure the iRobot communications stream
            </summary>
            <param name="replace"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.DssStream.iRobotStreamService.ClearStreamBuffersHandler(Microsoft.Robotics.Services.DssStream.Proxy.ClearStreamBuffers)">
            <summary>
            Clear Stream Buffers
            </summary>
            <param name="clearBuffers"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.DssStream.iRobotStreamService.SetStreamPropertyHandler(Microsoft.Robotics.Services.DssStream.Proxy.SetStreamProperty)">
            <summary>
            Set Stream Property Handler
            </summary>
            <param name="setStreamProperty"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.DssStream.iRobotStreamService.QueryStreamPropertyHandler(Microsoft.Robotics.Services.DssStream.Proxy.QueryStreamProperty)">
            <summary>
            Query Stream Property Handler
            </summary>
            <param name="queryStreamProperty"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.DssStream.iRobotStreamService.ReadDataHandler(Microsoft.Robotics.Services.DssStream.Proxy.ReadData)">
            <summary>
            ReadData is a notification and invalid when sent to the stream service.
            </summary>
            <param name="insert"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.DssStream.iRobotStreamService.ReadTextHandler(Microsoft.Robotics.Services.DssStream.Proxy.ReadText)">
            <summary>
            ReadText is a notification and invalid when sent to the stream service.
            </summary>
            <param name="insert"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.DssStream.iRobotStreamService.GetStreamStateHandler(Microsoft.Robotics.Services.DssStream.Proxy.GetStreamState)">
            <summary>
            GetStreamState Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.DssStream.iRobotStreamService.SubscribeHandler(Microsoft.Robotics.Services.DssStream.Proxy.Subscribe)">
            <summary>
            Subscribe Handler
            </summary>
            <param name="subscribe"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.DssStream.iRobotStreamService.ReliableSubscribeHandler(Microsoft.Robotics.Services.DssStream.Proxy.ReliableSubscribe)">
            <summary>
            ReliableSubscribe Handler
            </summary>
            <param name="subscribe"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.DssStream.iRobotStreamService.DropHandler(Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop)">
            <summary>
            Release serial port resources
            </summary>
            <param name="drop"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.DssStream.iRobotStreamService.Connect">
            <summary>
            Connect to the underlying communications port.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.DssStream.iRobotStreamService._serialPort_DataReceived(System.Object,System.IO.Ports.SerialDataReceivedEventArgs)">
            <summary>
            Receive data from the serial port
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.DssStream.iRobotStreamService.CloseConnection(System.Boolean)">
            <summary>
            Close the Connection
            </summary>
            <param name="dispose"></param>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.DssStream.Contract">
            <summary>
            iRobotstream Contract
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.DssStream.Contract.Identifier">
            The Unique Contract Identifier for the iRobotstream service
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.DssStream.iRobotConnection">
            <summary>
            iRobot Connection class
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.DssStream.iRobotConnection.PortName">
            <summary>
            Port Name
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.DssStream.iRobotConnection.BaudRate">
            <summary>
            Baud Rate
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.DssStream.iRobotConnection.Encoding">
            <summary>
            Encoding
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.DssStream.iRobotConnection.Parity">
            <summary>
            Parity
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.DssStream.iRobotConnection.DataBits">
            <summary>
            Data Bits
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.DssStream.iRobotConnection.StopBits">
            <summary>
            Stop Bits
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.DssStream.iRobotConnection.Mode">
            <summary>
            Roomba Mode
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.DssStream.iRobotConnection.ConnectionType">
            <summary>
            Connection Type
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.DssStream.iRobotConnection.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.DssStream.iRobotConnection.#ctor(System.Int32)">
            <summary>
            Initialization Constructor
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Properties.Resources.ErrRoombaSilent">
            <summary>
              Looks up a localized string similar to Roomba is silent.  Asleep?.
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Properties.Resources.MsgUseIRobotLiteServiceForCE">
            <summary>
              Looks up a localized string similar to It is recommended to use the IRobotLite Service on .NET Compact Framework.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.DemoMode">
            <summary>
            Starts a Built-in demo on the iRobot Create.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.DemoMode.AbortCurrentDemo">
            <summary>
            Stops the current demo
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.DemoMode.Cover">
            <summary>
            Attempt to cover the entire room
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.DemoMode.CoverAndSeekDock">
            <summary>
            Cover the entire room, seeking the dock
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.DemoMode.SpotCover">
            <summary>
            Cover an area around the starting position by
            spiraling outward, then inward.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.DemoMode.Mouse">
            <summary>
            Search for a wall and then travel
            around the circumference of the room.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.DemoMode.DriveFigureEight">
            <summary>
            Drive continuously in a figure 8 pattern.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.DemoMode.Wimp">
            <summary>
            Drive forward when pushed from behind.  If Create
            hits an obstacle, it drives away from the obstacle.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.DemoMode.Home">
             <summary>
             Create drives toward an iRobot Virtual Wall as long
             as the back and sides of the virtual wall receiver
             are blinded by black electrical tape.
            
             A Virtual Wall emits infrared signals that Create
             sees with its Omnidirectional Infrared Receiver,
             located on top of the bumper.
            
             If you want Create to home in on a Virtual Wall,
             cover all but a small opening in the front of the
             infrared receiver with black electrical tape.
            
             Create spins to locate a virtual wall, then drives
             toward it.  Once Create hits the wall or another
             obstacle, it stops.
             </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.DemoMode.Tag">
            <summary>
            Idential to the Home demo, except Create drives
            into multiple virtual walls by bumping into one,
            turning around, driving to the next virtual wall,
            bumping into it and turning around to bump into
            the next virtual wall.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.DemoMode.Pachelbel">
            <summary>
            Create plays the notes of Pachelbel's Canon in
            sequence when cliff sensors are activated.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.DemoMode.Banjo">
            <summary>
            Create plays a note of a chord for each of its four cliff sensors.  Select the chord using the bumper, as follows:
            No bumper: G major
            Right or left bumper: D major 7
            both bumpers (center): C major
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket">
            <summary>
            Create Sensor Packets
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.AllRoomba">
            <summary>
            All Roomba Sensors, Pose and Power Packets
            <remarks>26 bytes</remarks>
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.AllBumpsCliffsAndWalls">
            <summary>
            Roomba Bumps, Cliffs, and Walls Return Packet
            <remarks>10 bytes</remarks>
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.AllPose">
            <summary>
            Pose Return Packet
            <remarks>6 bytes</remarks>
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.AllPower">
            <summary>
            Power Return Packet
            <remarks>10 bytes</remarks>
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.AllCliffDetail">
            <summary>
            Cliff Return Packet
            <remarks>14 bytes</remarks>
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.AllTelemetry">
            <summary>
            Telemetry Return Packet
            <remarks>12 bytes</remarks>
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.AllCreate">
            <summary>
            All Create Sensor data
            <remarks>52 bytes</remarks>
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.BumpsWheelDrops">
            <summary>
            Bumps And Wheel Drops
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.Wall">
            <summary>
            Wall
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.CliffLeft">
            <summary>
            Cliff Left
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.CliffFrontLeft">
            <summary>
            Cliff Front Left
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.CliffFrontRight">
            <summary>
            Cliff Front Right
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.CliffRight">
            <summary>
            Cliff Right
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.VirtualWall">
            <summary>
            Virtual Wall
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.MotorOvercurrents">
            <summary>
            Low Side Driver And Wheel Overcurrents
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.Unused15">
            <summary>
            Unused15
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.Unused16">
            <summary>
            Unused16
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.Infrared">
            <summary>
            Infrared
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.Buttons">
            <summary>
            Buttons
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.Distance">
            <summary>
            Distance
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.Angle">
            <summary>
            Angle
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.ChargingState">
            <summary>
            Charging State
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.Voltage">
            <summary>
            Voltage
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.Current">
            <summary>
            Current
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.BatteryTemperature">
            <summary>
            Battery Temperature
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.BatteryCharge">
            <summary>
            Battery Charge
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.BatteryCapacity">
            <summary>
            Battery Capacity
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.WallSignal">
            <summary>
            Wall Signal
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.CliffLeftSignal">
            <summary>
            Cliff Left Signal
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.CliffFrontLeftSignal">
            <summary>
            Cliff Front Left Signal
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.CliffFrontRightSignal">
            <summary>
            Cliff Front Right Signal
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.CliffRightSignal">
            <summary>
            Cliff Right Signal
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.CargoBayDigitalInputs">
            <summary>
            Cargo Bay Digital Inputs
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.CargoBayAnalogSignal">
            <summary>
            Cargo Bay Analog Signal
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.ChargingSourcesAvailable">
            <summary>
            Charging Sources Available
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.OIMode">
            <summary>
            OI Mode
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.SongNumber">
            <summary>
            Song Number
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.SongPlaying">
            <summary>
            Song Playing
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.NumberOfStreamPackets">
            <summary>
            Number Of Stream Packets
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.RequestedVelocity">
            <summary>
            Requested Velocity
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.RequestedRadius">
            <summary>
            Requested Radius
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.RequestedRightVelocity">
            <summary>
            Requested Right Velocity
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket.RequestedLeftVelocity">
            <summary>
            Requested Left Velocity
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.CargoBayDigitalInputs">
            <summary>
            Cargo Bay Digital Inputs
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CargoBayDigitalInputs.Pin17">
            <summary>
            Digital Input 0
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CargoBayDigitalInputs.Pin5">
            <summary>
            Digital Input 1
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CargoBayDigitalInputs.Pin18">
            <summary>
            Digital Input 2
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CargoBayDigitalInputs.Pin6">
            <summary>
            Digital Input 3
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CargoBayDigitalInputs.Pin15">
            <summary>
            Baud Rate Change
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CargoBayDigitalInputs.NA6">
            <summary>
            Not Applicable
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CargoBayDigitalInputs.NA7">
            <summary>
            Not Applicable
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.CargoBayDigitalInputs.NA8">
            <summary>
            Not Applicable
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.ChargingSourcesAvailable">
            <summary>
            Charging Sources Available
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.ChargingSourcesAvailable.InternalCharger">
            <summary>
            Internal Charger
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.ChargingSourcesAvailable.HomeBase">
            <summary>
            Home Base
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.ChargingSourcesAvailable.UnsupportedBit3">
            <summary>
            Unsupported Charging Source
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.ChargingSourcesAvailable.UnsupportedBit4">
            <summary>
            Unsupported Charging Source
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.ChargingSourcesAvailable.NA5">
            <summary>
            Not Applicable
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.ChargingSourcesAvailable.NA6">
            <summary>
            Not Applicable
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.ChargingSourcesAvailable.NA7">
            <summary>
            Not Applicable
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.ChargingSourcesAvailable.NA8">
            <summary>
            Not Applicable
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.ButtonsCreate">
            <summary>
            Create Physical Buttons
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.ButtonsCreate.Off">
            <summary>
            No Buttons Pressed
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.ButtonsCreate.Play">
            <summary>
            Create Play Button
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.ButtonsCreate.Bit2">
            <summary>
            Not Defined Flag 0x02
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.ButtonsCreate.Advance">
            <summary>
            Create Advance Button
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.ButtonsCreate.Bit4">
            <summary>
            Not Defined Flag 0x08
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.ButtonsCreate.Bit5">
            <summary>
            Not Defined Flag 0x10
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.ButtonsCreate.Bit6">
            <summary>
            Not Defined Flag 0x20
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.ButtonsCreate.Bit7">
            <summary>
            Not Defined Flag 0x40
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.ButtonsCreate.Bit8">
            <summary>
            Not Defined Flag 0x80
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.WaitEvent">
            <summary>
            Create Scripting Wait Event
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.None">
            <summary>
            No Event
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.WheelDrop">
            <summary>
            Wheel Drop
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.NoWheelDrop">
            <summary>
            No Wheel Drop
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.FrontWheelDrop">
            <summary>
            Front Wheel Drop
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.NoFrontWheelDrop">
            <summary>
            No Front Wheel Drop
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.LeftWheelDrop">
            <summary>
            Left Wheel Drop
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.NoLeftWheelDrop">
            <summary>
            No Left Wheel Drop
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.RightWheelDrop">
            <summary>
            Right Wheel Drop
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.NoRightWheelDrop">
            <summary>
            No Right Wheel Drop
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.Bump">
            <summary>
            Bump
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.NoBump">
            <summary>
            No Bump
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.LeftBump">
            <summary>
            Left Bump
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.NoLeftBump">
            <summary>
            No Left Bump
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.RightBump">
            <summary>
            Right Bump
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.NoRightBump">
            <summary>
            No Right Bump
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.VirtualWall">
            <summary>
            Virtual Wall
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.NoVirtualWall">
            <summary>
            No Virtual Wall
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.Wall">
            <summary>
            Wall
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.NoWall">
            <summary>
            No Wall
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.Cliff">
            <summary>
            Cliff
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.NoCliff">
            <summary>
            No Cliff
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.LeftCliff">
            <summary>
            Left Cliff
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.NoLeftCliff">
            <summary>
            No Left Cliff
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.FrontLeftCliff">
            <summary>
            Front Left Cliff
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.NoFrontLeftCliff">
            <summary>
            No Front Left Cliff
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.FrontRightCliff">
            <summary>
            Front Right Cliff
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.NoFrontRightCliff">
            <summary>
            No Front Right Cliff
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.RightCliff">
            <summary>
            Right Cliff
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.NoRightCliff">
            <summary>
            No Right Cliff
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.HomeBase">
            <summary>
            Home Base
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.NoHomeBase">
            <summary>
            No Home Base
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.AdvanceButton">
            <summary>
            Advance Button
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.NoAdvanceButton">
            <summary>
            No Advance Button
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.PlayButton">
            <summary>
            Play Button
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.NoPlayButton">
            <summary>
            No Play Button
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.DigitalInput0">
            <summary>
            Digital Input 0
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.NoDigitalInput0">
            <summary>
            No Digital Input 0
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.DigitalInput1">
            <summary>
            Digital Input 1
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.NoDigitalInput1">
            <summary>
            No Digital Input 1
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.DigitalInput2">
            <summary>
            Digital Input 2
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.NoDigitalInput2">
            <summary>
            No Digital Input 2
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.DigitalInput3">
            <summary>
            Digital Input 3
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.NoDigitalInput3">
            <summary>
            No Digital Input 3
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.ModePassive">
            <summary>
            Mode is Passive
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.WaitEvent.NoModePassive">
            <summary>
            Mode is not Passive
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.CmdDemo">
            <summary>
            Starts a Demo.
            <remarks>Works only with the iRobot Create.</remarks>
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommand">
            <summary>
            The base Roomba command format in which all commands inherit from
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommand.Command">
            <summary>
            The Roomba Command
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommand.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommand.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode)">
            <summary>
            Command Constructor
            </summary>
            <param name="command"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommand.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode,System.Boolean)">
            <summary>
            Command Constructor
            </summary>
            <param name="command"></param>
            <param name="iRobotCreate">Is this command specific to the iRobot Create?</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommand.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode,System.Byte[])">
            <summary>
            Command Constructor with data initialization
            </summary>
            <param name="command"></param>
            <param name="data"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommand.InitializeRoombaCommand">
            <summary>
            Initialize the Data array based on the command type.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommand.GetPacket">
            <summary>
            Convert internal data to a command packet.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommand.ExpectedResponseBytes">
            <summary>
            Does this command elicit a response from the iRobot?
            </summary>
            <returns>The size of the return packet, or 0 for none</returns>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommand.CmdTimeoutMs">
            <summary>
            How long should we wait for a response from this command?
            </summary>
            <returns>The command timeout in ms (0=default)</returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommand.Data">
            <summary>
            Command Data
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommand.MaintainMode">
            <summary>
            When set to Passive, Safe, or Full, this mode will be maintained,
            even after automatic mode changes and additional commands.
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommand.iRobotCreate">
            <summary>
            Identifies this as a command specific to the iRobot Create.
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommand.RoombaCommandCode">
            <summary>
            Returns the Roomba Command Code
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdDemo.#ctor">
            <summary>
            Start a Demo
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdDemo.#ctor(Microsoft.Robotics.Services.IRobot.Create.DemoMode)">
            <summary>
            Start the specified demo.
            </summary>
            <param name="demoMode"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdDemo.ToString">
            <summary>
            The string representation for this command.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.CmdDemo.DemoMode">
            <summary>
            The iRobot Create Demo Mode.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.CmdPWMLowSideDrivers">
            <summary>
            This command lets you control the three low side drivers
            with variable power. With each data byte, you specify the
            PWM duty cycle for the low side driver (max 128). For
            example, if you want to control a driver with 25% of battery
            voltage, choose a duty cycle of 128 * 25% = 32.
            <remarks>Available in Safe or Full mode</remarks>
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdPWMLowSideDrivers.#ctor">
            <summary>
            Control the three low side drivers with variable power.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdPWMLowSideDrivers.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Control the three low side drivers with variable power.
            </summary>
            <param name="digitalOut0">duty cycle (0 to 128)</param>
            <param name="digitalOut1">duty cycle (0 to 128)</param>
            <param name="digitalOut2">duty cycle (0 to 128)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdPWMLowSideDrivers.ToString">
            <summary>
            The string representation for this command.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.CmdPWMLowSideDrivers.DigitalOut0">
            <summary>
            Digital Out 0 (Pin 19)
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.CmdPWMLowSideDrivers.DigitalOut1">
            <summary>
            Digital Out 1 (Pin 7)
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.CmdPWMLowSideDrivers.DigitalOut2">
            <summary>
            Digital Out 2 (Pin 20)
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.CmdDriveDirect">
            <summary>
            This command lets you control the forward and backward motion of Create's drive
            wheels independently.  A positive velocity makes that wheel drive forward,
            while a negative velocity makes it drive backward.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdDriveDirect.#ctor">
            <summary>
            Control the forward and backward motion of Create's drive wheels.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdDriveDirect.#ctor(System.Int32,System.Int32)">
            <summary>
            Control the forward and backward motion of Create's drive wheels.
            </summary>
            <param name="rightVelocity">mm/s (-500 to +500)</param>
            <param name="leftVelocity">mm/s (-500 to +500)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdDriveDirect.ToString">
            <summary>
            The string representation for this command.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.CmdDriveDirect.RightVelocity">
            <summary>
            Right Velocity (-500 to +500 mm/s)
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.CmdDriveDirect.LeftVelocity">
            <summary>
            Left Velocity (-500 to +500 mm/s)
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.CmdDigitalOutputs">
            <summary>
            This command controls the state of the 3 digital output
            pins on the 25 pin Cargo Bay Connector. The digital outputs
            can provide up to 20 mA of current.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdDigitalOutputs.#ctor">
            <summary>
            Controls the state of the 3 digital output pins.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdDigitalOutputs.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Controls the state of the 3 digital output pins.
            </summary>
            <param name="digitalOut0">on = 5v</param>
            <param name="digitalOut1">on = 5v</param>
            <param name="digitalOut2">on = 5v</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdDigitalOutputs.ToString">
            <summary>
            The string representation for this command.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.CmdDigitalOutputs.DigitalOut0">
            <summary>
            Digital Output 0 (pin 19)
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.CmdDigitalOutputs.DigitalOut1">
            <summary>
            Digital Output 1 (pin 7)
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.CmdDigitalOutputs.DigitalOut2">
            <summary>
            Digital Output 2 (pin 20)
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.CmdStream">
            <summary>
            Request a stream of sensor data.
            Works only with the iRobot Create.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdStream.#ctor">
            <summary>
            Request a stream of data.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdStream.#ctor(System.Collections.Generic.List{Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket})">
            <summary>
            Request a stream of data.
            </summary>
            <param name="queryList"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdStream.GetList">
            <summary>
            Retrieve the list of stream data
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdStream.ToString">
            <summary>
            The string representation for this command.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.CmdQueryList">
            <summary>
            Query for a list of sensors.
            Works only with the iRobot Create.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdQueryList.#ctor">
            <summary>
            Query for a list of sensors.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdQueryList.#ctor(System.Collections.Generic.List{Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket})">
            <summary>
            Query for a list of sensors.
            </summary>
            <param name="queryList"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdQueryList.ExpectedResponseBytes">
            <summary>
            CmdQueryList expects data back from the iRobot
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdQueryList.QueryList">
            <summary>
            The initialized query list
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdQueryList.ToString">
            <summary>
            The string representation for this command.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.CmdStreamPauseResume">
            <summary>
            Pause/Resume a stream of sensor data.
            Works only with the iRobot Create.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdStreamPauseResume.#ctor">
            <summary>
            Pause or Resume Stream Data.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdStreamPauseResume.#ctor(System.Boolean)">
            <summary>
            Pause or Resume Stream Data.
            </summary>
            <param name="streamActive"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdStreamPauseResume.ToString">
            <summary>
            The string representation for this command.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.CmdStreamPauseResume.StreamActive">
            <summary>
            The requested stream state
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.CmdSendIR">
             <summary>
             This command sends the requested byte out of low side
             driver 1 (pin 23 on the Cargo Bay Connector), using the
             format expected by iRobot Create’s IR receiver. You must
             use a preload resistor (suggested value: 100 ohms) in
             parallel with the IR LED and its resistor in order turn it on.
            
             Works only with the iRobot Create.
             <remarks>Valid Range: 0 - 255</remarks>
             </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdSendIR.#ctor">
            <summary>
            Sends an IR Command out pin 23 on the Cargo Bay Connector.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdSendIR.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.RemoteIR)">
            <summary>
            Sends an IR Command out pin 23 on the Cargo Bay Connector.
            </summary>
            <param name="irCode"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdSendIR.ToString">
            <summary>
            The string representation for this command.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.CmdSendIR.IRCode">
            <summary>
            The requested IR Code
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.CmdDefineScript">
            <summary>
            Define an iRobot Create Script.
            This command defines a script to be played later. A script
            consists of OI commands and can be up to 100 bytes long.
            There is no flow control, but “wait” commands (see below)
            cause Create to hold its current state until the specified
            event is detected.
            Works only with the iRobot Create.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdDefineScript.#ctor">
            <summary>
            Define an iRobot Create Script.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdDefineScript.#ctor(System.Collections.Generic.List{Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommand})">
            <summary>
            Define an iRobot Create Script.
            </summary>
            <param name="scriptedCommands"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdDefineScript.SetScriptedCommands(System.Collections.Generic.List{Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommand})">
            <summary>
            Set the scripted commands
            </summary>
            <param name="scriptedCommands"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdDefineScript.ToString">
            <summary>
            The string representation for this command.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.CmdDefineScript.ScriptedCommands">
            <summary>
            The Commands which will be executed in order.
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.CmdDefineScript.Count">
            <summary>
            The count of script bytes
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.CmdDefineScript.ScriptResponseBytes">
            <summary>
            Returns the number of response bytes expected
            when the script is played.
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.CmdDefineScript.Data">
            <summary>
            If the number of items in the list has changed,
            Data is recalulated before being retrieved.
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.CmdDefineScript.PacketData">
            <summary>
            The script payload.  Use the iRobot Create Scripting Engine.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.CmdPlayScript">
            <summary>
            Play the previously defined iRobot Create script.
            This command loads a previously defined OI script into the
            serial input queue for playback.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdPlayScript.#ctor">
            <summary>
            Play the previously defined iRobot Create script.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdPlayScript.#ctor(System.Int32)">
            <summary>
            Play the previously defined iRobot Create script.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdPlayScript.#ctor(System.Int32,System.Int32)">
            <summary>
            Play the previously defined iRobot Create script.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdPlayScript.ExpectedResponseBytes">
            <summary>
            The script being played may return data.
            This needs to be passed in to CmdPlayScript(expectedResponseBytes),
            or by setting ScriptResponseBytes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdPlayScript.ToString">
            <summary>
            The string representation for this command.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.CmdPlayScript.ScriptResponseBytes">
            <summary>
            The expected number of response bytes returned when the script is played.
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.CmdPlayScript.TimeoutMs">
            <summary>
            The number of ms to wait before cancelling the script.
            <remarks>0 - Do not cancel</remarks>
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.CmdShowScript">
            <summary>
            Show the previously defined iRobot Create Script.
            This command returns the values of a previously stored
            script, starting with the number of bytes in the script and
            followed by the script’s commands and data bytes. It first
            halts the sensor stream, if one has been started with a
            Stream or Pause/Resume Stream command. To restart the
            stream, send Pause/Resume Stream (opcode 150).
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdShowScript.#ctor">
            <summary>
            Show the previously defined iRobot Create Script.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdShowScript.ToString">
            <summary>
            The string representation for this command.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.CmdWaitTime">
             <summary>
             This command causes Create to wait for the specified time.
             During this time, Create’s state does not change, nor does
             it react to any inputs, serial or otherwise.
            
             Works only with the iRobot Create.
             <remarks>The SCI may be in any mode to accept this
             command. This command does not change the mode.</remarks>
             <remarks>Valid Range: 0.0 - 25.5</remarks>
             </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdWaitTime.#ctor">
            <summary>
            Causes Create to wait for the specified time.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdWaitTime.#ctor(System.Double)">
            <summary>
            Causes Create to wait for the specified time.
            </summary>
            <param name="seconds">0.0 - 25.5</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdWaitTime.ToString">
            <summary>
            The string representation for this command.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.CmdWaitTime.Seconds">
            <summary>
            The number of seconds to wait.
            <remarks>0 - 25.5 seconds in 1/10 second increments with a 15ms resolution</remarks>
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.CmdWaitDistance">
             <summary>
             This command causes iRobot Create to wait until it has
             traveled the specified distance in mm. When Create travels
             forward, the distance is incremented. When Create travels
             backward, the distance is decremented. If the wheels
             are passively rotated in either direction, the distance is
             incremented. Until Create travels the specified distance,
             its state does not change, nor does it react to any inputs,
             serial or otherwise.
            
             Works only with the iRobot Create.
             <remarks>The SCI may be in any mode to accept this
             command. This command does not change the mode.</remarks>
             <remarks>Valid Range: -32767 - 32768</remarks>
             </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdWaitDistance.#ctor">
            <summary>
            Causes Create to wait until the wheels travel
            the specified distance in mm.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdWaitDistance.#ctor(System.Int32)">
            <summary>
            Causes Create to wait until the wheels travel
            the specified distance in mm.
            </summary>
            <param name="distance"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdWaitDistance.ToString">
            <summary>
            The string representation for this command.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.CmdWaitDistance.Distance">
            <summary>
            The distance to wait (mm).
            <remarks>-32767 - 32768</remarks>
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.CmdWaitAngle">
             <summary>
             This command causes Create to wait until it has rotated
             through specified angle in degrees. When Create turns
             counterclockwise, the angle is incremented. When Create
             turns clockwise, the angle is decremented. Until Create
             turns through the specified angle, its state does not change,
             nor does it react to any inputs, serial or otherwise.
            
             Works only with the iRobot Create.
             <remarks>The SCI may be in any mode to accept this
             command. This command does not change the mode.</remarks>
             <remarks>This command resets the angle variable that is
             returned in Sensors</remarks>
             <remarks>Valid Range: -32767 - 32768</remarks>
             </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdWaitAngle.#ctor">
            <summary>
            Causes Create to wait until the wheels rotate through the specified angle in degrees.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdWaitAngle.#ctor(System.Int32)">
            <summary>
            Causes Create to wait until the wheels rotate through the specified angle in degrees.
            </summary>
            <param name="angle"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdWaitAngle.ToString">
            <summary>
            The string representation for this command.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.CmdWaitAngle.Angle">
            <summary>
            The angle to wait (degrees).
            <remarks>-32767 - 32768</remarks>
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.CmdWaitEvent">
             <summary>
             This command causes Create to wait until it detects the
             specified event. Until the specified event is detected,
             Create’s state does not change, nor does it react to any
             inputs, serial or otherwise.
            
             Works only with the iRobot Create.
             <remarks>The SCI may be in any mode to accept this
             command. This command does not change the mode.</remarks>
             <remarks>Valid Range: 0.0 - 25.5</remarks>
             </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdWaitEvent.#ctor">
            <summary>
            Causes Create to wait until the specified event occurs.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdWaitEvent.#ctor(Microsoft.Robotics.Services.IRobot.Create.WaitEvent)">
            <summary>
            Causes Create to wait until the specified event occurs.
            </summary>
            <param name="waitEvent"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CmdWaitEvent.ToString">
            <summary>
            The string representation for this command.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.CmdWaitEvent.WaitEvent">
            <summary>
            The Event to wait for.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.SensorValue">
            <summary>
            An individual Sensor Value
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.SensorValue.#ctor">
            <summary>
            An individual Sensor Value
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.SensorValue.#ctor(Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket,System.Int32)">
            <summary>
            An individual Sensor Value
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.SensorValue.Sensor">
            <summary>
            The type of Sensor
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.SensorValue.Value">
            <summary>
            The Sensor Value
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.ReturnCliffDetail">
            <summary>
            Create CliffDetail Results
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.RoombaReturnPacket">
            <summary>
            The standard return package in which all return messages inherit from
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaReturnPacket.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaReturnPacket.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode)">
            <summary>
            Initialization Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaReturnPacket.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode,Microsoft.Robotics.Services.IRobot.Roomba.RoombaMode)">
            <summary>
            Initialization Constructor
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.RoombaReturnPacket.RoombaMode">
            <summary>
            The current mode of the Roomba after the command
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.RoombaReturnPacket.ValidPacket">
            <summary>
            Is the current packet valid?
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.RoombaReturnPacket.Timestamp">
            <summary>
            The timestamp when the data was received.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.ReturnCliffDetail.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.ReturnCliffDetail.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.RoombaMode,System.Byte[])">
            <summary>
            Initialization Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.ReturnCliffDetail.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.RoombaMode)">
            <summary>
            Initialization Constructor
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.ReturnCliffDetail.ValidPacket">
            <summary>
            Is the current packet valid?
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.ReturnCliffDetail.WallSignal">
            <summary>
            Wall Signal
            <remarks>0-4095</remarks>
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.ReturnCliffDetail.CliffLeftSignal">
            <summary>
            Cliff Left Signal
            <remarks>0-4095</remarks>
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.ReturnCliffDetail.CliffFrontLeftSignal">
            <summary>
            Cliff Front Left Signal
            <remarks>0-4095</remarks>
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.ReturnCliffDetail.CliffFrontRightSignal">
            <summary>
            Cliff Front Right Signal
            <remarks>0-4095</remarks>
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.ReturnCliffDetail.CliffRightSignal">
            <summary>
            Cliff Right Signal
            <remarks>0-4095</remarks>
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.ReturnCliffDetail.UserDigitalInputs">
            <summary>
            User Digital Inputs
            <remarks>0-31</remarks>
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.ReturnCliffDetail.UserAnalogInput">
            <summary>
            User Analog Input
            <remarks>0-1023</remarks>
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.ReturnCliffDetail.ChargingSourcesAvailable">
            <summary>
            Charging Sources Available
            <remarks>Valid Bits: 0-3</remarks>
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.ReturnTelemetry">
            <summary>
            Create Telemetry Results
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.ReturnTelemetry.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.ReturnTelemetry.#ctor(System.Byte[])">
            <summary>
            Initialization Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.ReturnTelemetry.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.RoombaMode)">
            <summary>
            Initialization Constructor
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.ReturnTelemetry.ValidPacket">
            <summary>
            Is the current packet valid?
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.ReturnTelemetry.OIMode">
            <summary>
            Open Interface Mode.
            A code indicating the current state of iRobot Create.
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.ReturnTelemetry.SongNumber">
            <summary>
            Song Number
            </summary>
            <remarks>Range 1-16</remarks>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.ReturnTelemetry.SongPlaying">
            <summary>
            Song Playing
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.ReturnTelemetry.NumberOfStreamPackets">
            <summary>
            Number of Stream Packets
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.ReturnTelemetry.RequestedVelocity">
            <summary>
            The velocity most recently requested with a Drive command.
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.ReturnTelemetry.RequestedRadius">
            <summary>
            The radius most recently requested with a Drive command.
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.ReturnTelemetry.RequestedRightVelocity">
            <summary>
            The right wheel velocity most recently requested with a Drive Direct command.
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.ReturnTelemetry.RequestedLeftVelocity">
            <summary>
            The left wheel velocity most recently requested with a Drive Direct command.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.ReturnQueryList">
            <summary>
            Create QueryList Results
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.ReturnQueryList.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.ReturnQueryList.#ctor(System.Byte[],Microsoft.Robotics.Services.IRobot.Create.CmdQueryList)">
            <summary>
            Initialization Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.ReturnQueryList.NamedValues(Microsoft.Robotics.Services.IRobot.Roomba.RoombaState)">
            <summary>
            Parse the query list packet into
            a list of named values
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.ReturnQueryList.ParseNamedValues(Microsoft.Robotics.Services.IRobot.Roomba.RoombaState)">
            <summary>
            Parse named values from the query list return data.
            </summary>
            <param name="currentState"></param>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.ReturnQueryList.ValidPacket">
            <summary>
            Is the current packet valid?
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.ReturnStream">
            <summary>
            Create Stream Results
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.ReturnStream.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.ReturnStream.#ctor(System.Byte[],System.DateTime)">
            <summary>
            Initialization Constructor
            </summary>
            <param name="data"></param>
            <param name="timestamp"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.ReturnStream.RetrieveChangedValues(Microsoft.Robotics.Services.IRobot.Roomba.RoombaState)">
            <summary>
            Parse the notification packet into
            a list of named values
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.ReturnStream.ParseNamedValues(Microsoft.Robotics.Services.IRobot.Roomba.RoombaState)">
            <summary>
            Parse a notification packet.
            </summary>
            <param name="currentState"></param>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.ReturnStream.ValidPacket">
            <summary>
            Is the current packet valid?
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.ReturnStream.StreamPacket">
            <summary>
            The stream packet data
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.ReturnStream.NamedValues">
            <summary>
            The Named Values which have changed.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.ReturnScript">
            <summary>
            Create Script Results
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.ReturnScript.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.ReturnScript.#ctor(System.Byte[],System.DateTime)">
            <summary>
            Initialization Constructor
            </summary>
            <param name="data"></param>
            <param name="timestamp"></param>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.ReturnScript.ValidPacket">
            <summary>
            Is the current packet valid?
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.ReturnScript.ScriptPacket">
            <summary>
            The stream packet data
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.ReturnDefineScript">
            <summary>
            The Define Script response
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.ReturnDefineScript.#ctor">
            <summary>
            The Define Script response
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.ReturnDefineScript.#ctor(System.Int32)">
            <summary>
            The Define Script response
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.ReturnDefineScript.ScriptResponseBytes">
            <summary>
            The expected number of response bytes returned when the script is played.
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.ReturnDefineScript.ValidPacket">
            <summary>
            Identify this as a valid packet
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.CreateDemo">
            <summary>
            Starts a Demo on the iRobot Create.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateDemo.#ctor">
            <summary>
            Starts a Demo on the iRobot Create.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateDemo.#ctor(Microsoft.Robotics.Services.IRobot.Create.DemoMode)">
            <summary>
            Starts a Demo on the iRobot Create.
            </summary>
            <param name="demoMode"></param>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.CreatePWMLowSideDrivers">
            <summary>
            This command lets you control the three low side drivers
            with variable power. With each data byte, you specify the
            PWM duty cycle for the low side driver (max 128). For
            example, if you want to control a driver with 25% of battery
            voltage, choose a duty cycle of 128 * 25% = 32.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreatePWMLowSideDrivers.#ctor">
            <summary>
            Control the three low side drivers with variable power.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreatePWMLowSideDrivers.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Control the three low side drivers with variable power.
            </summary>
            <param name="digitalOut0">duty cycle (0 to 128)</param>
            <param name="digitalOut1">duty cycle (0 to 128)</param>
            <param name="digitalOut2">duty cycle (0 to 128)</param>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.CreateDriveDirect">
            <summary>
            Controls Create's drive wheels.
            <remarks>This command lets you control the forward and backward
            motion of Create’s drive wheels independently. It takes
            four data bytes, which are interpreted as two 16-bit signed
            values using two’s complement. The first two bytes specify
            the velocity of the right wheel in millimeters per second
            (mm/s), with the high byte sent first. The next two bytes
            specify the velocity of the left wheel, in the same format.
            A positive velocity makes that wheel drive forward, while a
            negative velocity makes it drive backward.</remarks>
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateDriveDirect.#ctor">
            <summary>
            Control the forward and backward motion of Create's drive wheels.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateDriveDirect.#ctor(System.Int32,System.Int32)">
            <summary>
            Control the forward and backward motion of Create's drive wheels.
            </summary>
            <param name="rightVelocity">mm/s (-500 to +500)</param>
            <param name="leftVelocity">mm/s (-500 to +500)</param>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.CreateDigitalOutputs">
            <summary>
            This command controls the state of the 3 digital output
            pins on the 25 pin Cargo Bay Connector. The digital outputs
            can provide up to 20 mA of current.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateDigitalOutputs.#ctor">
            <summary>
            Controls the state of the 3 digital output pins.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateDigitalOutputs.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Controls the state of the 3 digital output pins.
            </summary>
            <param name="digitalOut0">on = 5v</param>
            <param name="digitalOut1">on = 5v</param>
            <param name="digitalOut2">on = 5v</param>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.CreateStream">
            <summary>
            Request a stream of data.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateStream.#ctor">
            <summary>
            Request a stream of data.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateStream.#ctor(System.Collections.Generic.List{Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket})">
            <summary>
            Request a stream of data.
            </summary>
            <param name="queryList"></param>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.CreateQueryList">
            <summary>
            Query for a list of sensors.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateQueryList.#ctor">
            <summary>
            Query for a list of sensors.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateQueryList.#ctor(System.Collections.Generic.List{Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket})">
            <summary>
            Query for a list of sensors.
            </summary>
            <param name="queryList"></param>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.CreateStreamPauseResume">
            <summary>
            Pause or Resume Stream Data.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateStreamPauseResume.#ctor">
            <summary>
            Pause or Resume Stream Data.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateStreamPauseResume.#ctor(System.Boolean)">
            <summary>
            Pause or Resume Stream Data.
            </summary>
            <param name="streamActive"></param>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.CreateSendIR">
            <summary>
            Sends an IR Command out pin 23 on the Cargo Bay Connector.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateSendIR.#ctor">
            <summary>
            Sends an IR Command out pin 23 on the Cargo Bay Connector.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateSendIR.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.RemoteIR)">
            <summary>
            Sends an IR Command out pin 23 on the Cargo Bay Connector.
            </summary>
            <param name="irCode"></param>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.CreateDefineScript">
            <summary>
            Define an iRobot Create Script.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateDefineScript.#ctor">
            <summary>
            Define an iRobot Create Script.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateDefineScript.#ctor(System.Collections.Generic.List{Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommand})">
            <summary>
            Define an iRobot Create Script.
            </summary>
            <param name="scriptedCommands"></param>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.CreatePlayScript">
            <summary>
            Play the previously defined iRobot Create script.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreatePlayScript.#ctor">
            <summary>
            Play the previously defined iRobot Create script.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.CreateShowScript">
            <summary>
            Show the previously defined iRobot Create Script.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateShowScript.#ctor">
            <summary>
            Show the previously defined iRobot Create Script.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.CreateWaitTime">
            <summary>
            Causes Create to wait for the specified time.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateWaitTime.#ctor">
            <summary>
            Causes Create to wait for the specified time.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateWaitTime.#ctor(System.Double)">
            <summary>
            Causes Create to wait for the specified time.
            </summary>
            <param name="seconds">0.0 - 25.5</param>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.CreateWaitDistance">
            <summary>
            Causes Create to wait for the specified distance.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateWaitDistance.#ctor">
            <summary>
            Causes Create to wait until the wheels travel the specified distance in mm.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateWaitDistance.#ctor(System.Int32)">
            <summary>
            Causes Create to wait until the wheels travel the specified distance in mm.
            </summary>
            <param name="distance">-32767 - 32768 mm</param>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.CreateWaitAngle">
            <summary>
            Causes Create to wait until the wheels rotate through the specified angle in degrees.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateWaitAngle.#ctor">
            <summary>
            Causes Create to wait until the wheels rotate through the specified angle in degrees.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateWaitAngle.#ctor(System.Int32)">
            <summary>
            Causes Create to wait until the wheels rotate through the specified angle in degrees.
            </summary>
            <param name="angle">-32767 - 32768 degrees</param>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.CreateWaitEvent">
            <summary>
            Causes Create to wait until the specified event occurs.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateWaitEvent.#ctor">
            <summary>
            Causes Create to wait until the specified event occurs.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateWaitEvent.#ctor(Microsoft.Robotics.Services.IRobot.Create.WaitEvent)">
            <summary>
            Causes Create to wait until the specified event occurs.
            </summary>
            <param name="waitEvent"></param>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.IRobotUtility">
            <summary>
            Create Utilities
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.IRobotUtility.ConvertToDrive(System.Double,System.Double)">
            <summary>
            Convert Left and Right Normalized Power to a Roomba Drive command
            </summary>
            <param name="leftPower"></param>
            <param name="rightPower"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.IRobotUtility.ValidateNotification(System.Byte[],System.Int32)">
            <summary>
            Validate a notification packet.
            </summary>
            <param name="data"></param>
            <param name="start">0 based start of the data within data buffer</param>
            <returns>the size of the notification packet or 0</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.IRobotUtility.ReturnIRobotCommand(System.Byte[],System.Int32,Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommand@)">
            <summary>
            Retrieve a Roomba Command from its packet form
            </summary>
            <param name="data"></param>
            <param name="ix"></param>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.IRobotUtility.DefinePlayfulSong(System.Int32)">
            <summary>
            Define a Song
            </summary>
            <param name="songId"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.IRobotUtility.DefineSimpleSong(System.Int32)">
            <summary>
            Define a Song
            </summary>
            <param name="songId"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.IRobotUtility.DefineAscendingSong(System.Int32)">
            <summary>
            Define two ascending notes
            </summary>
            <param name="songId"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.IRobotUtility.DefineDecendingSong(System.Int32)">
            <summary>
            Define two descending notes
            </summary>
            <param name="songId"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.IRobotUtility.AdjustDistanceAndAngle(Microsoft.Robotics.Services.IRobot.Roomba.ReturnPose,Microsoft.Robotics.Services.IRobot.Roomba.ReturnPose)">
            <summary>
            Adjust the newPose Distance and Angle
            to be cumulative based on priorPose.
            </summary>
            <param name="newPose"></param>
            <param name="priorPose"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.IRobotUtility.SensorListToString(System.Collections.Generic.List{Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket})">
            <summary>
            Returns the string representation of a List of CreateSensorPacket's.
            </summary>
            <param name="sensorList"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.IRobotUtility.FindFirmwarePacket(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Find a firmware packet in the specified buffer
            </summary>
            <param name="data">the data buffer</param>
            <param name="start">starting index of the buffer</param>
            <param name="end">index which is one past the last byte of the buffer</param>
            <returns>The index of the start of the firmware packet or -1</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.IRobotUtility.ReturnListSize(System.Collections.Generic.List{Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket})">
            <summary>
            The size of the specified list of return packets
            </summary>
            <param name="packetList"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.IRobotUtility.ReturnNotificationSize(System.Collections.Generic.List{Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket})">
            <summary>
            The Notification size for a list of sensors.
            </summary>
            <param name="packetList"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.IRobotUtility.ReturnPacketSize(Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket)">
            <summary>
            The size of the specified return packet
            </summary>
            <param name="sensor"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.IRobotUtility.ProcessSensorCode(Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket,System.Byte[],System.Int32,Microsoft.Robotics.Services.IRobot.Roomba.RoombaState,System.DateTime,System.Collections.Generic.Dictionary{Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket,System.Int32}@)">
            <summary>
            Retrieve the current sensor code from data at ix.
            Advance ix to the next byte after the current data.
            </summary>
            <param name="code"></param>
            <param name="data"></param>
            <param name="ix"></param>
            <param name="currentState"></param>
            <param name="timestamp"></param>
            <param name="namedValues"></param>
            <returns>ix</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.IRobotUtility.GetDiffByte(Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket,System.Int32,System.Byte[],System.Int32,System.Collections.Generic.Dictionary{Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket,System.Int32}@)">
            <summary>
            Retrieve an unsigned byte, compare to the original value
            and Add to our list only if the value has changed.
            </summary>
            <param name="code"></param>
            <param name="data"></param>
            <param name="originalValue"></param>
            <param name="ix"></param>
            <param name="namedValues"></param>
            <returns>ix</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.IRobotUtility.GetDiffUShort(Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket,System.Int32,System.Byte[],System.Int32,System.Collections.Generic.Dictionary{Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket,System.Int32}@)">
            <summary>
            Retrieve a 2-byte unsigned integer, compare to the original value
            and Add to our list only if the value has changed.
            </summary>
            <param name="code"></param>
            <param name="data"></param>
            <param name="originalValue"></param>
            <param name="ix"></param>
            <param name="namedValues"></param>
            <returns>ix</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.IRobotUtility.GetDiffShort(Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket,System.Int32,System.Byte[],System.Int32,System.Collections.Generic.Dictionary{Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket,System.Int32}@)">
            <summary>
            Retrieve a 2-byte integer, compare to the original value
            and Add to our list only if the value has changed.
            </summary>
            <param name="code"></param>
            <param name="data"></param>
            <param name="originalValue"></param>
            <param name="ix"></param>
            <param name="namedValues"></param>
            <returns>ix</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.IRobotUtility.UnpackPose(Microsoft.Robotics.Services.IRobot.Roomba.RoombaState,System.Byte[],System.Int32,System.Collections.Generic.Dictionary{Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket,System.Int32}@)">
            <summary>
            Unpack Pose (6 bytes starting at data[ix])
            </summary>
            <param name="currentState"></param>
            <param name="data"></param>
            <param name="ix"></param>
            <param name="namedValues"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.IRobotUtility.UnpackPower(Microsoft.Robotics.Services.IRobot.Roomba.RoombaState,System.Byte[],System.Int32,System.Collections.Generic.Dictionary{Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket,System.Int32}@)">
            <summary>
            Unpack Power (10 bytes starting at data[ix])
            </summary>
            <param name="currentState"></param>
            <param name="data"></param>
            <param name="ix"></param>
            <param name="namedValues"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.IRobotUtility.UnpackTelemetry(Microsoft.Robotics.Services.IRobot.Roomba.RoombaState,System.Byte[],System.Int32,System.Collections.Generic.Dictionary{Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket,System.Int32}@)">
            <summary>
            Unpack Telemetry (12 bytes starting at data[ix])
            </summary>
            <param name="currentState"></param>
            <param name="data"></param>
            <param name="ix"></param>
            <param name="namedValues"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.IRobotUtility.UnpackSensors(Microsoft.Robotics.Services.IRobot.Roomba.RoombaState,System.Byte[],System.Int32,System.DateTime,System.Collections.Generic.Dictionary{Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket,System.Int32}@)">
            <summary>
            Unpack Sensors (10 bytes starting at data[ix])
            </summary>
            <param name="currentState"></param>
            <param name="data"></param>
            <param name="ix"></param>
            <param name="timestamp"></param>
            <param name="namedValues"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.IRobotUtility.UnpackCliffDetail(Microsoft.Robotics.Services.IRobot.Roomba.RoombaState,System.Byte[],System.Int32,System.Collections.Generic.Dictionary{Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket,System.Int32}@)">
            <summary>
            Unpack Cliff Details (14 bytes starting at data[ix])
            </summary>
            <param name="currentState"></param>
            <param name="data"></param>
            <param name="ix"></param>
            <param name="namedValues"></param>
            <returns>The updated index</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.IRobotUtility.ParseConfiguration(Microsoft.Robotics.Services.DssStream.Proxy.StreamState,Microsoft.Robotics.Services.IRobot.DssStream.iRobotConnection@)">
            <summary>
            Parse the iRobot stream configuration and update the internal iRobotConnection.
            </summary>
            <returns>true when a Serial Port is configured</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.IRobotUtility.GetConfigurationEnum``1(System.Collections.Generic.List{Microsoft.Robotics.Services.DssStream.Proxy.NameValuePair},System.String,``0)">
            <summary>
            Get an enum configuration
            </summary>
            <typeparam name="T"></typeparam>
            <param name="configurations"></param>
            <param name="name"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.IRobotUtility.GetConfigurationNumber(System.Collections.Generic.List{Microsoft.Robotics.Services.DssStream.Proxy.NameValuePair},System.String,System.Int32)">
            <summary>
            Get a named configuration parameter
            </summary>
            <param name="configurations"></param>
            <param name="name"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.IRobotUtility.GetConfiguration(System.Collections.Generic.List{Microsoft.Robotics.Services.DssStream.Proxy.NameValuePair},System.String,System.String)">
            <summary>
            Get a named configuration parameter
            </summary>
            <param name="configurations"></param>
            <param name="name"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.IRobotUtility.FindNameValue(System.Collections.Generic.List{Microsoft.Robotics.Services.DssStream.Proxy.NameValuePair},System.String)">
            <summary>
            Find the value of a name/value pair
            </summary>
            <param name="list"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.IRobotUtility.FindNameValuePair(System.Collections.Generic.List{Microsoft.Robotics.Services.DssStream.Proxy.NameValuePair},System.String)">
            <summary>
            Find a NameValuePair in the specified list
            </summary>
            <param name="list"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.IRobotUtility.SetNameValue(System.Collections.Generic.List{Microsoft.Robotics.Services.DssStream.Proxy.NameValuePair},System.String,System.String)">
            <summary>
            Add or set the value of a name/value pair
            </summary>
            <param name="list"></param>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.IRobotUtility.GetDefaultBaudRate(Microsoft.Robotics.Services.IRobot.Roomba.iRobotConnectionType,System.Int32)">
            <summary>
            Get the default Baud Rate for the specified
            Roomba connection type.
            <remarks>
            A baudRate of 0 will return the default baud rate
            for the specified connection type.
            Otherwise, baudRate will be returned.</remarks>
            </summary>
            <param name="iRobotConnectionType"></param>
            <param name="baudRate"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.IRobotUtility.ValidateState(Microsoft.Robotics.Services.IRobot.Roomba.RoombaState@,System.Boolean)">
            <summary>
            Make sure the specified state is valid.
            </summary>
            <param name="state"></param>
            <param name="initialize">Initialize the connection</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.IRobotUtility.ValidState(Microsoft.Robotics.Services.IRobot.Roomba.RoombaState)">
            <summary>
            Is the Roomba Configuration valid?
            </summary>
            <param name="_state"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.IRobotUtility.iRobotModelName(Microsoft.Robotics.Services.IRobot.Roomba.RoombaState)">
            <summary>
            Return the name of the iRobot mdoel
            <remarks>use the generic "iRobot" when the model is unknown.</remarks>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.IRobotUtility.ValidStateForCommand(Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommand,Microsoft.Robotics.Services.IRobot.Roomba.RoombaState,Microsoft.Robotics.Services.IRobot.Roomba.RoombaMode@)">
            <summary>
            Valid state for command?
            </summary>
            <param name="cmd"></param>
            <param name="state"></param>
            <param name="newMode"></param>
            <returns>true when the RoombaMode is valid</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.IRobotUtility.SetModeCommand(Microsoft.Robotics.Services.IRobot.Roomba.RoombaMode,Microsoft.Robotics.Services.IRobot.Roomba.RoombaState)">
            <summary>
            Determine the Command necessary to place the Roomba into the specified mode.
            <remarks>Returns null if no command is necessary</remarks>
            </summary>
            <param name="newMode"></param>
            <param name="state"></param>
            <returns>A Command which will change the mode, or null</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.IRobotUtility.GetChangedMode(Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode,Microsoft.Robotics.Services.IRobot.Roomba.RoombaMode,Microsoft.Robotics.Services.IRobot.Roomba.IRobotModel,Microsoft.Robotics.Services.IRobot.Roomba.RoombaMode@)">
            <summary>
            Update the mode to reflect Create/Roomba state after the specified command is executed.
            </summary>
            <param name="roombaCommandCode"></param>
            <param name="priorMode"></param>
            <param name="iRobotModel"></param>
            <param name="newMode"></param>
            <returns>true when the mode will change</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.IRobotUtility.PacketDataSize(Microsoft.Robotics.Services.IRobot.Roomba.RoombaQueryType,System.Boolean)">
            <summary>
            Returns the Data size of the packet for the specified command.
            </summary>
            <param name="command"></param>
            <param name="isCreate">Is this an iRoomba Create?</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.IRobotUtility.PacketDataSize(Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode,System.Boolean)">
            <summary>
            Returns the Data size of the packet for the specified command.
            </summary>
            <param name="command"></param>
            <param name="isCreate">Is this an iRoomba Create?</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService">
            <summary>
            iRobot Roomba and Create Service Implementation
            </summary>
            <remarks>The iRobot Roomba service calls to the serial port and may block a thread
            The ActivationSettings attribute with Sharing == false makes the runtime
            dedicate a dispatcher thread pool just for this service.</remarks>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService._defaultPollingInterval">
            <summary>
            Default sensor polling rate without streaming sensors (ms)
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService._defaultPollingWithStreaming">
            <summary>
            Default sensor polling rate with streaming sensors (ms)
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService._minWirelessInterval">
            <summary>
            Minimum polling rate over wireless connection (ms)
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService._internalPort">
            <summary>
            Internal port for handling state updates
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.#ctor(Microsoft.Dss.ServiceModel.Dssp.DsspServiceCreationPort)">
            <summary>
            Default Service Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.Start">
            <summary>
            Service Start
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.GetModeCommand(Microsoft.Robotics.Services.IRobot.Roomba.RoombaSetMode,System.Boolean)">
            <summary>
            Set the iRobot Mode
            </summary>
            <param name="roombaSetMode"></param>
            <param name="isCreate"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.ValidateState(System.Boolean)">
            <summary>
            Make sure the state is valid
            </summary>
            <param name="initialize">Initialize the state</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.ConfigureIRobotStream(Microsoft.Robotics.Services.IRobot.Roomba.RoombaState)">
            <summary>
            Configure the IRobot Stream
            <remarks>This should be called any time the
            iRobot configuration changes</remarks>
            </summary>
            <param name="state"></param>
            <returns>The Configuration Response Port</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.SubscribeToStream">
            <summary>
            Subscribe to data from the iRobot serial port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.ReceiveText(Microsoft.Robotics.Services.DssStream.Proxy.ReadText)">
            <summary>
            Receive Text from iRobot communications stream
            </summary>
            <param name="insert"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.RequestedNotifications">
            <summary>
            Have we requested notifications?
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.ReceiveData(Microsoft.Robotics.Services.DssStream.Proxy.ReadData)">
            <summary>
            Receive Data from iRobot communications stream
            <remarks>This is guarded by an exclusive activation and
            received data packets will be processed one at a time.</remarks>
            </summary>
            <param name="insert"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.ShowBuffer(System.Byte[])">
            <summary>
            Display the current buffer
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.ProcessUnrequestedPackets(Microsoft.Robotics.Services.IRobot.Roomba.BytePacket,System.Int32,System.Boolean)">
            <summary>
            Process zero or more consecutive
            unrequested packets.
            </summary>
            <param name="processPacket"></param>
            <param name="startIx"></param>
            <param name="checkForNotifications"></param>
            <returns>The index of the next byte to process.
            0 - packet could not be processed.
            processPacket.Data.Length - The entire packet was processed.
            </returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.ProcessNotification(Microsoft.Robotics.Services.IRobot.Roomba.BytePacket,System.Int32)">
            <summary>
            Determine if this is a Notification.
            Post all pending bytes to the appropriate port.
            </summary>
            <param name="bytePacket">The data</param>
            <param name="startIx">The first byte to process</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.ProcessUnrequestedText(Microsoft.Robotics.Services.IRobot.Roomba.BytePacket,System.Int32)">
            <summary>
            Determine if this is a text string.
            Post textto the appropriate port.
            </summary>
            <param name="bytePacket">The data</param>
            <param name="startIx">The first byte to process</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.UpdateConfigureHandler(Microsoft.Robotics.Services.IRobot.Roomba.Configure)">
            <summary>
            Update iRobot Configuration
            </summary>
            <param name="configure"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.UpdateConnectHandler(Microsoft.Robotics.Services.IRobot.Roomba.Connect)">
            <summary>
            Update Connect Handler
            </summary>
            <param name="update"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.UpdateStatePoseHandler(Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdatePose)">
            <summary>
            Update state with current pose.
            </summary>
            <param name="updatePose"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.UpdateStatePowerHandler(Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdatePower)">
            <summary>
            Update state with current power.
            </summary>
            <param name="updatePower"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.UpdateStateSensorsHandler(Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateBumpsCliffsAndWalls)">
            <summary>
            Update state with current sensors.
            </summary>
            <param name="updateBumpsCliffsAndWalls"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.UpdateTelemetryHandler(Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateTelemetry)">
            <summary>
            Update state with current telemetry sensors.
            </summary>
            <param name="updateTelemetry"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.UpdateCliffDetailHandler(Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateCliffDetail)">
            <summary>
            Update state with current cliff sensors.
            </summary>
            <param name="updateCliffDetail"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.UpdateStateAllHandler(Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateAll)">
            <summary>
            Update state with all current sensors.
            </summary>
            <param name="updateAll"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.SetLastUpdatedHandler(System.DateTime)">
            <summary>
            Update the _state.LastUpdated
            </summary>
            <param name="lastUpdated"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.UpdateModeHandler(Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateMode)">
            <summary>
            Update state with the current Roomba Mode
            </summary>
            <param name="updateMode"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.GetRoombaMode(System.Byte)">
            <summary>
            Convert to Roomba Mode
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.GetRoombaMode(System.Int32)">
            <summary>
            Convert to Roomba Mode
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.UpdateStreamNotificationHandler(Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateNotifications)">
            <summary>
            Update state with the iRobot Create Stream Notification
            </summary>
            <param name="updateNotifications"></param>
            <remarks>Exclusive</remarks>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.ChangeToModeHandler(Microsoft.Robotics.Services.IRobot.Roomba.ChangeToMode)">
            <summary>
            Change to the specified Mode
            </summary>
            <param name="changeMode"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.ConnectHandler(Microsoft.Robotics.Services.IRobot.Roomba.Connect)">
            <summary>
            Connect Handler
            </summary>
            <param name="update"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.ConfigureHandler(Microsoft.Robotics.Services.IRobot.Roomba.Configure)">
            <summary>
            Connect with full Configuration Handler
            </summary>
            <param name="configure"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.GetHandler(Microsoft.Robotics.Services.IRobot.Roomba.Get)">
            <summary>
            Get Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.SubscribeHandler(Microsoft.Robotics.Services.IRobot.SensorUpdates.Subscribe)">
            <summary>
            General Subscription
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.DropHandler(Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop)">
            <summary>
            Custom Drop Handler
            </summary>
            <param name="drop"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.RoombaGetFirmwareDateHandler(Microsoft.Robotics.Services.IRobot.Roomba.RoombaGetFirmwareDate)">
            <summary>
            Roomba Get Firmware Date
            </summary>
            <param name="getFirmwareDate"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.RoombaSetModeHandler(Microsoft.Robotics.Services.IRobot.Roomba.RoombaSetMode)">
            <summary>
            Roomba SetMode Handler
            </summary>
            <param name="roombaSetMode"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.RoombaDriveHandler(Microsoft.Robotics.Services.IRobot.Roomba.RoombaDrive)">
            <summary>
            Send Roomba Drive Handler
            </summary>
            <param name="update"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.RoombaSetCleaningMotorsHandler(Microsoft.Robotics.Services.IRobot.Roomba.RoombaSetCleaningMotors)">
            <summary>
            Send Roomba SetCleaningMotors Handler
            </summary>
            <param name="update"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.RoombaSetLedsHandler(Microsoft.Robotics.Services.IRobot.Roomba.RoombaSetLeds)">
            <summary>
            Send Roomba SetLeds Handler
            </summary>
            <param name="update"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.RoombaDefineSongHandler(Microsoft.Robotics.Services.IRobot.Roomba.RoombaDefineSong)">
            <summary>
            Send Roomba DefineSong Handler
            </summary>
            <param name="update"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.RoombaPlaySongHandler(Microsoft.Robotics.Services.IRobot.Roomba.RoombaPlaySong)">
            <summary>
            Send Roomba PlaySong Handler
            </summary>
            <param name="update"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.RoombaGetSensorsHandler(Microsoft.Robotics.Services.IRobot.Roomba.RoombaGetSensors)">
            <summary>
            GetSensors Handler
            </summary>
            <param name="getSensors"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.RoombaSeekDockHandler(Microsoft.Robotics.Services.IRobot.Roomba.RoombaSeekDock)">
            <summary>
            Send a ForceSeekingDock command to the Roomba
            </summary>
            <param name="cmdHeader"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.RoombaStartCleaningHandler(Microsoft.Robotics.Services.IRobot.Roomba.RoombaStartCleaning)">
            <summary>
            Start a cleaning cycle
            </summary>
            <param name="cmdHeader"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.RoombaStartSpotCleaningHandler(Microsoft.Robotics.Services.IRobot.Roomba.RoombaStartSpotCleaning)">
            <summary>
            Start a spot cleaning cycle
            </summary>
            <param name="cmdHeader"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.RoombaStartMaxCleaningHandler(Microsoft.Robotics.Services.IRobot.Roomba.RoombaStartMaxCleaning)">
            <summary>
            Start a max cleaning cycle
            </summary>
            <param name="cmdHeader"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.BlockedCommandHandler(System.Object)">
            <summary>
            Invalid Inbound Command Handler
            </summary>
            <param name="header"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.HttpGetHandler(Microsoft.Dss.Core.DsspHttp.HttpGet)">
            <summary>
            Http Get Handler.  Needed for XSLT transform
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.HttpPostHandler(Microsoft.Dss.Core.DsspHttp.HttpPost)">
            <summary>
            Http Post Handler.  Handles http form inputs
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.HttpPostSuccess(Microsoft.Dss.Core.DsspHttp.HttpPost,Microsoft.Robotics.Services.IRobot.Roomba.RoombaState,System.String)">
            <summary>
            Send Http Post Success Response
            </summary>
            <param name="httpPost"></param>
            <param name="state"></param>
            <param name="transform"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.HttpPostFailure(Microsoft.Dss.Core.DsspHttp.HttpPost,W3C.Soap.Fault)">
            <summary>
            Send Http Post Failure Response
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.StartTimer(System.Int32)">
            <summary>
            Start the timer
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.TimerHandler(System.DateTime)">
            <summary>
            The Timer Handler fires every _tickInterval milliseconds
            </summary>
            <param name="time"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.WaitForNextTimer">
            <summary>
            Wait for _tickInterval before calling the TimerHandler
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.CreateDemoHandler(Microsoft.Robotics.Services.IRobot.Create.CreateDemo)">
            <summary>
            Create Demo Command Handler
            </summary>
            <param name="cmdHeader"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.CreatePWMLowSideDriversHandler(Microsoft.Robotics.Services.IRobot.Create.CreatePWMLowSideDrivers)">
            <summary>
            Create PWMLowSideDrivers Command Handler
            </summary>
            <param name="cmdHeader"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.CreateDriveDirectHandler(Microsoft.Robotics.Services.IRobot.Create.CreateDriveDirect)">
            <summary>
            Drive with Left and Right Velocity
            </summary>
            <remarks>Works with both Roomba and Create</remarks>
            <param name="cmdHeader"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.CreateDigitalOutputsHandler(Microsoft.Robotics.Services.IRobot.Create.CreateDigitalOutputs)">
            <summary>
            Create CreateDigitalOutputs Command Handler
            </summary>
            <param name="cmdHeader"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.CreateStreamHandler(Microsoft.Robotics.Services.IRobot.Create.CreateStream)">
            <summary>
            Create CreateStream Command Handler
            </summary>
            <param name="cmdHeader"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.CreateQueryListHandler(Microsoft.Robotics.Services.IRobot.Create.CreateQueryList)">
            <summary>
            Create CreateQueryList Command Handler
            </summary>
            <param name="cmdHeader"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.CreateStreamPauseResumeHandler(Microsoft.Robotics.Services.IRobot.Create.CreateStreamPauseResume)">
            <summary>
            Create CreateStreamPauseResume Command Handler
            </summary>
            <param name="cmdHeader"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.CreateSendIRHandler(Microsoft.Robotics.Services.IRobot.Create.CreateSendIR)">
            <summary>
            Create CreateSendIR Command Handler
            </summary>
            <param name="cmdHeader"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.CreateDefineScriptHandler(Microsoft.Robotics.Services.IRobot.Create.CreateDefineScript)">
            <summary>
            Create CreateDefineScript Command Handler
            </summary>
            <param name="cmdHeader"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.CreatePlayScriptHandler(Microsoft.Robotics.Services.IRobot.Create.CreatePlayScript)">
            <summary>
            Create CreatePlayScript Command Handler
            </summary>
            <param name="cmdHeader"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.CreateShowScriptHandler(Microsoft.Robotics.Services.IRobot.Create.CreateShowScript)">
            <summary>
            Create CreateShowScript Command Handler
            </summary>
            <param name="cmdHeader"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.CreateWaitTimeHandler(Microsoft.Robotics.Services.IRobot.Create.CreateWaitTime)">
            <summary>
            Create CreateWaitTime Command Handler
            </summary>
            <param name="cmdHeader"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.CreateWaitDistanceHandler(Microsoft.Robotics.Services.IRobot.Create.CreateWaitDistance)">
            <summary>
            Create CreateWaitDistance Command Handler
            </summary>
            <param name="cmdHeader"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.CreateWaitAngleHandler(Microsoft.Robotics.Services.IRobot.Create.CreateWaitAngle)">
            <summary>
            Create CreateWaitAngle Command Handler
            </summary>
            <param name="cmdHeader"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.CreateWaitEventHandler(Microsoft.Robotics.Services.IRobot.Create.CreateWaitEvent)">
            <summary>
            Create CreateWaitEvent Command Handler
            </summary>
            <param name="cmdHeader"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.ConfigureRoomba(System.Boolean)">
            <summary>
            Configure the Roomba
            </summary>
            <param name="connect"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.BrowseToThisService">
            <summary>
            Start up the web browser so user can configure
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.SendRoombaCommand(Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommand)">
            <summary>
            Send a Roomba command and wait for the reply.
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.SendCommand(Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommand,Microsoft.Ccr.Core.IPortSet)">
            <summary>
            Send a command to the iRobot and post the response to responsePort.
            </summary>
            <param name="cmd"></param>
            <param name="responsePort"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.WakeupRoombaHandler(Microsoft.Robotics.Services.IRobot.Roomba.WakeupRoomba)">
            <summary>
            Wake up the iRobot
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.WakeUpRooTooth(Microsoft.Ccr.Core.Port{System.Boolean})">
            <summary>
            Wake up an iRobot when connected to the RooTooth
            Bluetooth adapter.
            </summary>
            <param name="responsePort"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.WakeUpRS232(Microsoft.Ccr.Core.Port{System.Boolean})">
            <summary>
            Wake up the iRobot when connected directly to a serial port
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.SetWakeUpRooma">
            <summary>
            Request that the stream connection wake up Roomba directly.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.SendATCommand(System.String,System.Boolean)">
            <summary>
            Send an AT command and wait for an AT Response
            </summary>
            <param name="command"></param>
            <param name="requireResponse"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.ExecuteIRobotCommand(Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommand)">
            <summary>
            Post ExecuteIRobotCommand and return the response port.
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.ExecuteIRobotNoAckHandler(Microsoft.Robotics.Services.IRobot.Roomba.ExecuteIRobotCommand)">
            <summary>
            Execute an iRobot Command which does not expect a response.
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.ExecuteIRobotWithResponseHandler(Microsoft.Robotics.Services.IRobot.Roomba.ExecuteIRobotCommand)">
            <summary>
            Execute an iRobot Command
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.ProcessAtomicCommandHandler(Microsoft.Robotics.Services.IRobot.Roomba.ProcessAtomicCommand)">
            <summary>
            Process a single Roomba command and update all state
            </summary>
            <param name="atomicCommand"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.ProcessCommand(Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommand,Microsoft.Ccr.Core.IPortSet)">
            <summary>
            <remarks>SpawnIterator[RoombaCommand, IPortSet](ProcessCommand)</remarks>
            </summary>
            <param name="cmd"></param>
            <param name="responsePort"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.GetResponsePacket(Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommand,System.Byte[],System.Int32,System.DateTime)">
            <summary>
            Retrieve a response packet from the data stream
            </summary>
            <param name="cmd"></param>
            <param name="data"></param>
            <param name="startIx"></param>
            <param name="timestamp"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.IRobotService.AnalyzeBuffer(System.Byte[],System.Int32,System.Int32,System.DateTime,Microsoft.Robotics.Services.IRobot.Roomba.ExecuteIRobotCommand)">
            <summary>
            Determine if this is a binary data packet or a text string.
            Post all pending bytes to the appropriate port.
            </summary>
            <param name="data">The data buffer</param>
            <param name="startIx">The first byte to process</param>
            <param name="endIx">One past the last valid byte</param>
            <param name="packetTime">The time the data was received</param>
            <param name="executeIRobotCommand">The pending command</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode">
            <summary>
            Roomba Commands
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.None">
            <summary>
            No Command specified
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.ReturnAllRoomba">
            <summary>
            All Sensor Data Return Packet
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.ReturnBumpsCliffsAndWalls">
            <summary>
            Sensors Return Packet
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.ReturnPose">
            <summary>
            Pose Return Packet
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.ReturnPower">
            <summary>
            Power Return Packet
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.ReturnCliffDetail">
            <summary>
            Power Return Packet
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.ReturnTelemetry">
            <summary>
            Telemetry Return Packet
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.ReturnAllCreate">
            <summary>
            All Create Sensor data
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.ReturnQueryList">
            <summary>
            Results of the QueryList
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.OsmoReset">
            <summary>
            Soft Reset of the iRobot
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.FirmwareDate">
            <summary>
            Request the Firmware Date (Roomba Command Code 0x08)
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.ReturnDefineScript">
            <summary>
            Results from define script command
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.ReturnScript">
            <summary>
            Results from show script command
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.ReturnFirmwareDate">
            <summary>
            Return Firmware Date
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.ReturnStream">
            <summary>
            Results from stream notifications
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.Start">
            <summary>
            Place Roomba in Passive Mode
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.Baud">
            <summary>
            Set Roomba internal Baud Rate
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.Control">
            <summary>
            Place Roomba from Passive to Safe Mode
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.Safe">
            <summary>
            Place Roomba from Full to Safe Mode
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.Full">
            <summary>
            Place Roomba from Safe to Full Mode
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.Power">
            <summary>
            Place Roomba in Sleep Mode
            <remarks>from Safe or Full Mode</remarks>
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.Spot">
            <summary>
            Start Spot Cleaning
            <remarks>From Safe or Full Mode</remarks>
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.Clean">
            <summary>
            Start Cleaning Cycle
            For Create, seeks to cover the entire room
            <remarks>From Safe or Full Mode</remarks>
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.Max">
            <summary>
            Start Maximum time Cleaning Cycle
            <remarks>From Safe or Full Mode</remarks>
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.Demo">
            <summary>
            Start an iRobot Create Demo
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.Drive">
            <summary>
            Control Roomba's Wheels
            <remarks>From Safe or Full Mode</remarks>
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.Motors">
            <summary>
            Control Roomba's cleaning motors
            <remarks>From Safe or Full Mode</remarks>
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.Leds">
            <summary>
            Set Roomba's display LEDs.
            <remarks>From Safe or Full Mode</remarks>
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.DefineSong">
            <summary>
            Define a Song to be played later
            <remarks>From Passive, Safe or Full Mode</remarks>
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.PlaySong">
            <summary>
            Play a Song
            <remarks>From Safe or Full Mode</remarks>
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.Sensors">
            <summary>
            Request Sensor Data
            <remarks>From Passive, Safe or Full Mode</remarks>
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.ForceSeekingDock">
            <summary>
            Force Seeking Dock
            <remarks>Valid from any mode</remarks>
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.PWMLowSideDrivers">
            <summary>
            PWM Low Side Drivers
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.DriveDirect">
            This command lets you control the forward and backward motion of Create's drive
            wheels independently.  A positive velocity makes that wheel drive forward,
            while a negative velocity makes it drive backward.
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.DigitalOutputs">
            <summary>
            Digital Outputs
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.Stream">
            <summary>
            Starts a continuous stream of data packets.
            The list of packets requested is sent every 15 ms,
            which is the rate Create uses to update data.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.QueryList">
            <summary>
            Query for a list of sensor packets.
            The result is returned once.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.StreamPauseResume">
            <summary>
            Pause or Resume notifications without clearing the list of requested packets.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.SendIR">
            <summary>
            Send IR
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.DefineScript">
            <summary>
            Define a script
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.PlayScript">
            <summary>
            Play a script
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.ShowScript">
            <summary>
            Show a script
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.WaitTime">
            <summary>
            Wait specified time
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.WaitDistance">
            <summary>
            Wait until distance is driven
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.WaitAngle">
            <summary>
            Wait until angle is turned
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode.WaitEvent">
            <summary>
            Wait for an event to occur
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.RoombaQueryType">
            <summary>
            Roomba Query Packets
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaQueryType.ReturnAll">
            <summary>
            All Sensor Data Return Packet
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaQueryType.ReturnSensors">
            <summary>
            Sensors Return Packet
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaQueryType.ReturnPose">
            <summary>
            Pose Return Packet
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaQueryType.ReturnPower">
            <summary>
            Power Return Packet
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaQueryType.ReturnCliffDetail">
            <summary>
            Power Return Packet
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaQueryType.ReturnTelemetry">
            <summary>
            Telemetry Return Packet
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaQueryType.ReturnAllCreate">
            <summary>
            All Create Sensor data
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.iRobotConnectionType">
            <summary>
            Connection Type
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.iRobotConnectionType.NotConfigured">
            <summary>
            Unconfigured Roomba
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.iRobotConnectionType.RooTooth">
            <summary>
            RoombaDevTools Bluetooth connection
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.iRobotConnectionType.RoombaSerialPort">
            <summary>
            Serial Port connection designed for the iRobot Roomba 7-pin connector
            <remarks>Supports Roomba Wakeup mapping RTS to Roomba Device Detect Pin-5</remarks>
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.iRobotConnectionType.CreateSerialPort">
            <summary>
            Serial Port connection designed for the iRobot Create 7-pin connector
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.iRobotConnectionType.BluetoothAdapterModule">
            <summary>
            Element Direct Bluetooth Adapter Module (BAM!)
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.RoombaMode">
            <summary>
            Roomba Operation Modes
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaMode.Off">
            <summary>
            Roomba is in Sleep Mode
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaMode.Passive">
            <summary>
            Roomba is in Passive Mode
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaMode.Safe">
            <summary>
            Roomba is in Safe Mode
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaMode.Full">
            <summary>
            Roomba is in Full Mode
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaMode.Uninitialized">
            <summary>
            The iRobot Create/Roomba has not been initialized.
            This happens when the service is started or the
            serial port is configured.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaMode.NotSpecified">
            <summary>
            Return Code indicates the mode is not specified
            and should not be updated.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaMode.Shutdown">
            <summary>
            The iRobot Create/Roomba service is shutting down.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.RoombaReturnPacketCode">
            <summary>
            Type of sensor data requested
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaReturnPacketCode.All">
            <summary>
            Retrieve All Data
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaReturnPacketCode.Sensors">
            <summary>
            Retrieve Sensor Packet
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaReturnPacketCode.Pose">
            <summary>
            Retrieve Pose Packet
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaReturnPacketCode.Power">
            <summary>
            Retrieve Power Packet
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.RoombaBaudCode">
            <summary>
            Internal Roomba Baud Rate
            <remarks>When using Bluetooth connection,
            this setting may not be correct</remarks>
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaBaudCode.Baud300">
            <summary>
            300 Baud
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaBaudCode.Baud600">
            <summary>
            600 Baud
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaBaudCode.Baud1200">
            <summary>
            1200 Baud
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaBaudCode.Baud2400">
            <summary>
            2400 Baud
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaBaudCode.Baud4800">
            <summary>
            4800 Baud
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaBaudCode.Baud9600">
            <summary>
            9600 Baud
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaBaudCode.Baud14400">
            <summary>
            14400 Baud
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaBaudCode.Baud19200">
            <summary>
            19200 Baud
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaBaudCode.Baud28800">
            <summary>
            28800 Baud
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaBaudCode.Baud38400">
            <summary>
            38400 Baud
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaBaudCode.Baud57600">
            <summary>
            57600 Baud
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaBaudCode.Baud115200">
            <summary>
            115200 Baud
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.RoombaMotorBits">
            <summary>
            Roomba Cleaning Motors
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaMotorBits.SideBrush">
            <summary>
            Side Brush Motor
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaMotorBits.Vacuum">
            <summary>
            Vacuum Motor
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaMotorBits.MainBrush">
            <summary>
            Main Brush Motor
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaMotorBits.Bit4">
            <summary>
            Not Defined Flag 0x08
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaMotorBits.Bit5">
            <summary>
            Not Defined Flag 0x10
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaMotorBits.Bit6">
            <summary>
            Not Defined Flag 0x20
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaMotorBits.Bit7">
            <summary>
            Not Defined Flag 0x40
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaMotorBits.Bit8">
            <summary>
            Not Defined Flag 0x80
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.RoombaLedBits">
            <summary>
            iRobot Leds
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaLedBits.Off">
            <summary>
            Off
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaLedBits.DirtDetect">
            <summary>
            Dirt Detect
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaLedBits.Max">
            <summary>
            Max Led
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaLedBits.CreatePlay">
            <summary>
            Create center "Play" Button
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaLedBits.Clean">
            <summary>
            Clean Led
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaLedBits.Spot">
            <summary>
            Spot Led
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaLedBits.CreateAdvance">
            <summary>
            Create right "Advance" button
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaLedBits.StatusRed">
            <summary>
            Status Led - Red
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaLedBits.StatusGreen">
            <summary>
            Status Led - Green
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaLedBits.StatusAmber">
            <summary>
            Status Led - Amber
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaLedBits.Bit7">
            <summary>
            Unused Bit 7
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaLedBits.Bit8">
            <summary>
            Unused Bit 8
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.BumpsWheeldrops">
            <summary>
            Bumps and Wheel Drops
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.BumpsWheeldrops.BumpRight">
            <summary>
            Right Bump
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.BumpsWheeldrops.BumpLeft">
            <summary>
            Left Bump
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.BumpsWheeldrops.WheelDropRight">
            <summary>
            Right Wheel Drop
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.BumpsWheeldrops.WheelDropLeft">
            <summary>
            Left Wheel Drop
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.BumpsWheeldrops.WheelDropCaster">
            <summary>
            Caster Wheel Drop
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.BumpsWheeldrops.Bit6">
            <summary>
            Unused Bit 6
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.BumpsWheeldrops.Bit7">
            <summary>
            Unused Bit 7
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.BumpsWheeldrops.Bit8">
            <summary>
            Unused Bit 8
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.MotorOvercurrents">
            <summary>
            Motor Stalled
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.MotorOvercurrents.SideBrush">
            <summary>
            Side Brush Stalled
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.MotorOvercurrents.Vacuum">
            <summary>
            Vacuum Plugged
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.MotorOvercurrents.MainBrush">
            <summary>
            Main Brush Stalled
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.MotorOvercurrents.DriveRight">
            <summary>
            Right Wheel Blocked
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.MotorOvercurrents.DriveLeft">
            <summary>
            Left Wheel Blocked
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.MotorOvercurrents.Bit6">
            <summary>
            Not Defined Flag 0x20
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.MotorOvercurrents.Bit7">
            <summary>
            Not Defined Flag 0x40
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.MotorOvercurrents.Bit8">
            <summary>
            Not Defined Flag 0x80
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.ButtonsRoomba">
            <summary>
            Roomba Physical Buttons
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.ButtonsRoomba.Off">
            <summary>
            No Roomba Buttons pressed
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.ButtonsRoomba.Max">
            <summary>
            Roomba Max Button
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.ButtonsRoomba.Clean">
            <summary>
            Roomba Clean Button
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.ButtonsRoomba.Spot">
            <summary>
            Roomba Spot Button
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.ButtonsRoomba.Power">
            <summary>
            Roomba Power Button
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.ButtonsRoomba.Bit5">
            <summary>
            Not Defined Flag 0x10
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.ButtonsRoomba.Bit6">
            <summary>
            Not Defined Flag 0x20
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.ButtonsRoomba.Bit7">
            <summary>
            Not Defined Flag 0x40
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.ButtonsRoomba.Bit8">
            <summary>
            Not Defined Flag 0x80
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.ChargingState">
            <summary>
            Charging State
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.ChargingState.NotCharging">
            <summary>
            Not Charging
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.ChargingState.ChargingRecovery">
            <summary>
            Charging Recovery
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.ChargingState.Charging">
            <summary>
            Charging
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.ChargingState.TrickleCharging">
            <summary>
            Trickle Charging
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.ChargingState.Waiting">
            <summary>
            Waiting
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.ChargingState.ChargingError">
            <summary>
            Charging Error
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.ChargingState.NoResponse">
            <summary>
            No response was received from the robot
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.RemoteIR">
            <summary>
            Roomba Remote IR Codes
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RemoteIR.Code1">
            <summary>
            Bit 1 (0x01)
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RemoteIR.Code2">
            <summary>
            Bit 2 (0x02)
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RemoteIR.Code3">
            <summary>
            Bit 3 (0x04)
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RemoteIR.Code4">
            <summary>
            Bit 4 (0x08)
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RemoteIR.Code5">
            <summary>
            Bit 5 (0x10)
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RemoteIR.Code6">
            <summary>
            Bit 6 (0x20)
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RemoteIR.Code7">
            <summary>
            Bit 7 (0x40)
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RemoteIR.Code8">
            <summary>
            Bit 8 (0x80)
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RemoteIR.RemoteLeft">
            <summary>
            Remote "Left"
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RemoteIR.RemoteForward">
            <summary>
            Remote "Forward"
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RemoteIR.RemoteRight">
            <summary>
            Remote "Right"
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RemoteIR.RemoteSpot">
            <summary>
            Remote "Spot"
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RemoteIR.RemoteMax">
            <summary>
            Remote "Max"
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RemoteIR.RemoteSmall">
            <summary>
            Small?
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RemoteIR.RemoteMedium">
            <summary>
            Medium??
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RemoteIR.RemoteClean">
            <summary>
            Remote "Clean"
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RemoteIR.RemoteStop">
            <summary>
            Remote Pause
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RemoteIR.RemotePower">
            <summary>
            Remote "Power"
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RemoteIR.RemoteArcForwardLeft">
            <summary>
            Remote "Forward" + "Left"
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RemoteIR.RemoteArcForwardRight">
            <summary>
            Remote "Forward" + "Right"
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RemoteIR.RemoteDriveStop">
            <summary>
            Remote "DriveStop" ???
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RemoteIR.RemoteDownload">
            <summary>
            Remote "Download"
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RemoteIR.RemoteSeekDock">
            <summary>
            Remote "SeekDock"
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RemoteIR.DockFuzzy">
            <summary>
            Just out of sight of the Buoys
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RemoteIR.DockNear">
            <summary>
            The Dock is near
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RemoteIR.DockGreen">
            <summary>
            The Dock Green Buoy is visible
            <remarks>Left of center</remarks>
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RemoteIR.DockRed">
            <summary>
            The Dock Red Buoy is visible
            <remarks>Right of center</remarks>
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RemoteIR.DockGreenRed">
            <summary>
            Both Dock Buoy's are visible
            <remarks>At 90 degrees to base</remarks>
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RemoteIR.DockRedNear">
            <summary>
            The Dock Red Buoy is visible and the Dock is near
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RemoteIR.DockGreenNear">
            <summary>
            The Dock Green Buoy is visible and the Dock is near
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RemoteIR.DockRedGreenNear">
            <summary>
            The Dock Red and Green Buoy's are visible and the Dock is near
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RemoteIR.NoIR">
            <summary>
            No IR is being received
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency">
            <summary>
            The table of note frequencies
            as defined by Roomba
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.Rest">
            <summary>
            Quiet
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.G_Hz_49p0">
            <summary>
            G Hz 49.0
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.GSharp_Hz_51p0">
            <summary>
            GSharp Hz 51.0
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.A_Hz_55p0">
            <summary>
            A Hz 55.0
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.ASharp_Hz_58p3">
            <summary>
            ASharp Hz 58.3
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.B_Hz_61p7">
            <summary>
            B Hz 61.7
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.C_Hz_65p4">
            <summary>
            C Hz 65.4
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.CSharp_Hz_69p3">
            <summary>
            CSharp Hz 69.3
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.D_Hz_73p4">
            <summary>
            D Hz 73.4
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.DSharp_Hz_77p8">
            <summary>
            DSharp Hz 77.8
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.E_Hz_82p4">
            <summary>
            E Hz 82.4
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.F_Hz_87p3">
            <summary>
            F Hz 87.3
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.FSharp_Hz_92p5">
            <summary>
            FSharp Hz 92.5
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.G_Hz_98p0">
            <summary>
            G Hz 98.0
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.GSharp_Hz_103p8">
            <summary>
            GSharp Hz 103.8
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.A_Hz_110p0">
            <summary>
            A Hz 110.0
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.ASharp_Hz_116p5">
            <summary>
            ASharp Hz 116.5
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.B_Hz_123p5">
            <summary>
            B Hz 123.5
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.C_Hz_130p8">
            <summary>
            C Hz 130.8
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.CSharp_Hz_138p6">
            <summary>
            CSharp Hz 138.6
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.D_Hz_146p8">
            <summary>
            D Hz 146.8
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.DSharp_Hz_155p6">
            <summary>
            DSharp Hz 155.6
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.E_Hz_164p8">
            <summary>
            E Hz 164.8
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.F_Hz_174p6">
            <summary>
            F Hz 174.6
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.FSharp_Hz_185p0">
            <summary>
            FSharp Hz 185.0
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.G_Hz_196p0">
            <summary>
            G Hz 196.0
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.GSharp_Hz_207p7">
            <summary>
            GSharp Hz 207.7
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.A_Hz_220p0">
            <summary>
            A Hz 220.0
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.ASharp_Hz_233p1">
            <summary>
            ASharp Hz 233.1
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.B_Hz_246p9">
            <summary>
            B Hz 246.9
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.C_Hz_261p6">
            <summary>
            C Hz 261.6
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.CSharp_Hz_277p2">
            <summary>
            CSharp Hz 277.2
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.D_Hz_293p7">
            <summary>
            D Hz 293.7
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.DSharp_Hz_311p1">
            <summary>
            DSharp Hz 311.1
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.E_Hz_329p6">
            <summary>
            E Hz 329.6
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.F_Hz_349p2">
            <summary>
            F Hz 349.2
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.FSharp_Hz_370p0">
            <summary>
            FSharp Hz 370.0
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.G_Hz_392p0">
            <summary>
            G Hz 392.0
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.GSharp_Hz_415p3">
            <summary>
            GSharp Hz 415.3
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.A_Hz_440p0">
            <summary>
            A Hz 440.0
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.ASharp_Hz_466p2">
            <summary>
            ASharp Hz 466.2
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.B_Hz_493p9">
            <summary>
            B Hz 493.9
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.C_Hz_523p3">
            <summary>
            C Hz 523.3
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.CSharp_Hz_554p4">
            <summary>
            CSharp Hz 554.4
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.D_Hz_587p3">
            <summary>
            D Hz 587.3
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.DSharp_Hz_622p3">
            <summary>
            DSharp Hz 622.3
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.E_Hz_659p3">
            <summary>
            E Hz 659.3
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.F_Hz_698p5">
            <summary>
            F Hz 698.5
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.FSharp_Hz_740p0">
            <summary>
            FSharp Hz 740.0
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.G_Hz_784p0">
            <summary>
            G Hz 784.0
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.GSharp_Hz_830p6">
            <summary>
            GSharp Hz 830.6
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.A_Hz_880p0">
            <summary>
            A Hz 880.0
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.ASharp_Hz_932p3">
            <summary>
            ASharp Hz 932.3
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.B_Hz_987p8">
            <summary>
            B Hz 987.8
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.C_Hz_1046p5">
            <summary>
            C Hz 1046.5
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.CSharp_Hz_1108p7">
            <summary>
            CSharp Hz 1108.7
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.D_Hz_1174p7">
            <summary>
            D Hz 1174.7
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.DSharp_Hz_1244p5">
            <summary>
            DSharp Hz 1244.5
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.E_Hz_1318p5">
            <summary>
            E Hz 1318.5
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.F_Hz_1396p9">
            <summary>
            F Hz 1396.9
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.FSharp_Hz_1480p0">
            <summary>
            FSharp Hz 1480.0
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.G_Hz_1568p0">
            <summary>
            G Hz 1568.0
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.GSharp_Hz_1661p2">
            <summary>
            GSharp Hz 1661.2
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.A_Hz_1760p0">
            <summary>
            A Hz 1760.0
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.ASharp_Hz_1864p7">
            <summary>
            ASharp Hz 1864.7
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.B_Hz_1975p5">
            <summary>
            B Hz 1975.5
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.C_Hz_2093p0">
            <summary>
            C Hz 2093.0
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.CSharp_Hz_2217p5">
            <summary>
            CSharp Hz 2217.5
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.D_Hz_2349p3">
            <summary>
            D Hz 2349.3
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.DSharp_Hz_2489p0">
            <summary>
            DSharp Hz 2489.0
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.E_Hz_2637p0">
            <summary>
            E Hz 2637.0
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.F_Hz_2793p8">
            <summary>
            F Hz 2793.8
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.FSharp_Hz_2960p0">
            <summary>
            FSharp Hz 2960.0
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.G_Hz_3136p0">
            <summary>
            G Hz 3136.0
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.GSharp_Hz_3322p4">
            <summary>
            GSharp Hz 3322.4
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.A_Hz_3520p0">
            <summary>
            A Hz 3520.0
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.ASharp_Hz_3729p3">
            <summary>
            ASharp Hz 3729.3
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.B_Hz_3951p1">
            <summary>
            B Hz 3951.1
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.C_Hz_4186p0">
            <summary>
            C Hz 4186.0
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.CSharp_Hz_4434p9">
            <summary>
            CSharp Hz 4434.9
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.D_Hz_4698p6">
            <summary>
            D Hz 4698.6
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.DSharp_Hz_4978p0">
            <summary>
            DSharp Hz 4978.0
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.E_Hz_5274p0">
            <summary>
            E Hz 5274.0
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.F_Hz_5587p7">
            <summary>
            F Hz 5587.7
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.FSharp_Hz_5919p9">
            <summary>
            FSharp Hz 5919.9
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.G_Hz_6271p9">
            <summary>
            G Hz 6271.9
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.GSharp_Hz_6644p9">
            <summary>
            GSharp Hz 6644.9
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.A_Hz_7040p0">
            <summary>
            A Hz 7040.0
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.ASharp_Hz_7458p6">
            <summary>
            ASharp Hz 7458.6
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.B_Hz_7902p1">
            <summary>
            B Hz 7902.1
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.C_Hz_8372p0">
            <summary>
            C Hz 8372.0
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.CSharp_Hz_8869p8">
            <summary>
            CSharp Hz 8869.8
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.D_Hz_9397p3">
            <summary>
            D Hz 9397.3
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.DSharp_Hz_9956p1">
            <summary>
            DSharp Hz 9956.1
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.E_Hz_10548p1">
            <summary>
            E Hz 10548.1
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.F_Hz_11175p3">
            <summary>
            F Hz 11175.3
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.FSharp_Hz_11839p8">
            <summary>
            FSharp Hz 11839.8
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency.G_Hz_12543p9">
            <summary>
            G Hz 12543.9
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.RoombaNote">
            <summary>
            Defines a note with a tone and duration.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaNote.#ctor">
            <summary>
            Defines a note with a tone and duration.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaNote.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency,System.Int32)">
            <summary>
            Defines a note with a tone and duration.
            </summary>
            <param name="tone"></param>
            <param name="duration"></param>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.RoombaNote.Tone">
            <summary>
            The note tone or frequency.
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.RoombaNote.Duration">
            <summary>
            Duration in 1/64 second increments
            <remarks>Range 0 - 255</remarks>
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.IRobotModel">
            <summary>
            The model of iRobot Roomba or Create
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.IRobotModel.NotSpecified">
            <summary>
            The type of iRobot has not been specified.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.IRobotModel.Roomba">
            <summary>
            iRobot Roomba
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.IRobotModel.Create">
            <summary>
            iRobot Create
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.CmdFirmwareDate">
            <summary>
            Retrieve the firmware date from a Roomba or Create.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.CmdFirmwareDate.#ctor">
            <summary>
            Retrieve the firmware date from a Roomba or Create.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.CmdFirmwareDate.ToString">
            <summary>
            The string representation for this command.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.CmdFirmwareDate.ExpectedResponseBytes">
            <summary>
            The number of bytes returned by the GetFirmwareDate command
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.CmdSetMode">
            <summary>
            Set the iRobot Mode.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.CmdSetMode.#ctor">
            <summary>
            Set the iRobot Mode
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.CmdSetMode.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.RoombaMode,System.Boolean)">
            <summary>
            Set the iRobot Mode
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.CmdSetMode.MaintainMode">
            <summary>
            When set to Passive, Safe, or Full, this mode will be maintained,
            even after automatic mode changes and additional commands.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.CmdSetMode.ToString">
            <summary>
            The string representation for this command.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.CmdSetMode.RoombaMode">
            <summary>
            The iRobot Mode
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.InternalCmdStart">
            <summary>
            Start the Roomba SCI.
            <remarks>Internal: Use CmdSetMode from outside of this service</remarks>
            <remarks>The Start command must be sent before any
            other SCI commands. This command puts the SCI in
            passive mode.</remarks>
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.InternalCmdStart.#ctor">
            <summary>
            Enable Passive Mode
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.InternalCmdStart.#ctor(System.Boolean)">
            <summary>
            Enable Passive Mode and optionally maintain this mode.
            </summary>
            <param name="maintainPassiveMode"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.InternalCmdStart.ToString">
            <summary>
            The string representation for this command.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.InternalCmdControl">
            <summary>
            Enables user control of the Roomba.
            <remarks>Internal: Use CmdSetMode from outside of this service</remarks>
            <remarks>This command must be sent after the start command and
            before any control commands are sent to the SCI. </remarks>
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.InternalCmdControl.#ctor">
            <summary>
            Enable Safe Mode
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.InternalCmdControl.#ctor(System.Boolean)">
            <summary>
            Enable Safe Mode and optionally maintain this mode.
            </summary>
            <param name="maintainSafeMode"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.InternalCmdControl.ToString">
            <summary>
            The string representation for this command.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.InternalCmdSafe">
            <summary>
            Puts the Roomba in Safe mode.
            <remarks>Internal: Use CmdSetMode from outside of this service</remarks>
            <remarks>Note: In order to go from passive mode to safe mode,
            use the CmdControl command.</remarks>
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.InternalCmdSafe.#ctor">
            <summary>
            Enable Safe Mode
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.InternalCmdSafe.#ctor(System.Boolean)">
            <summary>
            Enable Safe Mode and optionally maintain this mode.
            </summary>
            <param name="maintainSafeMode"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.InternalCmdSafe.ToString">
            <summary>
            The string representation for this command.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.InternalCmdFull">
            <summary>
            Enables unrestricted control of Roomba and turns
            off safety features.
            <remarks>Internal: Use CmdSetMode from outside of this service</remarks>
            <remarks>This command puts the SCI in full mode.</remarks>
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.InternalCmdFull.#ctor">
            <summary>
            Enable Full Mode
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.InternalCmdFull.#ctor(System.Boolean)">
            <summary>
            Enable Full Mode and optionally maintain this mode.
            </summary>
            <param name="maintainFullMode"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.InternalCmdFull.ToString">
            <summary>
            The string representation for this command.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.InternalCmdPower">
            <summary>
            Puts Roomba to sleep, the same as a normal "power" button press.
            <remarks>Internal: Use CmdSetMode from outside of this service</remarks>
            <remarks>The Device Detect line must be held low for 500 ms to
            wake up Roomba from sleep. This command puts the SCI in
            passive mode.
            </remarks>
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.InternalCmdPower.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.InternalCmdPower.ToString">
            <summary>
            The string representation for this command.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.InternalCmdReset">
            <summary>
            Resets Roomba to sleep mode, the same as a normal "power" button press.
            <remarks>
            In most cases, you can power cycle the Create robot to reset it, 
            either with the power button or by transmitting two low-to-high transitions 
            on the power toggle input line on the Cargo Bay Connector (see the Open 
            Interface manual for details). </remarks>
            <remarks>
            Always wait at least one second between powering the robot off and powering 
            it on again to ensure a complete reset.</remarks>
            <remarks>
            However, if the robot is on the charger but not charging because it is in 
            Safe or Full mode, this doesn’t work. Instead, use this procedure:</remarks>
            <remarks>
            1. Send opcode "7". This is not an official OI opcode, rather it is an 
            opcode used by Osmo (a firmware updating device) to initiate a soft reset 
            of the robot and force it to run its bootloader.</remarks>
            <remarks>
            2. The robot resets. Wait 3 seconds for the bootloader to complete. 
            Do NOT send any opcodes while the bootloader is running.</remarks>
            <remarks>
            3. The robot should start charging. Note that the robot spews some 
            battery-related text if it is charging and not in OI mode. Ignore this text.</remarks>
            <remarks>
            4. Send a Start command to get back into the OI (and stop the spew).</remarks>
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.InternalCmdReset.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.InternalCmdReset.ToString">
            <summary>
            The string representation for this command.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.CmdSpot">
            <summary>
            Starts a spot cleaning cycle, the same as a normal "spot" button press.
            <remarks>This command puts the SCI in passive mode.</remarks>
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.CmdSpot.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.CmdSpot.ToString">
            <summary>
            The string representation for this command.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.CmdClean">
            <summary>
            Starts a normal cleaning cycle, the same as a normal "clean" button press.
            <remarks>This command puts the SCI in passive mode.</remarks>
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.CmdClean.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.CmdClean.ToString">
            <summary>
            The string representation for this command.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.CmdMax">
            <summary>
            Starts a maximum time cleaning cycle, the same as a normal "max" button press.
            <remarks>This command puts the SCI in passive mode.</remarks>
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.CmdMax.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.CmdMax.ToString">
            <summary>
            The string representation for this command.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.CmdDrive">
            <summary>
            Controls Roomba's drive wheels.
            <remarks>The command takes four data
            bytes, which are interpreted as two 16 bit signed values using
            twos-complement. The first two bytes specify the average velocity
            of the drive wheels in millimeters per second (mm/s), with the
            high byte sent first. The next two bytes specify the radius, in
            millimeters, at which Roomba should turn. The longer radii make
            Roomba drive straighter; shorter radii make it turn more. A Drive
            command with a positive velocity and a positive radius will make
            Roomba drive forward while turning toward the left. A negative
            radius will make it turn toward the right. Special cases for the
            radius make Roomba turn in place or drive straight, as specified
            below. </remarks>
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.CmdDrive.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.CmdDrive.#ctor(System.Int32,System.Int32)">
            <summary>
            Initialization constructor
            </summary>
            <param name="velocity">mm/s (-500 to +500)</param>
            <param name="radius">Radius in mm (-2000 to +2000, 32768)
            1 = counter clockwise when velocity greate than 0 and clockwise when velocity less than 0.
            -1 = counter clockwise when velocity less than 0 and clockwise when velocity greater than 0.
            32768 = drive straight ahead</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.CmdDrive.ToString">
            <summary>
            The string representation for this command.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.CmdDrive.Velocity">
            <summary>
            Velocity (-500 to +500 mm/s)
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.CmdDrive.Radius">
            <summary>
            Radius (-2000 to +2000 mm, 32768 straight)
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.CmdMotors">
            <summary>
            Controls Roomba’s cleaning motors.
            <remarks>The state of each motor is specified by one bit
            in the data byte. </remarks>
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.CmdMotors.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.CmdMotors.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.RoombaMotorBits)">
            <summary>
            Initialization Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.CmdMotors.ToString">
            <summary>
            The string representation for this command.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.CmdMotors.Motors">
            <summary>
            Motors
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.CmdLeds">
            <summary>
            Controls Roomba’s LEDs.
            <remarks>The state of each of the spot, clean,
            max, and dirt detect LEDs is specified by one bit in the first data
            byte. The color of the status LED is specified by two bits in the
            first data byte. The power LED is specified by two data bytes, one
            for the color and one for the intensity. </remarks>
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.CmdLeds.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.CmdLeds.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.RoombaLedBits,System.Int32,System.Int32)">
            <summary>
            Initialization Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.CmdLeds.ToString">
            <summary>
            The string representation for this command.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.CmdLeds.Leds">
            <summary>
            iRobot LEDs
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.CmdLeds.PowerColor">
            <summary>
            Power Color
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.CmdLeds.PowerIntensity">
            <summary>
            Power Intensity
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.CmdDefineSong">
            <summary>
            Specifies a song to the SCI to be played later.
            <remarks>Each song is
            associated with a song number which the Play command uses
            to select the song to play. Users can specify up to 16 songs
            with up to 16 notes per song. Each note is specified by a note
            number using MIDI note definitions and a duration specified
            in fractions of a second. The number of data bytes varies
            depending on the length of the song specified. A one note song
            is specified by four data bytes. For each additional note, two data
            bytes must be added. </remarks>
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.CmdDefineSong.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.CmdDefineSong.#ctor(System.Int32)">
            <summary>
            Defines a Song.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.CmdDefineSong.#ctor(System.Int32,System.Int32)">
            <summary>
            Defines a Song.
            <remarks>Song Length is no longer necessary</remarks>
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.CmdDefineSong.#ctor(System.Int32,System.Collections.Generic.List{Microsoft.Robotics.Services.IRobot.Roomba.RoombaNote})">
            <summary>
            Defines a Song.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.CmdDefineSong.SetNote(System.Int32,Microsoft.Robotics.Services.IRobot.Roomba.RoombaFrequency,System.Int32)">
            <summary>
            Set the (1-16)th Note Tone and Duration
            </summary>
            <param name="ix">1-16</param>
            <param name="tone">RoombaFrequency</param>
            <param name="duration">n/64th seconds</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.CmdDefineSong.ToString">
            <summary>
            The string representation for this command.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.CmdDefineSong.SongNumber">
            <summary>
            The predefined song number (1-16)
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.CmdDefineSong.Notes">
            <summary>
            A list of notes which compose a short song.
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.CmdDefineSong.Data">
            <summary>
            Override Data so we can check to see if
            the Notes list has been modified since it was created.
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.CmdDefineSong.SongLength">
            <summary>
            The number of notes in this song (1-16)
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.CmdPlaySong">
            <summary>
            Plays one of 16 songs, as specified by an earlier Song command.
            <remarks>If the requested song has not been specified yet,
            the Play command does nothing. </remarks>
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.CmdPlaySong.#ctor">
            <summary>
            Plays a song
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.CmdPlaySong.#ctor(System.Int32)">
            <summary>
            Plays the specified song (1-16)
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.CmdPlaySong.ToString">
            <summary>
            The string representation for this command.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.CmdPlaySong.SongNumber">
            <summary>
            The predefined song number (1-16)
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.CmdSensors">
            <summary>
            Requests the SCI to send a packet of sensor data bytes.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.CmdSensors.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.CmdSensors.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode)">
            <summary>
            Initialization Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.CmdSensors.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.RoombaQueryType)">
            <summary>
            Initialization Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.CmdSensors.#ctor(Microsoft.Robotics.Services.IRobot.Create.CreateSensorPacket)">
            <summary>
            Initialization Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.CmdSensors.ExpectedResponseBytes">
            <summary>
            CmdSensors expects data back from the iRobot
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.CmdSensors.ToString">
            <summary>
            The string representation for this command.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.CmdSensors.SensorPacketCode">
            <summary>
            The Sensor Packet Code to retrieve
            <remarks>
            Roomba (0-3)
            Create (0-42)
            </remarks>
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.CmdSensors.CreateSensorPacket">
            <summary>
            The Create Sensor Packet to retrieve
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.CmdSensors.SensorPacket">
            <summary>
            The Roomba Sensor Packet to retrieve
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.CmdForceSeekingDock">
            <summary>
            Turns on force-seeking-dock mode.
            <remarks>Causes the robot to immediately attempt to dock during
            its cleaning cycle if it encounters the docking beams from the
            Home Base. (Note, however, that if the robot was not active in a
            clean, spot or max cycle it will not attempt to execute the docking.)
            Normally the robot attempts to dock only if the cleaning cycle has
            completed or the battery is nearing depletion. This command can be
            sent anytime, but the mode will be canceled if the robot turns off,
            begins charging, or is commanded into SCI safe or full modes.</remarks>
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.CmdForceSeekingDock.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.CmdForceSeekingDock.ToString">
            <summary>
            The string representation for this command.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandReceived">
            <summary>
            Acknowledges the receipt of a Roomba command
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandReceived.Instance(Microsoft.Robotics.Services.IRobot.Roomba.RoombaMode)">
            <summary>
            Default Instance of RoombaCommandReceived
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandReceived.#ctor">
            <summary>
            Default command received
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandReceived.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.RoombaMode)">
            <summary>
            Roomba Command Received with Mode
            </summary>
            <param name="roombaMode"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandReceived.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandCode)">
            <summary>
            Roomba Command Received with Command Code
            </summary>
            <param name="roombaCommandCode"></param>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandReceived.RoombaMode">
            <summary>
            The Roomba Mode after the command is completed
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandReceived.ValidPacket">
            <summary>
            All RoombaCommandReceived packets are valid.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.ReturnFirmwareDate">
            <summary>
            Returns the Firmware Date.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.ReturnFirmwareDate.#ctor">
            <summary>
            Returns the Firmware Date.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.ReturnFirmwareDate.#ctor(System.Byte[],System.DateTime)">
            <summary>
            Returns the Firmware Date.
            </summary>
            <param name="data"></param>
            <param name="timestamp"></param>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.ReturnFirmwareDate.FirmwareDate">
            <summary>
            The firmware Date
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.ReturnFirmwareDate.ValidPacket">
            <summary>
            Valid Return Firmware Date Packet
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.ReturnMode">
            <summary>
            Notification of Roomba Mode changes
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.ReturnMode.#ctor">
            <summary>
            Notification of Roomba Mode changes
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.ReturnMode.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.RoombaMode)">
            <summary>
            Notification of Roomba Mode changes
            </summary>
            <param name="roombaMode"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.ReturnMode.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.RoombaMode,Microsoft.Robotics.Services.IRobot.Roomba.RoombaMode)">
            <summary>
            Notification of Roomba Mode changes
            </summary>
            <param name="roombaMode"></param>
            <param name="maintainMode"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.ReturnMode.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.RoombaMode,Microsoft.Robotics.Services.IRobot.Roomba.RoombaMode,Microsoft.Robotics.Services.IRobot.Roomba.IRobotModel,System.DateTime)">
            <summary>
            Notification of Roomba Mode changes
            </summary>
            <param name="roombaMode"></param>
            <param name="maintainMode"></param>
            <param name="iRobotModel"></param>
            <param name="firmwareDate"></param>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.ReturnMode.RoombaMode">
            <summary>
            The current mode of the Roomba
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.ReturnMode.IRobotModel">
            <summary>
            The iRobot hardware model
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.ReturnMode.MaintainMode">
            <summary>
            When set to Passive, Safe, or Full, this mode will be maintained with
            each subsequent command and also involuntary mode changes.
            <remarks>
            Off = Ignore for this command
            NotSpecified = Maintain Mode is Not Specified (disabled)
            </remarks>
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.ReturnMode.FirmwareDate">
            <summary>
            The Firmware Date
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.ReturnMode.ValidPacket">
            <summary>
            Validate the RoombaMode
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.ReturnAll">
            <summary>
            Notification of All Sensors.
            Roomba: Sensors, Pose, Power
            Create: Sensors, Pose, Power, CliffDetail, and Telemetry
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.ReturnAll.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.ReturnAll.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.RoombaMode)">
            <summary>
            Initialization Constructor
            </summary>
            <param name="roombaMode"></param>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.ReturnAll.ValidPacket">
            <summary>
            Is the current packet valid?
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.ReturnAll.RoombaMode">
            <summary>
            Set the RoombaMode on the ReturnAll packet and all sub-packets.
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.ReturnAll.Sensors">
            <summary>
            Roomba Sensors
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.ReturnAll.Pose">
            <summary>
            Roomba Pose
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.ReturnAll.Power">
            <summary>
            Roomba Power
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.ReturnAll.CliffDetail">
            <summary>
            iRobot Create Cliff Detail
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.ReturnAll.Telemetry">
            <summary>
            iRobot Create Telemetry
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.ReturnSensors">
            <summary>
            Roomba Sensor Notifications
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.ReturnSensors.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.ReturnSensors.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.RoombaMode,System.Byte[],System.DateTime)">
            <summary>
            Initialization Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.ReturnSensors.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.RoombaMode)">
            <summary>
            Initialization Constructor
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.ReturnSensors.ValidPacket">
            <summary>
            Is the current packet valid?
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.ReturnSensors.BumpsWheeldrops">
            <summary>
            The state of the bump (0 = no bump, 1 = bump) and wheeldrop
            sensors (0 = wheel up, 1 = wheel dropped) are sent as individual
            bits.
            <remarks>Some robots do not report the three wheel drops separately. Instead,
            if any of the three wheels drops, all three wheel-drop bits will be set. You
            can tell which kind of robot you have by examining the serial number
            inside the battery compartment. Wheel drops are separate only if there is
            an “E” in the serial number.</remarks>
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.ReturnSensors.Wall">
            <summary>
            The state of the wall sensor.
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.ReturnSensors.CliffLeft">
            <summary>
            The state of the cliff sensor on the left side of Roomba.
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.ReturnSensors.CliffFrontLeft">
            <summary>
            The state of the cliff sensor on the front left side of Roomba.
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.ReturnSensors.CliffFrontRight">
            <summary>
            The state of the cliff sensor on the front right side of Roomba.
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.ReturnSensors.CliffRight">
            <summary>
            The state of the cliff sensor on the right side of Roomba.
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.ReturnSensors.VirtualWall">
            <summary>
            The state of the virtual wall detector.
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.ReturnSensors.MotorOvercurrents">
            <summary>
            The state of the five motors’ overcurrent sensors.
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.ReturnSensors.DirtDetectorLeft">
            <summary>
            The current dirt detection level of the left side dirt detector
            is sent as a one byte value. A value of 0 indicates no dirt is
            detected. Higher values indicate higher levels of dirt detected.
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.ReturnSensors.DirtDetectorRight">
            <summary>
            The current dirt detection level of the right side dirt detector
            is sent as a one byte value. A value of 0 indicates no dirt is
            detected. Higher values indicate higher levels of dirt detected.
            <remarks>Some robots don’t have a right dirt detector. You can tell by removing
            the brushes. The dirt detectors are metallic disks. For robots with no right
            dirt detector this byte is always 0.</remarks>
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.ReturnPose">
            <summary>
            Roomba Pose Notifications
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.ReturnPose.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.ReturnPose.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.RoombaMode,System.Byte[])">
            <summary>
            Initialization Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.ReturnPose.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.RoombaMode)">
            <summary>
            Initialization Constructor
            </summary>
            <param name="roombaMode"></param>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.ReturnPose.ValidPacket">
            <summary>
            Is the current packet valid?
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.ReturnPose.RemoteControlCommand">
            <summary>
            The command number of the infrared command currently
            being received by Roomba. A value of 255 indicates that no
            remote control command is being received. See Roomba remote
            control documentation for a description of the command values.
            <remarks>Range: 0 – 255 (with some values unused)</remarks>
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.ReturnPose.ButtonsRoomba">
            <summary>
            The state of the Roomba buttons.
            </summary>
            <remarks>Roomba and Create share the same storage for Buttons, but the values are interpreted slightly different.</remarks>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.ReturnPose.ButtonsCreate">
            <summary>
            The state of the Create buttons.
            </summary>
            <remarks>Roomba and Create share the same storage for Buttons, but the values are interpreted slightly different.</remarks>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.ReturnPose.Distance">
            <summary>
            The distance that Roomba has traveled in millimeters since the
            distance it was last requested. This is the same as the sum of
            the distance traveled by both wheels divided by two. Positive
            values indicate travel in the forward direction; negative in the
            reverse direction. If the value is not polled frequently enough, it
            will be capped at its minimum or maximum.
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.ReturnPose.Angle">
            <summary>
            The angle that Roomba has turned through since the angle was
            last requested. The angle is expressed as the difference in
            the distance traveled by Roomba’s two wheels in millimeters,
            specifically the right wheel distance minus the left wheel
            distance, divided by two.
            <example>This makes counter-clockwise angles
            positive and clockwise angles negative. This can be used to
            directly calculate the angle that Roomba has turned through
            since the last request. Since the distance between Roomba’s
            wheels is 258mm, the equations for calculating the angles in
            familiar units are:
            Angle in radians = (2 * difference) / 258
            Angle in degrees = (360 * difference) / (258 * Pi).
            </example>
            <remarks>If the value is not polled frequently enough, it will
            be capped at its minimum or maximum. Reported angle and
            distance may not be accurate. Roomba measures these by detecting
            its wheel revolutions. If for example, the wheels slip on the
            floor, the reported angle of distance will be greater than the
            actual angle or distance.</remarks>
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.ReturnPower">
            <summary>
            Roomba Power Notifications
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.ReturnPower.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.ReturnPower.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.RoombaMode,System.Byte[])">
            <summary>
            Initialization Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.ReturnPower.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.RoombaMode)">
            <summary>
            Initialization Constructor
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.ReturnPower.ValidPacket">
            <summary>
            Is the current packet valid?
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.ReturnPower.ChargingState">
            <summary>
            A code indicating the current charging state of Roomba.
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.ReturnPower.Voltage">
            <summary>
            The voltage of Roomba's battery in millivolts (mV)
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.ReturnPower.Current">
            <summary>
            The current in milliamps (mA) flowing into or out of Roomba’s
            battery. Negative currents indicate current is flowing out of the
            battery, as during normal running. Positive currents indicate
            current is flowing into the battery, as during charging.
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.ReturnPower.Temperature">
            <summary>
            The temperature of Roomba’s battery in degrees Celsius.
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.ReturnPower.Charge">
            <summary>
            The current charge of Roomba’s battery in milliamp-hours (mAh).
            The charge value decreases as the battery is depleted during
            running and increases when the battery is charged.
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.ReturnPower.Capacity">
            <summary>
            The estimated charge capacity of Roomba’s battery. When the
            Charge value reaches the Capacity value, the battery is fully
            charged.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandReceivedNotification">
            <summary>
            RoombaCommandReceived Notification
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandReceivedNotification.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandReceived)">
            <summary>
            Default Constructor
            </summary>
            <param name="data"></param>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.ByteArray">
            <summary>
            Byte Array static methods
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.ByteArray.IsEqual(System.Byte[],System.Byte[])">
            <summary>
            Do the two byte arrays contain identical data?
            </summary>
            <param name="first"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.ByteArray.BigEndianSetShort(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Set a signed 2-byte short integer
            <remarks>Big-Endian encoding</remarks>
            </summary>
            <param name="data"></param>
            <param name="startPosition"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.ByteArray.BigEndianGetShort(System.Byte[],System.Int32)">
            <summary>
            Get a signed 2-byte short integer
            </summary>
            <param name="data"></param>
            <param name="startPosition"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.ByteArray.BigEndianGetUShort(System.Byte[],System.Int32)">
            <summary>
            get an unsigned Big-Endian 2-byte short integer
            <remarks>HighByte/LowByte order</remarks>
            </summary>
            <param name="data"></param>
            <param name="startPosition"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.ByteArray.BigEndianSetUShort(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Set an unsigned 2-byte Big-Endian unsigned short integer
            </summary>
            <param name="data"></param>
            <param name="startPosition"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.ByteArray.CopyTo(System.Byte[],System.Byte[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Copy a portion of an array to another array
            </summary>
            <param name="destination"></param>
            <param name="source"></param>
            <param name="sourceStart"></param>
            <param name="destinationStart"></param>
            <param name="length"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.ByteArray.Combine(System.Byte[],System.Byte[])">
            <summary>
            Combine two byte arrays
            </summary>
            <param name="first"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.ByteArray.SubArray(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Return a sub-array
            </summary>
            <param name="data"></param>
            <param name="start"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages">
            <summary>
            Internal Messages
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages.#ctor">
            <summary>
            Internal Messages
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.DssStream.Proxy.ReadText}">
            <summary>
            Implicit Operator for Port of stream.ReadText
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.ATResponse}">
            <summary>
            Implicit Operator for Port of ATResponse
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.ATFail}">
            <summary>
            Implicit Operator for Port of ATFail
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.WakeupNotification}">
            <summary>
            Implicit Operator for Port of WakeupNotification
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.Configure}">
            <summary>
            Implicit Operator for Port of Configure
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.Connect}">
            <summary>
            Implicit Operator for Port of Connect
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdatePose}">
            <summary>
            Implicit Operator for Port of UpdatePose
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdatePower}">
            <summary>
            Implicit Operator for Port of UpdatePower
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateBumpsCliffsAndWalls}">
            <summary>
            Implicit Operator for Port of UpdateBumpsCliffsAndWalls
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateAll}">
            <summary>
            Implicit Operator for Port of UpdateAll
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateCliffDetail}">
            <summary>
            Implicit Operator for Port of UpdateCliffDetail
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateTelemetry}">
            <summary>
            Implicit Operator for Port of UpdateTelemetry
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateMode}">
            <summary>
            Implicit Operator for Port of UpdateMode
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateNotifications}">
            <summary>
            Implicit Operator for Port of UpdateNotifications
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.ChangeToMode}">
            <summary>
            Implicit Operator for Port of ChangeToMode
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.ProcessAtomicCommand}">
            <summary>
            Implicit Operator for Port of ProcessAtomicCommand
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.WakeupRoomba}">
            <summary>
            Implicit Operator for Port of WakeupRoomba
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.ExecuteIRobotCommand}">
            <summary>
            Implicit Operator for Port of ExecuteIRobotCommand
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages)~Microsoft.Ccr.Core.Port{System.DateTime}">
            <summary>
            Implicit Operator for Port of DateTime
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages.ProcessAtomicCommand(Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommand)">
            <summary>
            Process an atomic command
            </summary>
            <param name="cmd"></param>
            <returns>The response port</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages.UpdateMode(Microsoft.Robotics.Services.IRobot.Roomba.RoombaMode)">
            <summary>
            Update the current Roomba Mode
            </summary>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages.UpdateMode(Microsoft.Robotics.Services.IRobot.Roomba.IRobotModel,System.DateTime)">
            <summary>
            Update the current Roomba Mode and Model
            </summary>
            <param name="model"></param>
            <param name="firmwareDate"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages.UpdateMode(Microsoft.Robotics.Services.IRobot.Roomba.RoombaMode,Microsoft.Robotics.Services.IRobot.Roomba.RoombaMode)">
            <summary>
            Update the current Roomba Mode and optionally maintain the mode.
            </summary>
            <param name="mode"></param>
            <param name="maintainMode">The mode to be maintained after this command completes</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages.SendWakeup">
            <summary>
            Send a wakeup command to the iRobot
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.InternalMessages.ChangeToMode(Microsoft.Robotics.Services.IRobot.Roomba.RoombaMode)">
            <summary>
            Change to the specified mode.
            </summary>
            <param name="newMode"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.TextResponse">
            <summary>
            starts "ok" cr lf
            starts "bat:   min 0  sec 57  mV 16894  mA 1270  deg-C 11
            starts "key-wakeup " ... to cr lf
            starts "processor-sleep" ... to cr lf
            starts "do-charging" ...
            starts "slept for "...
            starts "battery-current-quiescent-raw "
            starts "2005-07-14-1331-L"
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.ATResponse">
            <summary>
            starts "ok" cr lf
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.ATFail">
            <summary>
            Failure on AT Command
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.WakeupNotification">
            <summary>
            starts "key-wakeup " ... to cr lf
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.ChangeToMode">
            <summary>
            Change to the specified Mode
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.ChangeToMode.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.ChangeToMode.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.RoombaMode)">
            <summary>
            Initialization constructor
            </summary>
            <param name="roombaMode"></param>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.ProcessAtomicCommand">
            <summary>
            An internal Submit operation which sends a
            command to the iRobotStream, waits for a response,
            then updates state appropriately.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.ProcessAtomicCommand.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.ProcessAtomicCommand.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommand)">
            <summary>
            Initialization Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.ProcessAtomicCommand.ToString">
            <summary>
            String representation of the embedded command
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.WakeupRoomba">
            <summary>
            Wake up the iRobot using the specified connection type.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.WakeupRoomba.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.WakeupRoomba.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.iRobotConnectionType)">
            <summary>
            Wake up the iRobot using the specified connection type.
            </summary>
            <param name="iRobotConnectionType"></param>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.RobotConnectionType">
            <summary>
            Wake up the iRobot using the specified connection type.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RobotConnectionType.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RobotConnectionType.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.iRobotConnectionType)">
            <summary>
            Wake up the iRobot using the specified connection type.
            </summary>
            <param name="iRobotConnectionType"></param>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.RobotConnectionType.ConnectionType">
            <summary>
            The iRobot Connection Type
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.ExecuteIRobotCommand">
            <summary>
            Execute an iRobotCommand and wait for the response
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.ExecuteIRobotCommand.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.ExecuteIRobotCommand.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommand)">
            <summary>
            Initialization Constructor
            </summary>
            <param name="cmd"></param>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.BytePacket">
            <summary>
            A packet of bytes
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.BytePacket.Sequence">
            <summary>
            A sequence number
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.BytePacket.Data">
            <summary>
            The data
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.BytePacket.PacketTime">
            <summary>
            The time of the packet origination
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.BytePacket.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.BytePacket.#ctor(Microsoft.Robotics.Services.DssStream.Proxy.StreamData)">
            <summary>
            Initialization constructor
            </summary>
            <param name="streamData"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.BytePacket.#ctor(System.Byte[],System.Int32)">
            <summary>
            Initialization constructor
            </summary>
            <param name="data"></param>
            <param name="sequence"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.BytePacket.#ctor(System.Byte[],System.Int32,System.DateTime)">
            <summary>
            Full initialization
            </summary>
            <param name="data"></param>
            <param name="sequence"></param>
            <param name="packetTime"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.BytePacket.CloneTrailingBytes(System.Int32)">
            <summary>
            Create a new data packet with the remaining bytes from this packet.
            </summary>
            <param name="startIx"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.BytePacket.Combine(Microsoft.Robotics.Services.IRobot.Roomba.BytePacket,Microsoft.Robotics.Services.IRobot.Roomba.BytePacket)">
            <summary>
            Combine two packets into one.
            </summary>
            <param name="first"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.SensorUpdates.IRobotSensorUpdatesPort">
            <summary>
            iRobot Sensor Updates Response Port
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.SensorUpdates.IRobotSensorUpdatesPort.#ctor">
            <summary>
            iRobot Sensor Updates Response Port
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.SensorUpdates.IRobotSensorUpdatesPort.op_Implicit(Microsoft.Robotics.Services.IRobot.SensorUpdates.IRobotSensorUpdatesPort)~Microsoft.Ccr.Core.Port{Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup}">
            <summary>
            Implicit Operator for Port of DsspDefaultLookup
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.SensorUpdates.IRobotSensorUpdatesPort.op_Implicit(Microsoft.Robotics.Services.IRobot.SensorUpdates.IRobotSensorUpdatesPort)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.SensorUpdates.Subscribe}">
            <summary>
            Implicit Operator for Port of roomba.Subscribe
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.SensorUpdates.IRobotSensorUpdatesPort.op_Implicit(Microsoft.Robotics.Services.IRobot.SensorUpdates.IRobotSensorUpdatesPort)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateAll}">
            <summary>
            Implicit Operator for Port of UpdateAll
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.SensorUpdates.IRobotSensorUpdatesPort.op_Implicit(Microsoft.Robotics.Services.IRobot.SensorUpdates.IRobotSensorUpdatesPort)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateBumpsCliffsAndWalls}">
            <summary>
            Implicit Operator for Port of UpdateBumpsCliffsAndWalls
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.SensorUpdates.IRobotSensorUpdatesPort.op_Implicit(Microsoft.Robotics.Services.IRobot.SensorUpdates.IRobotSensorUpdatesPort)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdatePose}">
            <summary>
            Implicit Operator for Port of UpdatePose
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.SensorUpdates.IRobotSensorUpdatesPort.op_Implicit(Microsoft.Robotics.Services.IRobot.SensorUpdates.IRobotSensorUpdatesPort)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdatePower}">
            <summary>
            Implicit Operator for Port of UpdatePower
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.SensorUpdates.IRobotSensorUpdatesPort.op_Implicit(Microsoft.Robotics.Services.IRobot.SensorUpdates.IRobotSensorUpdatesPort)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateMode}">
            <summary>
            Implicit Operator for Port of UpdateMode
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.SensorUpdates.IRobotSensorUpdatesPort.op_Implicit(Microsoft.Robotics.Services.IRobot.SensorUpdates.IRobotSensorUpdatesPort)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateCliffDetail}">
            <summary>
            Implicit Operator for Port of UpdateCliffDetail
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.SensorUpdates.IRobotSensorUpdatesPort.op_Implicit(Microsoft.Robotics.Services.IRobot.SensorUpdates.IRobotSensorUpdatesPort)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateTelemetry}">
            <summary>
            Implicit Operator for Port of UpdateTelemetry
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.SensorUpdates.IRobotSensorUpdatesPort.op_Implicit(Microsoft.Robotics.Services.IRobot.SensorUpdates.IRobotSensorUpdatesPort)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateNotifications}">
            <summary>
            Implicit Operator for Port of UpdateNotifications
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.SensorUpdates.IRobotSensorUpdatesPort.Subscribe(Microsoft.Dss.ServiceModel.Dssp.SubscribeRequestType,Microsoft.Ccr.Core.IPort)">
            <summary>
            Post Subscribe and return the response port.
            </summary>
            <param name="body"></param>
            <param name="notificationPort"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.SensorUpdates.IRobotSensorUpdatesPort.Subscribe(Microsoft.Ccr.Core.IPort)">
            <summary>
            Post Subscribe and return the response port.
            </summary>
            <param name="notificationPort"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.SensorUpdates.Subscribe">
            <summary>
            Subscribe Operation
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.SensorUpdates.Subscribe.#ctor">
            <summary>
            Subscribe to Create/Roomba Sensors
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateNotifications">
            <summary>
            iRobot Create Notification Results
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateNotifications.#ctor(Microsoft.Robotics.Services.IRobot.Create.ReturnStream)">
            <summary>
            Update Create Notification Detail
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateNotifications.#ctor">
            <summary>
            Update Create Notification Detail
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateCliffDetail">
            <summary>
            CliffDetail Results
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateCliffDetail.#ctor(Microsoft.Robotics.Services.IRobot.Create.ReturnCliffDetail)">
            <summary>
            Update Cliff Detail
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateCliffDetail.#ctor">
            <summary>
            Update Cliff Detail
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateTelemetry">
            <summary>
            Telemetry Results
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateTelemetry.#ctor(Microsoft.Robotics.Services.IRobot.Create.ReturnTelemetry)">
            <summary>
            Update Cliff Detail
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateTelemetry.#ctor">
            <summary>
            Update Cliff Detail
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateAll">
            <summary>
            ReturnAll Notification
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateAll.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.ReturnAll)">
            <summary>
            Default Constructor
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateAll.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateBumpsCliffsAndWalls">
            <summary>
            ReturnSensors Notification
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateBumpsCliffsAndWalls.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.ReturnSensors)">
            <summary>
            Default Constructor
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateBumpsCliffsAndWalls.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdatePose">
            <summary>
            ReturnPose Notification
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdatePose.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.ReturnPose)">
            <summary>
            Default Constructor
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdatePose.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdatePower">
            <summary>
            ReturnPower Notification
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdatePower.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.ReturnPower)">
            <summary>
            Default Constructor
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdatePower.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateMode">
            <summary>
            Update the Roomba Mode
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateMode.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateMode.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.RoombaMode)">
            <summary>
            Initialization constructor
            </summary>
            <param name="roombaMode"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateMode.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.RoombaMode,Microsoft.Robotics.Services.IRobot.Roomba.RoombaMode)">
            <summary>
            Initialization constructor
            </summary>
            <param name="roombaMode"></param>
            <param name="maintainMode">The mode to be maintained after the current command completes</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateMode.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.RoombaMode,Microsoft.Robotics.Services.IRobot.Roomba.IRobotModel,System.DateTime)">
            <summary>
            Initialization constructor
            </summary>
            <param name="roombaMode"></param>
            <param name="robotModel"></param>
            <param name="firmwareDate"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.SensorUpdates.UpdateMode.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.RoombaState)">
            <summary>
            Initialization constructor
            </summary>
            <param name="roombaState"></param>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.SensorUpdates.Contract">
            <summary>
            Roomba Service Contract
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.SensorUpdates.Contract.Identifier">
            <summary>
            Roomba More Commands Service Contract
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.CreateOperations">
            <summary>
            iRobot Create Commands
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateOperations.#ctor">
            <summary>
            iRobot Create Commands
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Create.CreateOperations)~Microsoft.Ccr.Core.Port{Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup}">
            <summary>
            Implicit Operator for Port of DsspDefaultLookup
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Create.CreateOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Create.CreateDemo}">
            <summary>
            Implicit Operator for Port of CreateDemo
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Create.CreateOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Create.CreatePWMLowSideDrivers}">
            <summary>
            Implicit Operator for Port of CreatePWMLowSideDrivers
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Create.CreateOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Create.CreateDriveDirect}">
            <summary>
            Implicit Operator for Port of CreateDriveDirect
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Create.CreateOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Create.CreateDigitalOutputs}">
            <summary>
            Implicit Operator for Port of CreateDigitalOutputs
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Create.CreateOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Create.CreateStream}">
            <summary>
            Implicit Operator for Port of CreateStream
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Create.CreateOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Create.CreateQueryList}">
            <summary>
            Implicit Operator for Port of CreateQueryList
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Create.CreateOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Create.CreateStreamPauseResume}">
            <summary>
            Implicit Operator for Port of CreateStreamPauseResume
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Create.CreateOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Create.CreateSendIR}">
            <summary>
            Implicit Operator for Port of CreateSendIR
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Create.CreateOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Create.CreateDefineScript}">
            <summary>
            Implicit Operator for Port of CreateDefineScript
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Create.CreateOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Create.CreatePlayScript}">
            <summary>
            Implicit Operator for Port of CreatePlayScript
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Create.CreateOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Create.CreateShowScript}">
            <summary>
            Implicit Operator for Port of CreateShowScript
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Create.CreateOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Create.CreateWaitTime}">
            <summary>
            Implicit Operator for Port of CreateWaitTime
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Create.CreateOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Create.CreateWaitDistance}">
            <summary>
            Implicit Operator for Port of CreateWaitDistance
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Create.CreateOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Create.CreateWaitAngle}">
            <summary>
            Implicit Operator for Port of CreateWaitAngle
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Create.CreateOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Create.CreateWaitEvent}">
            <summary>
            Implicit Operator for Port of CreateWaitEvent
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateOperations.Post(System.Object)">
            <summary>
            Generic Post
            </summary>
            <param name="op"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateOperations.DsspDefaultLookup(Microsoft.Dss.ServiceModel.Dssp.LookupRequestType)">
            <summary>
            Post DsspDefaultLookup and return the response port.
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateOperations.DsspDefaultLookup">
            <summary>
            Post DsspDefaultLookup and return the response port.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateOperations.CreateDemo(Microsoft.Robotics.Services.IRobot.Create.CmdDemo)">
            <summary>
            Post CreateDemo and return the response port.
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateOperations.CreatePWMLowSideDrivers(Microsoft.Robotics.Services.IRobot.Create.CmdPWMLowSideDrivers)">
            <summary>
            Post CreatePWMLowSideDrivers and return the response port.
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateOperations.CreateDriveDirect(Microsoft.Robotics.Services.IRobot.Create.CmdDriveDirect)">
            <summary>
            Post CreateDriveDirect and return the response port.
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateOperations.CreateDigitalOutputs(Microsoft.Robotics.Services.IRobot.Create.CmdDigitalOutputs)">
            <summary>
            Post CreateDigitalOutputs and return the response port.
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateOperations.CreateStream(Microsoft.Robotics.Services.IRobot.Create.CmdStream)">
            <summary>
            Post CreateStream and return the response port.
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateOperations.CreateQueryList(Microsoft.Robotics.Services.IRobot.Create.CmdQueryList)">
            <summary>
            Post CreateQueryList and return the response port.
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateOperations.CreateStreamPauseResume(Microsoft.Robotics.Services.IRobot.Create.CmdStreamPauseResume)">
            <summary>
            Post CreateStreamPauseResume and return the response port.
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateOperations.CreateSendIR(Microsoft.Robotics.Services.IRobot.Create.CmdSendIR)">
            <summary>
            Post CreateSendIR and return the response port.
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateOperations.CreateDefineScript(Microsoft.Robotics.Services.IRobot.Create.CmdDefineScript)">
            <summary>
            Post CreateDefineScript and return the response port.
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateOperations.CreatePlayScript(Microsoft.Robotics.Services.IRobot.Create.CmdPlayScript)">
            <summary>
            Post CreatePlayScript and return the response port.
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateOperations.CreatePlayScript">
            <summary>
            Post CreatePlayScript and return the response port.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateOperations.CreateShowScript(Microsoft.Robotics.Services.IRobot.Create.CmdShowScript)">
            <summary>
            Post CreateShowScript and return the response port.
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateOperations.CreateWaitTime(Microsoft.Robotics.Services.IRobot.Create.CmdWaitTime)">
            <summary>
            Post CreateWaitTime and return the response port.
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateOperations.CreateWaitDistance(Microsoft.Robotics.Services.IRobot.Create.CmdWaitDistance)">
            <summary>
            Post CreateWaitDistance and return the response port.
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateOperations.CreateWaitAngle(Microsoft.Robotics.Services.IRobot.Create.CmdWaitAngle)">
            <summary>
            Post CreateWaitAngle and return the response port.
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.CreateOperations.CreateWaitEvent(Microsoft.Robotics.Services.IRobot.Create.CmdWaitEvent)">
            <summary>
            Post CreateWaitEvent and return the response port.
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Contract">
            <summary>
            Create Service Contract
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Contract.Identifier">
            <summary>
            Create Service Contract
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.RoombaState">
            <summary>
            Current state of the Roomba
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaState.Name">
            <summary>
            The robot Name
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaState.FirmwareDate">
            <summary>
            The Firmware Date
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaState.SerialPort">
            <summary>
            Serial Port connection
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaState.BaudRate">
            <summary>
            Connection Baud Rate
            <remarks>0 uses the default Baud rate</remarks>
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaState.IRobotModel">
            <summary>
            The type of iRobot Create or Roomba
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaState.ConnectionType">
            <summary>
            The connection type
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaState.StopOnResync">
            <summary>
            Stop Motors when sensor data is garbled
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaState.Mode">
            <summary>
            SCI Mode
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaState.MaintainMode">
            <summary>
            The SCI Mode to be maintained
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaState.Sensors">
            <summary>
             Sensors
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaState.Pose">
            <summary>
            Pose
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaState.Power">
            <summary>
            Power
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaState.LastUpdated">
            <summary>
            Date last updated
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaState.PollingInterval">
            <summary>
            Polling interval in ms
            <remarks>
               -1 = no polling (less than zero)
            0-199 = default for Create/Roomba
            200-N = ms between polling
            </remarks>
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaState.SongDefinitions">
            <summary>
            Song Definitions
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaState.WaitForConnect">
            <summary>
            Wait for Connect before establishing a connection with the iRobot.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaState.RobotImage">
            <summary>
            An Image which represents this iRobot.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaState.CliffDetail">
            <summary>
            iRobot Create Cliff Detail
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaState.Telemetry">
            <summary>
            iRobot Create Telemetry
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.RoombaState.CreateNotifications">
            <summary>
            Notifications which will be requested
            when connecting to an iRobot Create
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.IRobotConnect">
            <summary>
            IRobot Connect Message
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations">
            <summary>
            Roomba Operations
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.#ctor">
            <summary>
            iRobot Roomba Operations
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations)~Microsoft.Ccr.Core.Port{Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup}">
            <summary>
            Implicit Operator for Port of DsspDefaultLookup
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations)~Microsoft.Ccr.Core.Port{Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop}">
            <summary>
            Implicit Operator for Port of DsspDefaultDrop
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.Configure}">
            <summary>
            Implicit Operator for Port of Configure
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.Connect}">
            <summary>
            Implicit Operator for Port of Connect
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.Get}">
            <summary>
            Implicit Operator for Port of Get
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations)~Microsoft.Ccr.Core.Port{Microsoft.Dss.Core.DsspHttp.HttpGet}">
            <summary>
            Implicit Operator for Port of Microsoft.Dss.Core.DsspHttp.HttpGet
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations)~Microsoft.Ccr.Core.Port{Microsoft.Dss.Core.DsspHttp.HttpPost}">
            <summary>
            Implicit Operator for Port of Microsoft.Dss.Core.DsspHttp.HttpPost
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.RoombaSetMode}">
            <summary>
            Implicit Operator for Port of RoombaSetMode
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.RoombaDrive}">
            <summary>
            Implicit Operator for Port of RoombaDrive
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.RoombaSetCleaningMotors}">
            <summary>
            Implicit Operator for Port of RoombaSetCleaningMotors
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.RoombaSetLeds}">
            <summary>
            Implicit Operator for Port of RoombaSetLeds
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.RoombaDefineSong}">
            <summary>
            Implicit Operator for Port of RoombaDefineSong
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.RoombaPlaySong}">
            <summary>
            Implicit Operator for Port of RoombaPlaySong
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.RoombaGetSensors}">
            <summary>
            Implicit Operator for Port of RoombaGetSensors
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.RoombaSeekDock}">
            <summary>
            Implicit Operator for Port of RoombaSeekDock
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.RoombaStartCleaning}">
            <summary>
            Implicit Operator for Port of RoombaStartCleaning
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.RoombaStartSpotCleaning}">
            <summary>
            Implicit Operator for Port of RoombaStartSpotCleaning
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.RoombaStartMaxCleaning}">
            <summary>
            Implicit Operator for Port of RoombaStartMaxCleaning
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.RoombaGetFirmwareDate}">
            <summary>
            Implicit Operator for Port of RoombaGetFirmwareDate
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.Post(System.Object)">
            <summary>
            Generic Post
            </summary>
            <param name="op"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.DsspDefaultLookup(Microsoft.Dss.ServiceModel.Dssp.LookupRequestType)">
            <summary>
            Post Dssp Default Lookup and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.DsspDefaultLookup">
            <summary>
            Post Dssp Default Lookup and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.DsspDefaultDrop(Microsoft.Dss.ServiceModel.Dssp.DropRequestType)">
            <summary>
            Post Dssp Default Drop and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.DsspDefaultDrop">
            <summary>
            Post Dssp Default Drop and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.Connect">
            <summary>
            Post Connect and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.Connect(Microsoft.Robotics.Services.IRobot.Roomba.IRobotConnect)">
            <summary>
            Post Connect and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.Configure(Microsoft.Robotics.Services.IRobot.Roomba.RoombaState)">
            <summary>
            Post Configure and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.Get(Microsoft.Dss.ServiceModel.Dssp.GetRequestType)">
            <summary>
            Post Get and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.Get">
            <summary>
            Post Get and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.HttpGet(Microsoft.Dss.Core.DsspHttp.HttpGetRequestType)">
            <summary>
            Post Http Get and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.HttpPost(Microsoft.Dss.Core.DsspHttp.HttpPostRequestType)">
            <summary>
            Post Http Post and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.RoombaSetMode(Microsoft.Robotics.Services.IRobot.Roomba.RoombaMode,System.Boolean)">
            <summary>
            Set the iRobot Mode.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.RoombaSetMode(Microsoft.Robotics.Services.IRobot.Roomba.CmdSetMode)">
            <summary>
            Post Roomba Set Mode and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.RoombaDrive(System.Int32,System.Int32)">
            <summary>
            Controls Roomba's drive wheels.
            <remarks>The command takes four data
            bytes, which are interpreted as two 16 bit signed values using
            twos-complement. The first two bytes specify the average velocity
            of the drive wheels in millimeters per second (mm/s), with the
            high byte sent first. The next two bytes specify the radius, in
            millimeters, at which Roomba should turn. The longer radii make
            Roomba drive straighter; shorter radii make it turn more. A Drive
            command with a positive velocity and a positive radius will make
            Roomba drive forward while turning toward the left. A negative
            radius will make it turn toward the right. Special cases for the
            radius make Roomba turn in place or drive straight, as specified
            below. </remarks>
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.RoombaDrive(Microsoft.Robotics.Services.IRobot.Roomba.CmdDrive)">
            <summary>
            Post Roomba Drive and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.RoombaSetCleaningMotors(Microsoft.Robotics.Services.IRobot.Roomba.CmdMotors)">
            <summary>
            Post Roomba Set Cleaning Motors and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.RoombaSetLeds(Microsoft.Robotics.Services.IRobot.Roomba.CmdLeds)">
            <summary>
            Post Roomba Set Leds and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.RoombaDefineSong(System.Int32)">
            <summary>
            Plays one of 16 songs, as specified by an earlier Song command.
            <remarks>If the requested song has not been specified yet,
            the Play command does nothing. </remarks>
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.RoombaDefineSong(Microsoft.Robotics.Services.IRobot.Roomba.CmdDefineSong)">
            <summary>
            Post Roomba Define Song and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.RoombaPlaySong(System.Int32)">
            <summary>
            Plays one of 16 songs, as specified by an earlier Song command.
            <remarks>If the requested song has not been specified yet,
            the Play command does nothing. </remarks>
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.RoombaPlaySong(Microsoft.Robotics.Services.IRobot.Roomba.CmdPlaySong)">
            <summary>
            Post Roomba Play Song and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.RoombaGetSensors(Microsoft.Robotics.Services.IRobot.Roomba.CmdSensors)">
            <summary>
            Post Roomba Get Sensors and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.RoombaSeekDock(Microsoft.Robotics.Services.IRobot.Roomba.CmdForceSeekingDock)">
            <summary>
            Post Roomba Seek Dock and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.RoombaStartCleaning(Microsoft.Robotics.Services.IRobot.Roomba.CmdClean)">
            <summary>
            Post Roomba Start Cleaning and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.RoombaStartSpotCleaning(Microsoft.Robotics.Services.IRobot.Roomba.CmdSpot)">
            <summary>
            Post Roomba Start Spot Cleaning and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.RoombaStartMaxCleaning(Microsoft.Robotics.Services.IRobot.Roomba.CmdMax)">
            <summary>
            Post Roomba Start Max Cleaning and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaOperations.RoombaGetFirmwareDate(Microsoft.Robotics.Services.IRobot.Roomba.CmdFirmwareDate)">
            <summary>
            Post Roomba Get Firmware Date and return the response port.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.StandardResponse">
            <summary>
            The Standard iRobot command response.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.GetSensorsResponse">
            <summary>
            The response type for RoombaGetSensors
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.GetSensorsResponse.#ctor">
            <summary>
            The response type for RoombaGetSensors
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.GetSensorsResponse.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.GetSensorsResponse)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.ReturnAll}">
            <summary>
            Implicit operator for ReturnAll
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.GetSensorsResponse.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.GetSensorsResponse)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.ReturnSensors}">
            <summary>
            Implicit operator for ReturnSensors
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.GetSensorsResponse.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.GetSensorsResponse)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.ReturnPose}">
            <summary>
            Implicit operator for ReturnPose
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.GetSensorsResponse.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.GetSensorsResponse)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.ReturnPower}">
            <summary>
            Implicit operator for ReturnPower
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.GetSensorsResponse.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.GetSensorsResponse)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Create.ReturnCliffDetail}">
            <summary>
            Implicit operator for ReturnCliffDetail
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.GetSensorsResponse.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.GetSensorsResponse)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Create.ReturnTelemetry}">
            <summary>
            Implicit operator for ReturnTelemetry
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.GetSensorsResponse.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.GetSensorsResponse)~Microsoft.Ccr.Core.Port{W3C.Soap.Fault}">
            <summary>
            Implicit operator for Fault
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.RoombaResponsePort">
            <summary>
            Internal Roomba Command Response Port
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaResponsePort.#ctor">
            <summary>
            Roomba Response Port
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaResponsePort.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.RoombaResponsePort)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.RoombaCommandReceived}">
            <summary>
            Implicit Operator for Port of RoombaCommandReceived
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaResponsePort.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.RoombaResponsePort)~Microsoft.Ccr.Core.Port{W3C.Soap.Fault}">
            <summary>
            Implicit Operator for Port of Fault
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaResponsePort.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.RoombaResponsePort)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.ReturnAll}">
            <summary>
            Implicit Operator for Port of ReturnAll
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaResponsePort.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.RoombaResponsePort)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.ReturnSensors}">
            <summary>
            Implicit Operator for Port of ReturnSensors
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaResponsePort.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.RoombaResponsePort)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.ReturnPose}">
            <summary>
            Implicit Operator for Port of ReturnPose
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaResponsePort.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.RoombaResponsePort)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.ReturnPower}">
            <summary>
            Implicit Operator for Port of ReturnPower
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaResponsePort.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.RoombaResponsePort)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Create.ReturnCliffDetail}">
            <summary>
            Implicit Operator for Port of ReturnCliffDetail
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaResponsePort.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.RoombaResponsePort)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Create.ReturnTelemetry}">
            <summary>
            Implicit Operator for Port of ReturnTelemetry
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaResponsePort.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.RoombaResponsePort)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Create.ReturnQueryList}">
            <summary>
            Implicit Operator for Port of ReturnQueryList
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaResponsePort.op_Implicit(Microsoft.Robotics.Services.IRobot.Roomba.RoombaResponsePort)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.IRobot.Roomba.ReturnFirmwareDate}">
            <summary>
            Implicit Operator for Port of ReturnFirmwareDate
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.iRobotReceivePort">
            <summary>
            Internal serial receive port
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Configure">
            <summary>
            Initiates a connection between the service host/PC and the iRobot with full configuration.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Configure.#ctor">
            <summary>
            Initiates a connection between the service host/PC and the iRobot with full configuration.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Configure.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.RoombaState)">
            <summary>
            Initiates a connection between the service host/PC and the iRobot with full configuration.
            </summary>
            <param name="state"></param>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Connect">
            <summary>
            iRobot Connect Operation
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Connect.#ctor">
            <summary>
            iRobot Connect Operation
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Connect.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.IRobotConnect)">
            <summary>
            iRobot Connect Operation
            </summary>
            <param name="body"></param>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Get">
            <summary>
            Get Operation
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.RoombaGetFirmwareDate">
            <summary>
            Query for Roomba/Create Firmware Date
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.RoombaSetMode">
            <summary>
            Place the iRobot in the specified mode.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaSetMode.#ctor">
            <summary>
            Place the iRobot in the specified mode.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaSetMode.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.CmdSetMode)">
            <summary>
            Place the iRobot in the specified mode.
            </summary>
            <param name="body"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaSetMode.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.RoombaMode,System.Boolean)">
            <summary>
            Place the iRobot in the specified mode.
            </summary>
            <param name="mode"></param>
            <param name="maintainMode"></param>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.RoombaStartSpotCleaning">
            <summary>
            Starts a spot cleaning cycle, the same as a normal "spot" button press.
            <remarks>This command puts the SCI in passive mode.</remarks>
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaStartSpotCleaning.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.RoombaStartCleaning">
            <summary>
            Starts a normal cleaning cycle, the same as a normal "clean" button press.
            <remarks>This command puts the SCI in passive mode.</remarks>
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaStartCleaning.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.RoombaStartMaxCleaning">
            <summary>
            Starts a maximum time cleaning cycle, the same as a normal "max" button press.
            <remarks>This command puts the SCI in passive mode.</remarks>
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaStartMaxCleaning.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.CreateStartDemo">
            <summary>
            Starts a Create demo.
            <remarks></remarks>
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.CreateStartDemo.#ctor(Microsoft.Robotics.Services.IRobot.Create.DemoMode)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.RoombaDrive">
            <summary>
            Controls Roomba's drive wheels.
            <remarks>The Roomba is controlled by providing the average velocity
            of the drive wheels in millimeters per second (mm/s), and the radius, in
            millimeters, at which Roomba should turn. The longer radii make
            Roomba drive straighter; shorter radii make it turn more. A Drive
            command with a positive velocity and a positive radius will make
            Roomba drive forward while turning toward the left. A negative
            radius will make it turn toward the right. Special cases for the
            radius make Roomba turn in place or drive straight, as specified
            below. </remarks>
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaDrive.#ctor">
            <summary>
            Controls Roomba's drive wheels.
            <remarks>The Roomba is controlled by providing the average velocity
            of the drive wheels in millimeters per second (mm/s), and the radius, in
            millimeters, at which Roomba should turn. The longer radii make
            Roomba drive straighter; shorter radii make it turn more. A Drive
            command with a positive velocity and a positive radius will make
            Roomba drive forward while turning toward the left. A negative
            radius will make it turn toward the right. Special cases for the
            radius make Roomba turn in place or drive straight, as specified
            below. </remarks>
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaDrive.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.CmdDrive)">
            <summary>
            Controls Roomba's drive wheels.
            <remarks>The Roomba is controlled by providing the average velocity
            of the drive wheels in millimeters per second (mm/s), and the radius, in
            millimeters, at which Roomba should turn. The longer radii make
            Roomba drive straighter; shorter radii make it turn more. A Drive
            command with a positive velocity and a positive radius will make
            Roomba drive forward while turning toward the left. A negative
            radius will make it turn toward the right. Special cases for the
            radius make Roomba turn in place or drive straight, as specified
            below. </remarks>
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaDrive.#ctor(System.Int32,System.Int32)">
            <summary>
            Initialization constructor
            </summary>
            <param name="velocity">mm/s (-500 to +500)</param>
            <param name="radius">Radius in mm (-2000 to +2000, 32768)
            1 = counter clockwise when velocity greater than 0 and clockwise when velocity less than 0.
            -1 = counter clockwise when velocity less than 0 and clockwise when velocity greater than 0.
            32768 = drive straight ahead</param>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.RoombaSetCleaningMotors">
            <summary>
            Controls Roomba’s cleaning motors.
            <remarks>Multiple motors may be specified at once.
            This command does not change the mode.</remarks>
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaSetCleaningMotors.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaSetCleaningMotors.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.RoombaMotorBits)">
            <summary>
            Initialization Constructor
            </summary>
            <param name="motorFlags"></param>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.RoombaSetLeds">
            <summary>
            Controls Roomba’s LEDs.
            <remarks>Multiple LEDs may be specified at once.
            This command does not change the mode.</remarks>
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaSetLeds.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaSetLeds.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.RoombaLedBits,System.Int32,System.Int32)">
            <summary>
            Initialization Constructor
            </summary>
            <param name="ledBits"></param>
            <param name="powerColor">0-green, 255-red</param>
            <param name="powerIntensity">0-off, 255-Full</param>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.RoombaDefineSong">
            <summary>
            Specifies a song to the SCI to be played later.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaDefineSong.#ctor">
            <summary>
            Specifies a song to the SCI to be played later.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaDefineSong.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.CmdDefineSong)">
            <summary>
            Specifies a song to the SCI to be played later.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.RoombaPlaySong">
            <summary>
            Plays one of 16 songs, as specified by an earlier RooombaDefineSong command.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaPlaySong.#ctor">
            <summary>
            Plays one of 16 songs, as specified by an earlier RooombaDefineSong command.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaPlaySong.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.CmdPlaySong)">
            <summary>
            Plays one of 16 songs, as specified by an earlier RooombaDefineSong command.
            </summary>
            <param name="body"></param>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.RoombaGetSensors">
            <summary>
            Query for Roomba Pose, Power, and Sensors
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaGetSensors.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaGetSensors.#ctor(Microsoft.Robotics.Services.IRobot.Roomba.RoombaQueryType)">
            <summary>
            Get the specified sensors from Roomba
            </summary>
            <param name="queryType"></param>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.RoombaSeekDock">
            <summary>
            Turns on force-seeking-dock mode.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.RoombaSeekDock.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Contract">
            <summary>
            Roomba Service Contract
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Contract.Identifier">
            <summary>
            Roomba Service Contract
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Contract.iRobotWheelBase">
            <summary>
            The iRobot wheel base (mm)
            </summary>
        </member>
    </members>
</doc>
