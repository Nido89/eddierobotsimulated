<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IRobot.Y2007.M01.Proxy</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Robotics.Services.IRobot.Lite.Proxy.PrivateState">
            <summary>
                       Private State
                       </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.Proxy.PrivateState.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current PrivateState to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.Proxy.PrivateState.Clone">
             <summary>
            Clones PrivateState
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.Proxy.PrivateState.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current PrivateState to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.Proxy.PrivateState.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes PrivateState
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized PrivateState</returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Lite.Proxy.IRobotLiteOperations">
            <summary>
                       IRobotLite Main Operations Port
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Lite.Proxy.Contract">
            <summary>
                       iRobot Create Lite
                       Service Implementation for lightweight processors
                       </summary>
            <remarks>The iRobot Lite service calls to the serial port and may block a thread
                       The ActivationSettings attribute with Sharing == false makes the runtime
                       dedicate a dispatcher thread pool just for this service.</remarks>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.Proxy.Contract.CreateService(Microsoft.Dss.Services.Constructor.ConstructorPort,System.String,Microsoft.Dss.ServiceModel.Dssp.PartnerType[])">
            <summary>Creates a new instance of the service.</summary>
            <param name="constructorServicePort">Service constructor port</param>
            <param name="service">service path</param>
            <param name="partners">the partners of the service instance</param>
            <returns>create service response port</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Lite.Proxy.Contract.CreateService(Microsoft.Dss.Services.Constructor.ConstructorPort,Microsoft.Dss.ServiceModel.Dssp.PartnerType[])">
            <summary>Creates a new instance of the service.</summary>
            <param name="constructorServicePort">Service constructor port</param>
            <param name="partners">the partners of the service instance</param>
            <returns>create service response port</returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.DssStream.Proxy.Contract">
            <summary>
                       iRobotstream Service
                       </summary>
            <remarks>The iRobot stream service calls to the serial port and may block a thread
                       The ActivationSettings attribute with Sharing == false makes the runtime
                       dedicate a dispatcher thread pool just for this service.</remarks>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.DssStream.Proxy.Contract.CreateService(Microsoft.Dss.Services.Constructor.ConstructorPort,System.String,Microsoft.Dss.ServiceModel.Dssp.PartnerType[])">
            <summary>Creates a new instance of the service.</summary>
            <param name="constructorServicePort">Service constructor port</param>
            <param name="service">service path</param>
            <param name="partners">the partners of the service instance</param>
            <returns>create service response port</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.DssStream.Proxy.Contract.CreateService(Microsoft.Dss.Services.Constructor.ConstructorPort,Microsoft.Dss.ServiceModel.Dssp.PartnerType[])">
            <summary>Creates a new instance of the service.</summary>
            <param name="constructorServicePort">Service constructor port</param>
            <param name="partners">the partners of the service instance</param>
            <returns>create service response port</returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnCliffDetail">
            <summary>
                       Create CliffDetail Results
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaReturnPacket">
            <summary>
                       The standard return package in which all return messages inherit from
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommand">
            <summary>
                       The base Roomba command format in which all commands inherit from
                       </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommand.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current RoombaCommand to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommand.Clone">
             <summary>
            Clones RoombaCommand
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommand.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current RoombaCommand to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommand.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes RoombaCommand
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized RoombaCommand</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaReturnPacket.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current RoombaReturnPacket to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaReturnPacket.Clone">
             <summary>
            Clones RoombaReturnPacket
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaReturnPacket.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current RoombaReturnPacket to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaReturnPacket.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes RoombaReturnPacket
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized RoombaReturnPacket</returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaReturnPacket.RoombaMode">
            <summary>
                       The current mode of the Roomba after the command
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaReturnPacket.Timestamp">
            <summary>
                       The timestamp when the data was received.
                       </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnCliffDetail.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current ReturnCliffDetail to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnCliffDetail.Clone">
             <summary>
            Clones ReturnCliffDetail
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnCliffDetail.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current ReturnCliffDetail to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnCliffDetail.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes ReturnCliffDetail
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized ReturnCliffDetail</returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnCliffDetail.WallSignal">
            <summary>
                       Wall Signal
                       <remarks>0-4095</remarks></summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnCliffDetail.CliffLeftSignal">
            <summary>
                       Cliff Left Signal
                       <remarks>0-4095</remarks></summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnCliffDetail.CliffFrontLeftSignal">
            <summary>
                       Cliff Front Left Signal
                       <remarks>0-4095</remarks></summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnCliffDetail.CliffFrontRightSignal">
            <summary>
                       Cliff Front Right Signal
                       <remarks>0-4095</remarks></summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnCliffDetail.CliffRightSignal">
            <summary>
                       Cliff Right Signal
                       <remarks>0-4095</remarks></summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnCliffDetail.UserDigitalInputs">
            <summary>
                       User Digital Inputs
                       <remarks>0-31</remarks></summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnCliffDetail.UserAnalogInput">
            <summary>
                       User Analog Input
                       <remarks>0-1023</remarks></summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnCliffDetail.ChargingSourcesAvailable">
            <summary>
                       Charging Sources Available
                       <remarks>Valid Bits: 0-3</remarks></summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnTelemetry">
            <summary>
                       Create Telemetry Results
                       </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnTelemetry.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current ReturnTelemetry to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnTelemetry.Clone">
             <summary>
            Clones ReturnTelemetry
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnTelemetry.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current ReturnTelemetry to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnTelemetry.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes ReturnTelemetry
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized ReturnTelemetry</returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnTelemetry.OIMode">
            <summary>
                       Open Interface Mode.
                       A code indicating the current state of iRobot Create.
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnTelemetry.SongNumber">
            <summary>
                       Song Number
                       </summary>
            <remarks>Range 1-16</remarks>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnTelemetry.SongPlaying">
            <summary>
                       Song Playing
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnTelemetry.NumberOfStreamPackets">
            <summary>
                       Number of Stream Packets
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnTelemetry.RequestedVelocity">
            <summary>
                       The velocity most recently requested with a Drive command.
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnTelemetry.RequestedRadius">
            <summary>
                       The radius most recently requested with a Drive command.
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnTelemetry.RequestedRightVelocity">
            <summary>
                       The right wheel velocity most recently requested with a Drive Direct command.
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnTelemetry.RequestedLeftVelocity">
            <summary>
                       The left wheel velocity most recently requested with a Drive Direct command.
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnStream">
            <summary>
                       Create Stream Results
                       </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnStream.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current ReturnStream to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnStream.Clone">
             <summary>
            Clones ReturnStream
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnStream.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current ReturnStream to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnStream.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes ReturnStream
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized ReturnStream</returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnStream.StreamPacket">
            <summary>
                       The stream packet data
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnStream.NamedValues">
            <summary>
                       The Named Values which have changed.
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.SensorValue">
            <summary>
                       An individual Sensor Value
                       </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.SensorValue.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current SensorValue to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.SensorValue.Clone">
             <summary>
            Clones SensorValue
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.SensorValue.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current SensorValue to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.SensorValue.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes SensorValue
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized SensorValue</returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.Proxy.SensorValue.Sensor">
            <summary>
                       The type of Sensor
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.Proxy.SensorValue.Value">
            <summary>
                       The Sensor Value
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnQueryList">
            <summary>
                       Create QueryList Results
                       </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnQueryList.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current ReturnQueryList to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnQueryList.Clone">
             <summary>
            Clones ReturnQueryList
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnQueryList.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current ReturnQueryList to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnQueryList.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes ReturnQueryList
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized ReturnQueryList</returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdDriveDirect">
            <summary>
                       This command lets you control the forward and backward motion of Create's drive
                       wheels independently.  A positive velocity makes that wheel drive forward,
                       while a negative velocity makes it drive backward.
                       </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdDriveDirect.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current CmdDriveDirect to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdDriveDirect.Clone">
             <summary>
            Clones CmdDriveDirect
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdDriveDirect.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current CmdDriveDirect to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdDriveDirect.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes CmdDriveDirect
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized CmdDriveDirect</returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdDriveDirect.RightVelocity">
            <summary>
                       Right Velocity (-500 to +500 mm/s)
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdDriveDirect.LeftVelocity">
            <summary>
                       Left Velocity (-500 to +500 mm/s)
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdDemo">
            <summary>
                       Starts a Demo.
                       <remarks>Works only with the iRobot Create.</remarks></summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdDemo.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current CmdDemo to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdDemo.Clone">
             <summary>
            Clones CmdDemo
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdDemo.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current CmdDemo to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdDemo.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes CmdDemo
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized CmdDemo</returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdDemo.DemoMode">
            <summary>
                       The iRobot Create Demo Mode.
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdPWMLowSideDrivers">
            <summary>
                       This command lets you control the three low side drivers
                       with variable power. With each data byte, you specify the
                       PWM duty cycle for the low side driver (max 128). For
                       example, if you want to control a driver with 25% of battery
                       voltage, choose a duty cycle of 128 * 25% = 32.
                       <remarks>Available in Safe or Full mode</remarks></summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdPWMLowSideDrivers.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current CmdPWMLowSideDrivers to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdPWMLowSideDrivers.Clone">
             <summary>
            Clones CmdPWMLowSideDrivers
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdPWMLowSideDrivers.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current CmdPWMLowSideDrivers to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdPWMLowSideDrivers.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes CmdPWMLowSideDrivers
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized CmdPWMLowSideDrivers</returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdPWMLowSideDrivers.DigitalOut0">
            <summary>
                       Digital Out 0 (Pin 19)
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdPWMLowSideDrivers.DigitalOut1">
            <summary>
                       Digital Out 1 (Pin 7)
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdPWMLowSideDrivers.DigitalOut2">
            <summary>
                       Digital Out 2 (Pin 20)
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdDigitalOutputs">
            <summary>
                       This command controls the state of the 3 digital output
                       pins on the 25 pin Cargo Bay Connector. The digital outputs
                       can provide up to 20 mA of current.
                       </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdDigitalOutputs.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current CmdDigitalOutputs to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdDigitalOutputs.Clone">
             <summary>
            Clones CmdDigitalOutputs
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdDigitalOutputs.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current CmdDigitalOutputs to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdDigitalOutputs.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes CmdDigitalOutputs
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized CmdDigitalOutputs</returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdDigitalOutputs.DigitalOut0">
            <summary>
                       Digital Output 0 (pin 19)
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdDigitalOutputs.DigitalOut1">
            <summary>
                       Digital Output 1 (pin 7)
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdDigitalOutputs.DigitalOut2">
            <summary>
                       Digital Output 2 (pin 20)
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdStream">
            <summary>
                       Request a stream of sensor data.
                       Works only with the iRobot Create.
                       </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdStream.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current CmdStream to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdStream.Clone">
             <summary>
            Clones CmdStream
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdStream.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current CmdStream to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdStream.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes CmdStream
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized CmdStream</returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdQueryList">
            <summary>
                       Query for a list of sensors.
                       Works only with the iRobot Create.
                       </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdQueryList.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current CmdQueryList to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdQueryList.Clone">
             <summary>
            Clones CmdQueryList
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdQueryList.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current CmdQueryList to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdQueryList.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes CmdQueryList
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized CmdQueryList</returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdStreamPauseResume">
            <summary>
                       Pause/Resume a stream of sensor data.
                       Works only with the iRobot Create.
                       </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdStreamPauseResume.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current CmdStreamPauseResume to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdStreamPauseResume.Clone">
             <summary>
            Clones CmdStreamPauseResume
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdStreamPauseResume.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current CmdStreamPauseResume to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdStreamPauseResume.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes CmdStreamPauseResume
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized CmdStreamPauseResume</returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdStreamPauseResume.StreamActive">
            <summary>
                       The requested stream state
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdSendIR">
            <summary>
                        This command sends the requested byte out of low side
                        driver 1 (pin 23 on the Cargo Bay Connector), using the
                        format expected by iRobot Create’s IR receiver. You must
                        use a preload resistor (suggested value: 100 ohms) in
                        parallel with the IR LED and its resistor in order turn it on.
                       
                        Works only with the iRobot Create.
                        <remarks>Valid Range: 0 - 255</remarks></summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdSendIR.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current CmdSendIR to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdSendIR.Clone">
             <summary>
            Clones CmdSendIR
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdSendIR.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current CmdSendIR to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdSendIR.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes CmdSendIR
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized CmdSendIR</returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdSendIR.IRCode">
            <summary>
                       The requested IR Code
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdDefineScript">
            <summary>
                       Define an iRobot Create Script.
                       This command defines a script to be played later. A script
                       consists of OI commands and can be up to 100 bytes long.
                       There is no flow control, but “wait” commands (see below)
                       cause Create to hold its current state until the specified
                       event is detected.
                       Works only with the iRobot Create.
                       </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdDefineScript.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current CmdDefineScript to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdDefineScript.Clone">
             <summary>
            Clones CmdDefineScript
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdDefineScript.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current CmdDefineScript to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdDefineScript.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes CmdDefineScript
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized CmdDefineScript</returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdDefineScript.PacketData">
            <summary>
                       The script payload.  Use the iRobot Create Scripting Engine.
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnDefineScript">
            <summary>
                       The Define Script response
                       </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnDefineScript.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current ReturnDefineScript to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnDefineScript.Clone">
             <summary>
            Clones ReturnDefineScript
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnDefineScript.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current ReturnDefineScript to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnDefineScript.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes ReturnDefineScript
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized ReturnDefineScript</returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnDefineScript.ScriptResponseBytes">
            <summary>
                       The expected number of response bytes returned when the script is played.
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdPlayScript">
            <summary>
                       Play the previously defined iRobot Create script.
                       This command loads a previously defined OI script into the
                       serial input queue for playback.
                       </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdPlayScript.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current CmdPlayScript to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdPlayScript.Clone">
             <summary>
            Clones CmdPlayScript
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdPlayScript.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current CmdPlayScript to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdPlayScript.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes CmdPlayScript
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized CmdPlayScript</returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdPlayScript.ScriptResponseBytes">
            <summary>
                       The expected number of response bytes returned when the script is played.
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdPlayScript.TimeoutMs">
            <summary>
                       The number of ms to wait before cancelling the script.
                       <remarks>0 - Do not cancel</remarks></summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdShowScript">
            <summary>
                       Show the previously defined iRobot Create Script.
                       This command returns the values of a previously stored
                       script, starting with the number of bytes in the script and
                       followed by the script’s commands and data bytes. It first
                       halts the sensor stream, if one has been started with a
                       Stream or Pause/Resume Stream command. To restart the
                       stream, send Pause/Resume Stream (opcode 150).
                       </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdShowScript.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current CmdShowScript to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdShowScript.Clone">
             <summary>
            Clones CmdShowScript
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdShowScript.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current CmdShowScript to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdShowScript.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes CmdShowScript
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized CmdShowScript</returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnScript">
            <summary>
                       Create Script Results
                       </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnScript.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current ReturnScript to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnScript.Clone">
             <summary>
            Clones ReturnScript
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnScript.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current ReturnScript to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnScript.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes ReturnScript
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized ReturnScript</returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.Proxy.ReturnScript.ScriptPacket">
            <summary>
                       The stream packet data
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitTime">
            <summary>
                        This command causes Create to wait for the specified time.
                        During this time, Create’s state does not change, nor does
                        it react to any inputs, serial or otherwise.
                       
                        Works only with the iRobot Create.
                        <remarks>The SCI may be in any mode to accept this
                        command. This command does not change the mode.</remarks><remarks>Valid Range: 0.0 - 25.5</remarks></summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitTime.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current CmdWaitTime to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitTime.Clone">
             <summary>
            Clones CmdWaitTime
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitTime.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current CmdWaitTime to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitTime.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes CmdWaitTime
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized CmdWaitTime</returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitTime.Seconds">
            <summary>
                       The number of seconds to wait.
                       <remarks>0 - 25.5 seconds in 1/10 second increments with a 15ms resolution</remarks></summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitDistance">
            <summary>
                        This command causes iRobot Create to wait until it has
                        traveled the specified distance in mm. When Create travels
                        forward, the distance is incremented. When Create travels
                        backward, the distance is decremented. If the wheels
                        are passively rotated in either direction, the distance is
                        incremented. Until Create travels the specified distance,
                        its state does not change, nor does it react to any inputs,
                        serial or otherwise.
                       
                        Works only with the iRobot Create.
                        <remarks>The SCI may be in any mode to accept this
                        command. This command does not change the mode.</remarks><remarks>Valid Range: -32767 - 32768</remarks></summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitDistance.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current CmdWaitDistance to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitDistance.Clone">
             <summary>
            Clones CmdWaitDistance
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitDistance.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current CmdWaitDistance to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitDistance.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes CmdWaitDistance
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized CmdWaitDistance</returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitDistance.Distance">
            <summary>
                       The distance to wait (mm).
                       <remarks>-32767 - 32768</remarks></summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitAngle">
            <summary>
                        This command causes Create to wait until it has rotated
                        through specified angle in degrees. When Create turns
                        counterclockwise, the angle is incremented. When Create
                        turns clockwise, the angle is decremented. Until Create
                        turns through the specified angle, its state does not change,
                        nor does it react to any inputs, serial or otherwise.
                       
                        Works only with the iRobot Create.
                        <remarks>The SCI may be in any mode to accept this
                        command. This command does not change the mode.</remarks><remarks>This command resets the angle variable that is
                        returned in Sensors</remarks><remarks>Valid Range: -32767 - 32768</remarks></summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitAngle.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current CmdWaitAngle to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitAngle.Clone">
             <summary>
            Clones CmdWaitAngle
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitAngle.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current CmdWaitAngle to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitAngle.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes CmdWaitAngle
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized CmdWaitAngle</returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitAngle.Angle">
            <summary>
                       The angle to wait (degrees).
                       <remarks>-32767 - 32768</remarks></summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitEvent">
            <summary>
                        This command causes Create to wait until it detects the
                        specified event. Until the specified event is detected,
                        Create’s state does not change, nor does it react to any
                        inputs, serial or otherwise.
                       
                        Works only with the iRobot Create.
                        <remarks>The SCI may be in any mode to accept this
                        command. This command does not change the mode.</remarks><remarks>Valid Range: 0.0 - 25.5</remarks></summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitEvent.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current CmdWaitEvent to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitEvent.Clone">
             <summary>
            Clones CmdWaitEvent
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitEvent.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current CmdWaitEvent to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitEvent.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes CmdWaitEvent
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized CmdWaitEvent</returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Create.Proxy.CmdWaitEvent.WaitEvent">
            <summary>
                       The Event to wait for.
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateDriveDirect">
            <summary>
                       Controls Create's drive wheels.
                       <remarks>This command lets you control the forward and backward
                       motion of Create’s drive wheels independently. It takes
                       four data bytes, which are interpreted as two 16-bit signed
                       values using two’s complement. The first two bytes specify
                       the velocity of the right wheel in millimeters per second
                       (mm/s), with the high byte sent first. The next two bytes
                       specify the velocity of the left wheel, in the same format.
                       A positive velocity makes that wheel drive forward, while a
                       negative velocity makes it drive backward.</remarks></summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateDemo">
            <summary>
                       Starts a Demo on the iRobot Create.
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreatePWMLowSideDrivers">
            <summary>
                       This command lets you control the three low side drivers
                       with variable power. With each data byte, you specify the
                       PWM duty cycle for the low side driver (max 128). For
                       example, if you want to control a driver with 25% of battery
                       voltage, choose a duty cycle of 128 * 25% = 32.
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateDigitalOutputs">
            <summary>
                       This command controls the state of the 3 digital output
                       pins on the 25 pin Cargo Bay Connector. The digital outputs
                       can provide up to 20 mA of current.
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateStream">
            <summary>
                       Request a stream of data.
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateQueryList">
            <summary>
                       Query for a list of sensors.
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateStreamPauseResume">
            <summary>
                       Pause or Resume Stream Data.
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSendIR">
            <summary>
                       Sends an IR Command out pin 23 on the Cargo Bay Connector.
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateDefineScript">
            <summary>
                       Define an iRobot Create Script.
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreatePlayScript">
            <summary>
                       Play the previously defined iRobot Create script.
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateShowScript">
            <summary>
                       Show the previously defined iRobot Create Script.
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateWaitTime">
            <summary>
                       Causes Create to wait for the specified time.
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateWaitDistance">
            <summary>
                       Causes Create to wait for the specified distance.
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateWaitAngle">
            <summary>
                       Causes Create to wait until the wheels rotate through the specified angle in degrees.
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateWaitEvent">
            <summary>
                       Causes Create to wait until the specified event occurs.
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateOperations">
            <summary>
                       iRobot Create Commands
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.ButtonsCreate">
            <summary>
                       Create Physical Buttons
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.ButtonsCreate.Off">
            <summary>
                       No Buttons Pressed
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.ButtonsCreate.Play">
            <summary>
                       Create Play Button
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.ButtonsCreate.Bit2">
            <summary>
                       Not Defined Flag 0x02
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.ButtonsCreate.Advance">
            <summary>
                       Create Advance Button
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.ButtonsCreate.Bit4">
            <summary>
                       Not Defined Flag 0x08
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.ButtonsCreate.Bit5">
            <summary>
                       Not Defined Flag 0x10
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.ButtonsCreate.Bit6">
            <summary>
                       Not Defined Flag 0x20
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.ButtonsCreate.Bit7">
            <summary>
                       Not Defined Flag 0x40
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.ButtonsCreate.Bit8">
            <summary>
                       Not Defined Flag 0x80
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.CargoBayDigitalInputs">
            <summary>
                       Cargo Bay Digital Inputs
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CargoBayDigitalInputs.Pin17">
            <summary>
                       Digital Input 0
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CargoBayDigitalInputs.Pin5">
            <summary>
                       Digital Input 1
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CargoBayDigitalInputs.Pin18">
            <summary>
                       Digital Input 2
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CargoBayDigitalInputs.Pin6">
            <summary>
                       Digital Input 3
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CargoBayDigitalInputs.Pin15">
            <summary>
                       Baud Rate Change
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CargoBayDigitalInputs.NA6">
            <summary>
                       Not Applicable
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CargoBayDigitalInputs.NA7">
            <summary>
                       Not Applicable
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CargoBayDigitalInputs.NA8">
            <summary>
                       Not Applicable
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.ChargingSourcesAvailable">
            <summary>
                       Charging Sources Available
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.ChargingSourcesAvailable.InternalCharger">
            <summary>
                       Internal Charger
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.ChargingSourcesAvailable.HomeBase">
            <summary>
                       Home Base
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.ChargingSourcesAvailable.UnsupportedBit3">
            <summary>
                       Unsupported Charging Source
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.ChargingSourcesAvailable.UnsupportedBit4">
            <summary>
                       Unsupported Charging Source
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.ChargingSourcesAvailable.NA5">
            <summary>
                       Not Applicable
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.ChargingSourcesAvailable.NA6">
            <summary>
                       Not Applicable
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.ChargingSourcesAvailable.NA7">
            <summary>
                       Not Applicable
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.ChargingSourcesAvailable.NA8">
            <summary>
                       Not Applicable
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket">
            <summary>
                       Create Sensor Packets
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.AllRoomba">
            <summary>
                       All Roomba Sensors, Pose and Power Packets
                       <remarks>26 bytes</remarks></summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.AllBumpsCliffsAndWalls">
            <summary>
                       Roomba Bumps, Cliffs, and Walls Return Packet
                       <remarks>10 bytes</remarks></summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.AllPose">
            <summary>
                       Pose Return Packet
                       <remarks>6 bytes</remarks></summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.AllPower">
            <summary>
                       Power Return Packet
                       <remarks>10 bytes</remarks></summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.AllCliffDetail">
            <summary>
                       Cliff Return Packet
                       <remarks>14 bytes</remarks></summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.AllTelemetry">
            <summary>
                       Telemetry Return Packet
                       <remarks>12 bytes</remarks></summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.AllCreate">
            <summary>
                       All Create Sensor data
                       <remarks>52 bytes</remarks></summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.BumpsWheelDrops">
            <summary>
                       Bumps And Wheel Drops
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.Wall">
            <summary>
                       Wall
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.CliffLeft">
            <summary>
                       Cliff Left
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.CliffFrontLeft">
            <summary>
                       Cliff Front Left
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.CliffFrontRight">
            <summary>
                       Cliff Front Right
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.CliffRight">
            <summary>
                       Cliff Right
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.VirtualWall">
            <summary>
                       Virtual Wall
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.MotorOvercurrents">
            <summary>
                       Low Side Driver And Wheel Overcurrents
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.Unused15">
            <summary>
                       Unused15
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.Unused16">
            <summary>
                       Unused16
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.Infrared">
            <summary>
                       Infrared
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.Buttons">
            <summary>
                       Buttons
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.Distance">
            <summary>
                       Distance
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.Angle">
            <summary>
                       Angle
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.ChargingState">
            <summary>
                       Charging State
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.Voltage">
            <summary>
                       Voltage
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.Current">
            <summary>
                       Current
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.BatteryTemperature">
            <summary>
                       Battery Temperature
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.BatteryCharge">
            <summary>
                       Battery Charge
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.BatteryCapacity">
            <summary>
                       Battery Capacity
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.WallSignal">
            <summary>
                       Wall Signal
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.CliffLeftSignal">
            <summary>
                       Cliff Left Signal
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.CliffFrontLeftSignal">
            <summary>
                       Cliff Front Left Signal
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.CliffFrontRightSignal">
            <summary>
                       Cliff Front Right Signal
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.CliffRightSignal">
            <summary>
                       Cliff Right Signal
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.CargoBayDigitalInputs">
            <summary>
                       Cargo Bay Digital Inputs
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.CargoBayAnalogSignal">
            <summary>
                       Cargo Bay Analog Signal
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.ChargingSourcesAvailable">
            <summary>
                       Charging Sources Available
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.OIMode">
            <summary>
                       OI Mode
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.SongNumber">
            <summary>
                       Song Number
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.SongPlaying">
            <summary>
                       Song Playing
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.NumberOfStreamPackets">
            <summary>
                       Number Of Stream Packets
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.RequestedVelocity">
            <summary>
                       Requested Velocity
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.RequestedRadius">
            <summary>
                       Requested Radius
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.RequestedRightVelocity">
            <summary>
                       Requested Right Velocity
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.CreateSensorPacket.RequestedLeftVelocity">
            <summary>
                       Requested Left Velocity
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.DemoMode">
            <summary>
                       Starts a Built-in demo on the iRobot Create.
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.DemoMode.AbortCurrentDemo">
            <summary>
                       Stops the current demo
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.DemoMode.Cover">
            <summary>
                       Attempt to cover the entire room
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.DemoMode.CoverAndSeekDock">
            <summary>
                       Cover the entire room, seeking the dock
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.DemoMode.SpotCover">
            <summary>
                       Cover an area around the starting position by
                       spiraling outward, then inward.
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.DemoMode.Mouse">
            <summary>
                       Search for a wall and then travel
                       around the circumference of the room.
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.DemoMode.DriveFigureEight">
            <summary>
                       Drive continuously in a figure 8 pattern.
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.DemoMode.Wimp">
            <summary>
                       Drive forward when pushed from behind.  If Create
                       hits an obstacle, it drives away from the obstacle.
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.DemoMode.Home">
            <summary>
                        Create drives toward an iRobot Virtual Wall as long
                        as the back and sides of the virtual wall receiver
                        are blinded by black electrical tape.
                       
                        A Virtual Wall emits infrared signals that Create
                        sees with its Omnidirectional Infrared Receiver,
                        located on top of the bumper.
                       
                        If you want Create to home in on a Virtual Wall,
                        cover all but a small opening in the front of the
                        infrared receiver with black electrical tape.
                       
                        Create spins to locate a virtual wall, then drives
                        toward it.  Once Create hits the wall or another
                        obstacle, it stops.
                        </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.DemoMode.Tag">
            <summary>
                       Idential to the Home demo, except Create drives
                       into multiple virtual walls by bumping into one,
                       turning around, driving to the next virtual wall,
                       bumping into it and turning around to bump into
                       the next virtual wall.
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.DemoMode.Pachelbel">
            <summary>
                       Create plays the notes of Pachelbel's Canon in
                       sequence when cliff sensors are activated.
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.DemoMode.Banjo">
            <summary>
                       Create plays a note of a chord for each of its four cliff sensors.  Select the chord using the bumper, as follows:
                       No bumper: G major
                       Right or left bumper: D major 7
                       both bumpers (center): C major
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent">
            <summary>
                       Create Scripting Wait Event
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.None">
            <summary>
                       No Event
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.WheelDrop">
            <summary>
                       Wheel Drop
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.NoWheelDrop">
            <summary>
                       No Wheel Drop
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.FrontWheelDrop">
            <summary>
                       Front Wheel Drop
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.NoFrontWheelDrop">
            <summary>
                       No Front Wheel Drop
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.LeftWheelDrop">
            <summary>
                       Left Wheel Drop
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.NoLeftWheelDrop">
            <summary>
                       No Left Wheel Drop
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.RightWheelDrop">
            <summary>
                       Right Wheel Drop
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.NoRightWheelDrop">
            <summary>
                       No Right Wheel Drop
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.Bump">
            <summary>
                       Bump
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.NoBump">
            <summary>
                       No Bump
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.LeftBump">
            <summary>
                       Left Bump
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.NoLeftBump">
            <summary>
                       No Left Bump
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.RightBump">
            <summary>
                       Right Bump
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.NoRightBump">
            <summary>
                       No Right Bump
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.VirtualWall">
            <summary>
                       Virtual Wall
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.NoVirtualWall">
            <summary>
                       No Virtual Wall
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.Wall">
            <summary>
                       Wall
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.NoWall">
            <summary>
                       No Wall
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.Cliff">
            <summary>
                       Cliff
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.NoCliff">
            <summary>
                       No Cliff
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.LeftCliff">
            <summary>
                       Left Cliff
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.NoLeftCliff">
            <summary>
                       No Left Cliff
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.FrontLeftCliff">
            <summary>
                       Front Left Cliff
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.NoFrontLeftCliff">
            <summary>
                       No Front Left Cliff
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.FrontRightCliff">
            <summary>
                       Front Right Cliff
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.NoFrontRightCliff">
            <summary>
                       No Front Right Cliff
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.RightCliff">
            <summary>
                       Right Cliff
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.NoRightCliff">
            <summary>
                       No Right Cliff
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.HomeBase">
            <summary>
                       Home Base
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.NoHomeBase">
            <summary>
                       No Home Base
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.AdvanceButton">
            <summary>
                       Advance Button
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.NoAdvanceButton">
            <summary>
                       No Advance Button
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.PlayButton">
            <summary>
                       Play Button
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.NoPlayButton">
            <summary>
                       No Play Button
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.DigitalInput0">
            <summary>
                       Digital Input 0
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.NoDigitalInput0">
            <summary>
                       No Digital Input 0
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.DigitalInput1">
            <summary>
                       Digital Input 1
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.NoDigitalInput1">
            <summary>
                       No Digital Input 1
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.DigitalInput2">
            <summary>
                       Digital Input 2
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.NoDigitalInput2">
            <summary>
                       No Digital Input 2
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.DigitalInput3">
            <summary>
                       Digital Input 3
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.NoDigitalInput3">
            <summary>
                       No Digital Input 3
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.ModePassive">
            <summary>
                       Mode is Passive
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Create.Proxy.WaitEvent.NoModePassive">
            <summary>
                       Mode is not Passive
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Create.Proxy.Contract">
            <summary>
                       Create Service Contract
                       </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.Contract.CreateService(Microsoft.Dss.Services.Constructor.ConstructorPort,System.String,Microsoft.Dss.ServiceModel.Dssp.PartnerType[])">
            <summary>Creates a new instance of the service.</summary>
            <param name="constructorServicePort">Service constructor port</param>
            <param name="service">service path</param>
            <param name="partners">the partners of the service instance</param>
            <returns>create service response port</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Create.Proxy.Contract.CreateService(Microsoft.Dss.Services.Constructor.ConstructorPort,Microsoft.Dss.ServiceModel.Dssp.PartnerType[])">
            <summary>Creates a new instance of the service.</summary>
            <param name="constructorServicePort">Service constructor port</param>
            <param name="partners">the partners of the service instance</param>
            <returns>create service response port</returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaState">
            <summary>
                       Current state of the Roomba
                       </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaState.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current RoombaState to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaState.Clone">
             <summary>
            Clones RoombaState
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaState.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current RoombaState to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaState.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes RoombaState
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized RoombaState</returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaState.Name">
            <summary>
                       The robot Name
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaState.FirmwareDate">
            <summary>
                       The Firmware Date
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaState.SerialPort">
            <summary>
                       Serial Port connection
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaState.BaudRate">
            <summary>
                       Connection Baud Rate
                       <remarks>0 uses the default Baud rate</remarks></summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaState.IRobotModel">
            <summary>
                       The type of iRobot Create or Roomba
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaState.ConnectionType">
            <summary>
                       The connection type
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaState.StopOnResync">
            <summary>
                       Stop Motors when sensor data is garbled
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaState.Mode">
            <summary>
                       SCI Mode
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaState.MaintainMode">
            <summary>
                       The SCI Mode to be maintained
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaState.Sensors">
            <summary>
                        Sensors
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaState.Pose">
            <summary>
                       Pose
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaState.Power">
            <summary>
                       Power
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaState.LastUpdated">
            <summary>
                       Date last updated
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaState.PollingInterval">
            <summary>
                       Polling interval in ms
                       <remarks>
                          -1 = no polling (less than zero)
                       0-199 = default for Create/Roomba
                       200-N = ms between polling
                       </remarks></summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaState.SongDefinitions">
            <summary>
                       Song Definitions
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaState.WaitForConnect">
            <summary>
                       Wait for Connect before establishing a connection with the iRobot.
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaState.RobotImage">
            <summary>
                       An Image which represents this iRobot.
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaState.CliffDetail">
            <summary>
                       iRobot Create Cliff Detail
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaState.Telemetry">
            <summary>
                       iRobot Create Telemetry
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaState.CreateNotifications">
            <summary>
                       Notifications which will be requested
                       when connecting to an iRobot Create
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnSensors">
            <summary>
                       Roomba Sensor Notifications
                       </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnSensors.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current ReturnSensors to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnSensors.Clone">
             <summary>
            Clones ReturnSensors
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnSensors.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current ReturnSensors to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnSensors.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes ReturnSensors
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized ReturnSensors</returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnSensors.BumpsWheeldrops">
            <summary>
                       The state of the bump (0 = no bump, 1 = bump) and wheeldrop
                       sensors (0 = wheel up, 1 = wheel dropped) are sent as individual
                       bits.
                       <remarks>Some robots do not report the three wheel drops separately. Instead,
                       if any of the three wheels drops, all three wheel-drop bits will be set. You
                       can tell which kind of robot you have by examining the serial number
                       inside the battery compartment. Wheel drops are separate only if there is
                       an “E” in the serial number.</remarks></summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnSensors.Wall">
            <summary>
                       The state of the wall sensor.
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnSensors.CliffLeft">
            <summary>
                       The state of the cliff sensor on the left side of Roomba.
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnSensors.CliffFrontLeft">
            <summary>
                       The state of the cliff sensor on the front left side of Roomba.
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnSensors.CliffFrontRight">
            <summary>
                       The state of the cliff sensor on the front right side of Roomba.
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnSensors.CliffRight">
            <summary>
                       The state of the cliff sensor on the right side of Roomba.
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnSensors.VirtualWall">
            <summary>
                       The state of the virtual wall detector.
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnSensors.MotorOvercurrents">
            <summary>
                       The state of the five motors’ overcurrent sensors.
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnSensors.DirtDetectorLeft">
            <summary>
                       The current dirt detection level of the left side dirt detector
                       is sent as a one byte value. A value of 0 indicates no dirt is
                       detected. Higher values indicate higher levels of dirt detected.
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnSensors.DirtDetectorRight">
            <summary>
                       The current dirt detection level of the right side dirt detector
                       is sent as a one byte value. A value of 0 indicates no dirt is
                       detected. Higher values indicate higher levels of dirt detected.
                       <remarks>Some robots don’t have a right dirt detector. You can tell by removing
                       the brushes. The dirt detectors are metallic disks. For robots with no right
                       dirt detector this byte is always 0.</remarks></summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnPose">
            <summary>
                       Roomba Pose Notifications
                       </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnPose.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current ReturnPose to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnPose.Clone">
             <summary>
            Clones ReturnPose
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnPose.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current ReturnPose to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnPose.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes ReturnPose
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized ReturnPose</returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnPose.RemoteControlCommand">
            <summary>
                       The command number of the infrared command currently
                       being received by Roomba. A value of 255 indicates that no
                       remote control command is being received. See Roomba remote
                       control documentation for a description of the command values.
                       <remarks>Range: 0 – 255 (with some values unused)</remarks></summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnPose.ButtonsRoomba">
            <summary>
                       The state of the Roomba buttons.
                       </summary>
            <remarks>Roomba and Create share the same storage for Buttons, but the values are interpreted slightly different.</remarks>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnPose.ButtonsCreate">
            <summary>
                       The state of the Create buttons.
                       </summary>
            <remarks>Roomba and Create share the same storage for Buttons, but the values are interpreted slightly different.</remarks>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnPose.Distance">
            <summary>
                       The distance that Roomba has traveled in millimeters since the
                       distance it was last requested. This is the same as the sum of
                       the distance traveled by both wheels divided by two. Positive
                       values indicate travel in the forward direction; negative in the
                       reverse direction. If the value is not polled frequently enough, it
                       will be capped at its minimum or maximum.
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnPose.Angle">
            <summary>
                       The angle that Roomba has turned through since the angle was
                       last requested. The angle is expressed as the difference in
                       the distance traveled by Roomba’s two wheels in millimeters,
                       specifically the right wheel distance minus the left wheel
                       distance, divided by two.
                       <example>This makes counter-clockwise angles
                       positive and clockwise angles negative. This can be used to
                       directly calculate the angle that Roomba has turned through
                       since the last request. Since the distance between Roomba’s
                       wheels is 258mm, the equations for calculating the angles in
                       familiar units are:
                       Angle in radians = (2 * difference) / 258
                       Angle in degrees = (360 * difference) / (258 * Pi).
                       </example><remarks>If the value is not polled frequently enough, it will
                       be capped at its minimum or maximum. Reported angle and
                       distance may not be accurate. Roomba measures these by detecting
                       its wheel revolutions. If for example, the wheels slip on the
                       floor, the reported angle of distance will be greater than the
                       actual angle or distance.</remarks></summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnPower">
            <summary>
                       Roomba Power Notifications
                       </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnPower.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current ReturnPower to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnPower.Clone">
             <summary>
            Clones ReturnPower
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnPower.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current ReturnPower to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnPower.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes ReturnPower
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized ReturnPower</returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnPower.ChargingState">
            <summary>
                       A code indicating the current charging state of Roomba.
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnPower.Voltage">
            <summary>
                       The voltage of Roomba's battery in millivolts (mV)
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnPower.Current">
            <summary>
                       The current in milliamps (mA) flowing into or out of Roomba’s
                       battery. Negative currents indicate current is flowing out of the
                       battery, as during normal running. Positive currents indicate
                       current is flowing into the battery, as during charging.
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnPower.Temperature">
            <summary>
                       The temperature of Roomba’s battery in degrees Celsius.
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnPower.Charge">
            <summary>
                       The current charge of Roomba’s battery in milliamp-hours (mAh).
                       The charge value decreases as the battery is depleted during
                       running and increases when the battery is charged.
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnPower.Capacity">
            <summary>
                       The estimated charge capacity of Roomba’s battery. When the
                       Charge value reaches the Capacity value, the battery is fully
                       charged.
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdDefineSong">
            <summary>
                       Specifies a song to the SCI to be played later.
                       <remarks>Each song is
                       associated with a song number which the Play command uses
                       to select the song to play. Users can specify up to 16 songs
                       with up to 16 notes per song. Each note is specified by a note
                       number using MIDI note definitions and a duration specified
                       in fractions of a second. The number of data bytes varies
                       depending on the length of the song specified. A one note song
                       is specified by four data bytes. For each additional note, two data
                       bytes must be added. </remarks></summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdDefineSong.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current CmdDefineSong to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdDefineSong.Clone">
             <summary>
            Clones CmdDefineSong
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdDefineSong.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current CmdDefineSong to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdDefineSong.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes CmdDefineSong
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized CmdDefineSong</returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdDefineSong.SongNumber">
            <summary>
                       The predefined song number (1-16)
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdDefineSong.Notes">
            <summary>
                       A list of notes which compose a short song.
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaNote">
            <summary>
                       Defines a note with a tone and duration.
                       </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaNote.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current RoombaNote to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaNote.Clone">
             <summary>
            Clones RoombaNote
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaNote.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current RoombaNote to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaNote.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes RoombaNote
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized RoombaNote</returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaNote.Tone">
            <summary>
                       The note tone or frequency.
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaNote.Duration">
            <summary>
                       Duration in 1/64 second increments
                       <remarks>Range 0 - 255</remarks></summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnAll">
            <summary>
                       Notification of All Sensors.
                       Roomba: Sensors, Pose, Power
                       Create: Sensors, Pose, Power, CliffDetail, and Telemetry
                       </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnAll.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current ReturnAll to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnAll.Clone">
             <summary>
            Clones ReturnAll
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnAll.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current ReturnAll to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnAll.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes ReturnAll
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized ReturnAll</returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnAll.RoombaMode">
            <summary>
                       Set the RoombaMode on the ReturnAll packet and all sub-packets.
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnAll.Sensors">
            <summary>
                       Roomba Sensors
                       </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnAll.Pose">
            <summary>
                       Roomba Pose
                       </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnAll.Power">
            <summary>
                       Roomba Power
                       </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnAll.CliffDetail">
            <summary>
                       iRobot Create Cliff Detail
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnAll.Telemetry">
            <summary>
                       iRobot Create Telemetry
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnMode">
            <summary>
                       Notification of Roomba Mode changes
                       </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnMode.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current ReturnMode to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnMode.Clone">
             <summary>
            Clones ReturnMode
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnMode.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current ReturnMode to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnMode.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes ReturnMode
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized ReturnMode</returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnMode.RoombaMode">
            <summary>
                       The current mode of the Roomba
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnMode.IRobotModel">
            <summary>
                       The iRobot hardware model
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnMode.MaintainMode">
            <summary>
                       When set to Passive, Safe, or Full, this mode will be maintained with
                       each subsequent command and also involuntary mode changes.
                       <remarks>
                       Off = Ignore for this command
                       NotSpecified = Maintain Mode is Not Specified (disabled)
                       </remarks></summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnMode.FirmwareDate">
            <summary>
                       The Firmware Date
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.IRobotConnect">
            <summary>
                       IRobot Connect Message
                       </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.IRobotConnect.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current IRobotConnect to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.IRobotConnect.Clone">
             <summary>
            Clones IRobotConnect
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.IRobotConnect.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current IRobotConnect to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.IRobotConnect.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes IRobotConnect
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized IRobotConnect</returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdSetMode">
            <summary>
                       Set the iRobot Mode.
                       </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdSetMode.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current CmdSetMode to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdSetMode.Clone">
             <summary>
            Clones CmdSetMode
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdSetMode.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current CmdSetMode to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdSetMode.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes CmdSetMode
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized CmdSetMode</returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdSetMode.RoombaMode">
            <summary>
                       The iRobot Mode
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdSetMode.MaintainMode">
            <summary>
                       When set to Passive, Safe, or Full, this mode will be maintained,
                       even after automatic mode changes and additional commands.
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandReceived">
            <summary>
                       Acknowledges the receipt of a Roomba command
                       </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandReceived.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current RoombaCommandReceived to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandReceived.Clone">
             <summary>
            Clones RoombaCommandReceived
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandReceived.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current RoombaCommandReceived to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandReceived.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes RoombaCommandReceived
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized RoombaCommandReceived</returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandReceived.RoombaMode">
            <summary>
                       The Roomba Mode after the command is completed
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdLeds">
            <summary>
                       Controls Roomba’s LEDs.
                       <remarks>The state of each of the spot, clean,
                       max, and dirt detect LEDs is specified by one bit in the first data
                       byte. The color of the status LED is specified by two bits in the
                       first data byte. The power LED is specified by two data bytes, one
                       for the color and one for the intensity. </remarks></summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdLeds.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current CmdLeds to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdLeds.Clone">
             <summary>
            Clones CmdLeds
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdLeds.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current CmdLeds to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdLeds.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes CmdLeds
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized CmdLeds</returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdLeds.Leds">
            <summary>
                       iRobot LEDs
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdLeds.PowerColor">
            <summary>
                       Power Color
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdLeds.PowerIntensity">
            <summary>
                       Power Intensity
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdPlaySong">
            <summary>
                       Plays one of 16 songs, as specified by an earlier Song command.
                       <remarks>If the requested song has not been specified yet,
                       the Play command does nothing. </remarks></summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdPlaySong.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current CmdPlaySong to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdPlaySong.Clone">
             <summary>
            Clones CmdPlaySong
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdPlaySong.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current CmdPlaySong to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdPlaySong.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes CmdPlaySong
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized CmdPlaySong</returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdPlaySong.SongNumber">
            <summary>
                       The predefined song number (1-16)
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdSensors">
            <summary>
                       Requests the SCI to send a packet of sensor data bytes.
                       </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdSensors.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current CmdSensors to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdSensors.Clone">
             <summary>
            Clones CmdSensors
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdSensors.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current CmdSensors to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdSensors.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes CmdSensors
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized CmdSensors</returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdSensors.CreateSensorPacket">
            <summary>
                       The Create Sensor Packet to retrieve
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnFirmwareDate">
            <summary>
                       Returns the Firmware Date.
                       </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnFirmwareDate.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current ReturnFirmwareDate to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnFirmwareDate.Clone">
             <summary>
            Clones ReturnFirmwareDate
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnFirmwareDate.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current ReturnFirmwareDate to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnFirmwareDate.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes ReturnFirmwareDate
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized ReturnFirmwareDate</returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ReturnFirmwareDate.FirmwareDate">
            <summary>
                       The firmware Date
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdDrive">
            <summary>
                       Controls Roomba's drive wheels.
                       <remarks>The command takes four data
                       bytes, which are interpreted as two 16 bit signed values using
                       twos-complement. The first two bytes specify the average velocity
                       of the drive wheels in millimeters per second (mm/s), with the
                       high byte sent first. The next two bytes specify the radius, in
                       millimeters, at which Roomba should turn. The longer radii make
                       Roomba drive straighter; shorter radii make it turn more. A Drive
                       command with a positive velocity and a positive radius will make
                       Roomba drive forward while turning toward the left. A negative
                       radius will make it turn toward the right. Special cases for the
                       radius make Roomba turn in place or drive straight, as specified
                       below. </remarks></summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdDrive.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current CmdDrive to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdDrive.Clone">
             <summary>
            Clones CmdDrive
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdDrive.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current CmdDrive to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdDrive.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes CmdDrive
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized CmdDrive</returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdDrive.Velocity">
            <summary>
                       Velocity (-500 to +500 mm/s)
                       </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdDrive.Radius">
            <summary>
                       Radius (-2000 to +2000 mm, 32768 straight)
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdMotors">
            <summary>
                       Controls Roomba’s cleaning motors.
                       <remarks>The state of each motor is specified by one bit
                       in the data byte. </remarks></summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdMotors.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current CmdMotors to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdMotors.Clone">
             <summary>
            Clones CmdMotors
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdMotors.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current CmdMotors to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdMotors.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes CmdMotors
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized CmdMotors</returns>
        </member>
        <member name="P:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdMotors.Motors">
            <summary>
                       Motors
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdForceSeekingDock">
            <summary>
                       Turns on force-seeking-dock mode.
                       <remarks>Causes the robot to immediately attempt to dock during
                       its cleaning cycle if it encounters the docking beams from the
                       Home Base. (Note, however, that if the robot was not active in a
                       clean, spot or max cycle it will not attempt to execute the docking.)
                       Normally the robot attempts to dock only if the cleaning cycle has
                       completed or the battery is nearing depletion. This command can be
                       sent anytime, but the mode will be canceled if the robot turns off,
                       begins charging, or is commanded into SCI safe or full modes.</remarks></summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdForceSeekingDock.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current CmdForceSeekingDock to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdForceSeekingDock.Clone">
             <summary>
            Clones CmdForceSeekingDock
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdForceSeekingDock.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current CmdForceSeekingDock to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdForceSeekingDock.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes CmdForceSeekingDock
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized CmdForceSeekingDock</returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdClean">
            <summary>
                       Starts a normal cleaning cycle, the same as a normal "clean" button press.
                       <remarks>This command puts the SCI in passive mode.</remarks></summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdClean.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current CmdClean to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdClean.Clone">
             <summary>
            Clones CmdClean
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdClean.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current CmdClean to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdClean.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes CmdClean
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized CmdClean</returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdSpot">
            <summary>
                       Starts a spot cleaning cycle, the same as a normal "spot" button press.
                       <remarks>This command puts the SCI in passive mode.</remarks></summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdSpot.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current CmdSpot to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdSpot.Clone">
             <summary>
            Clones CmdSpot
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdSpot.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current CmdSpot to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdSpot.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes CmdSpot
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized CmdSpot</returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdMax">
            <summary>
                       Starts a maximum time cleaning cycle, the same as a normal "max" button press.
                       <remarks>This command puts the SCI in passive mode.</remarks></summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdMax.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current CmdMax to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdMax.Clone">
             <summary>
            Clones CmdMax
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdMax.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current CmdMax to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdMax.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes CmdMax
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized CmdMax</returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdFirmwareDate">
            <summary>
                       Retrieve the firmware date from a Roomba or Create.
                       </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdFirmwareDate.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current CmdFirmwareDate to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdFirmwareDate.Clone">
             <summary>
            Clones CmdFirmwareDate
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdFirmwareDate.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current CmdFirmwareDate to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.CmdFirmwareDate.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes CmdFirmwareDate
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized CmdFirmwareDate</returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdStart">
            <summary>
                       Start the Roomba SCI.
                       <remarks>Internal: Use CmdSetMode from outside of this service</remarks><remarks>The Start command must be sent before any
                       other SCI commands. This command puts the SCI in
                       passive mode.</remarks></summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdStart.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current InternalCmdStart to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdStart.Clone">
             <summary>
            Clones InternalCmdStart
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdStart.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current InternalCmdStart to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdStart.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes InternalCmdStart
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized InternalCmdStart</returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdControl">
            <summary>
                       Enables user control of the Roomba.
                       <remarks>Internal: Use CmdSetMode from outside of this service</remarks><remarks>This command must be sent after the start command and
                       before any control commands are sent to the SCI. </remarks></summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdControl.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current InternalCmdControl to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdControl.Clone">
             <summary>
            Clones InternalCmdControl
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdControl.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current InternalCmdControl to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdControl.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes InternalCmdControl
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized InternalCmdControl</returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdSafe">
            <summary>
                       Puts the Roomba in Safe mode.
                       <remarks>Internal: Use CmdSetMode from outside of this service</remarks><remarks>Note: In order to go from passive mode to safe mode,
                       use the CmdControl command.</remarks></summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdSafe.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current InternalCmdSafe to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdSafe.Clone">
             <summary>
            Clones InternalCmdSafe
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdSafe.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current InternalCmdSafe to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdSafe.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes InternalCmdSafe
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized InternalCmdSafe</returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdFull">
            <summary>
                       Enables unrestricted control of Roomba and turns
                       off safety features.
                       <remarks>Internal: Use CmdSetMode from outside of this service</remarks><remarks>This command puts the SCI in full mode.</remarks></summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdFull.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current InternalCmdFull to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdFull.Clone">
             <summary>
            Clones InternalCmdFull
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdFull.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current InternalCmdFull to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdFull.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes InternalCmdFull
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized InternalCmdFull</returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdPower">
            <summary>
                       Puts Roomba to sleep, the same as a normal "power" button press.
                       <remarks>Internal: Use CmdSetMode from outside of this service</remarks><remarks>The Device Detect line must be held low for 500 ms to
                       wake up Roomba from sleep. This command puts the SCI in
                       passive mode.
                       </remarks></summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdPower.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current InternalCmdPower to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdPower.Clone">
             <summary>
            Clones InternalCmdPower
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdPower.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current InternalCmdPower to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdPower.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes InternalCmdPower
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized InternalCmdPower</returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdReset">
            <summary>
                       Resets Roomba to sleep mode, the same as a normal "power" button press.
                       <remarks>
                       In most cases, you can power cycle the Create robot to reset it, 
                       either with the power button or by transmitting two low-to-high transitions 
                       on the power toggle input line on the Cargo Bay Connector (see the Open 
                       Interface manual for details). </remarks><remarks>
                       Always wait at least one second between powering the robot off and powering 
                       it on again to ensure a complete reset.</remarks><remarks>
                       However, if the robot is on the charger but not charging because it is in 
                       Safe or Full mode, this doesn’t work. Instead, use this procedure:</remarks><remarks>
                       1. Send opcode "7". This is not an official OI opcode, rather it is an 
                       opcode used by Osmo (a firmware updating device) to initiate a soft reset 
                       of the robot and force it to run its bootloader.</remarks><remarks>
                       2. The robot resets. Wait 3 seconds for the bootloader to complete. 
                       Do NOT send any opcodes while the bootloader is running.</remarks><remarks>
                       3. The robot should start charging. Note that the robot spews some 
                       battery-related text if it is charging and not in OI mode. Ignore this text.</remarks><remarks>
                       4. Send a Start command to get back into the OI (and stop the spew).</remarks></summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdReset.CopyTo(Microsoft.Dss.Core.IDssSerializable)">
             <summary>
            Copies the data member values of the current InternalCmdReset to the specified target object
            </summary>
            <param name="target">target object (must be an instance of)</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdReset.Clone">
             <summary>
            Clones InternalCmdReset
            </summary>
            <returns>cloned value</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdReset.Serialize(System.IO.BinaryWriter)">
             <summary>
            Serializes the data member values of the current InternalCmdReset to the specified writer
            </summary>
            <param name="writer">the writer to which to serialize</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.InternalCmdReset.Deserialize(System.IO.BinaryReader)">
             <summary>
            Deserializes InternalCmdReset
            </summary>
            <param name="reader">the reader from which to deserialize</param>
            <returns>deserialized InternalCmdReset</returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.Get">
            <summary>
                       Get Operation
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.Configure">
            <summary>
                       Initiates a connection between the service host/PC and the iRobot with full configuration.
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.Connect">
            <summary>
                       iRobot Connect Operation
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaSetMode">
            <summary>
                       Place the iRobot in the specified mode.
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaSetLeds">
            <summary>
                       Controls Roomba’s LEDs.
                       <remarks>Multiple LEDs may be specified at once.
                       This command does not change the mode.</remarks></summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaPlaySong">
            <summary>
                       Plays one of 16 songs, as specified by an earlier RooombaDefineSong command.
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaGetSensors">
            <summary>
                       Query for Roomba Pose, Power, and Sensors
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaDrive">
            <summary>
                       Controls Roomba's drive wheels.
                       <remarks>The Roomba is controlled by providing the average velocity
                       of the drive wheels in millimeters per second (mm/s), and the radius, in
                       millimeters, at which Roomba should turn. The longer radii make
                       Roomba drive straighter; shorter radii make it turn more. A Drive
                       command with a positive velocity and a positive radius will make
                       Roomba drive forward while turning toward the left. A negative
                       radius will make it turn toward the right. Special cases for the
                       radius make Roomba turn in place or drive straight, as specified
                       below. </remarks></summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaSetCleaningMotors">
            <summary>
                       Controls Roomba’s cleaning motors.
                       <remarks>Multiple motors may be specified at once.
                       This command does not change the mode.</remarks></summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaDefineSong">
            <summary>
                       Specifies a song to the SCI to be played later.
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaSeekDock">
            <summary>
                       Turns on force-seeking-dock mode.
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaStartCleaning">
            <summary>
                       Starts a normal cleaning cycle, the same as a normal "clean" button press.
                       <remarks>This command puts the SCI in passive mode.</remarks></summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaStartSpotCleaning">
            <summary>
                       Starts a spot cleaning cycle, the same as a normal "spot" button press.
                       <remarks>This command puts the SCI in passive mode.</remarks></summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaStartMaxCleaning">
            <summary>
                       Starts a maximum time cleaning cycle, the same as a normal "max" button press.
                       <remarks>This command puts the SCI in passive mode.</remarks></summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaGetFirmwareDate">
            <summary>
                       Query for Roomba/Create Firmware Date
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.StandardResponse">
            <summary>
                       The Standard iRobot command response.
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.GetSensorsResponse">
            <summary>
                       The response type for RoombaGetSensors
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaOperations">
            <summary>
                       Roomba Operations
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.IRobotModel">
            <summary>
                       The model of iRobot Roomba or Create
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.IRobotModel.NotSpecified">
            <summary>
                       The type of iRobot has not been specified.
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.IRobotModel.Roomba">
            <summary>
                       iRobot Roomba
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.IRobotModel.Create">
            <summary>
                       iRobot Create
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.iRobotConnectionType">
            <summary>
                       Connection Type
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.iRobotConnectionType.NotConfigured">
            <summary>
                       Unconfigured Roomba
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.iRobotConnectionType.RooTooth">
            <summary>
                       RoombaDevTools Bluetooth connection
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.iRobotConnectionType.RoombaSerialPort">
            <summary>
                       Serial Port connection designed for the iRobot Roomba 7-pin connector
                       <remarks>Supports Roomba Wakeup mapping RTS to Roomba Device Detect Pin-5</remarks></summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.iRobotConnectionType.CreateSerialPort">
            <summary>
                       Serial Port connection designed for the iRobot Create 7-pin connector
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.iRobotConnectionType.BluetoothAdapterModule">
            <summary>
                       Element Direct Bluetooth Adapter Module (BAM!)
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaMode">
            <summary>
                       Roomba Operation Modes
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaMode.Off">
            <summary>
                       Roomba is in Sleep Mode
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaMode.Passive">
            <summary>
                       Roomba is in Passive Mode
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaMode.Safe">
            <summary>
                       Roomba is in Safe Mode
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaMode.Full">
            <summary>
                       Roomba is in Full Mode
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaMode.Uninitialized">
            <summary>
                       The iRobot Create/Roomba has not been initialized.
                       This happens when the service is started or the
                       serial port is configured.
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaMode.NotSpecified">
            <summary>
                       Return Code indicates the mode is not specified
                       and should not be updated.
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaMode.Shutdown">
            <summary>
                       The iRobot Create/Roomba service is shutting down.
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.BumpsWheeldrops">
            <summary>
                       Bumps and Wheel Drops
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.BumpsWheeldrops.BumpRight">
            <summary>
                       Right Bump
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.BumpsWheeldrops.BumpLeft">
            <summary>
                       Left Bump
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.BumpsWheeldrops.WheelDropRight">
            <summary>
                       Right Wheel Drop
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.BumpsWheeldrops.WheelDropLeft">
            <summary>
                       Left Wheel Drop
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.BumpsWheeldrops.WheelDropCaster">
            <summary>
                       Caster Wheel Drop
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.BumpsWheeldrops.Bit6">
            <summary>
                       Unused Bit 6
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.BumpsWheeldrops.Bit7">
            <summary>
                       Unused Bit 7
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.BumpsWheeldrops.Bit8">
            <summary>
                       Unused Bit 8
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.MotorOvercurrents">
            <summary>
                       Motor Stalled
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.MotorOvercurrents.SideBrush">
            <summary>
                       Side Brush Stalled
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.MotorOvercurrents.Vacuum">
            <summary>
                       Vacuum Plugged
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.MotorOvercurrents.MainBrush">
            <summary>
                       Main Brush Stalled
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.MotorOvercurrents.DriveRight">
            <summary>
                       Right Wheel Blocked
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.MotorOvercurrents.DriveLeft">
            <summary>
                       Left Wheel Blocked
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.MotorOvercurrents.Bit6">
            <summary>
                       Not Defined Flag 0x20
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.MotorOvercurrents.Bit7">
            <summary>
                       Not Defined Flag 0x40
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.MotorOvercurrents.Bit8">
            <summary>
                       Not Defined Flag 0x80
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RemoteIR">
            <summary>
                       Roomba Remote IR Codes
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RemoteIR.Code1">
            <summary>
                       Bit 1 (0x01)
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RemoteIR.Code2">
            <summary>
                       Bit 2 (0x02)
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RemoteIR.Code3">
            <summary>
                       Bit 3 (0x04)
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RemoteIR.Code4">
            <summary>
                       Bit 4 (0x08)
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RemoteIR.Code5">
            <summary>
                       Bit 5 (0x10)
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RemoteIR.Code6">
            <summary>
                       Bit 6 (0x20)
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RemoteIR.Code7">
            <summary>
                       Bit 7 (0x40)
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RemoteIR.Code8">
            <summary>
                       Bit 8 (0x80)
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RemoteIR.RemoteLeft">
            <summary>
                       Remote "Left"
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RemoteIR.RemoteForward">
            <summary>
                       Remote "Forward"
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RemoteIR.RemoteRight">
            <summary>
                       Remote "Right"
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RemoteIR.RemoteSpot">
            <summary>
                       Remote "Spot"
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RemoteIR.RemoteMax">
            <summary>
                       Remote "Max"
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RemoteIR.RemoteSmall">
            <summary>
                       Small?
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RemoteIR.RemoteMedium">
            <summary>
                       Medium??
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RemoteIR.RemoteClean">
            <summary>
                       Remote "Clean"
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RemoteIR.RemoteStop">
            <summary>
                       Remote Pause
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RemoteIR.RemotePower">
            <summary>
                       Remote "Power"
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RemoteIR.RemoteArcForwardLeft">
            <summary>
                       Remote "Forward" + "Left"
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RemoteIR.RemoteArcForwardRight">
            <summary>
                       Remote "Forward" + "Right"
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RemoteIR.RemoteDriveStop">
            <summary>
                       Remote "DriveStop" ???
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RemoteIR.RemoteDownload">
            <summary>
                       Remote "Download"
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RemoteIR.RemoteSeekDock">
            <summary>
                       Remote "SeekDock"
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RemoteIR.DockFuzzy">
            <summary>
                       Just out of sight of the Buoys
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RemoteIR.DockNear">
            <summary>
                       The Dock is near
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RemoteIR.DockGreen">
            <summary>
                       The Dock Green Buoy is visible
                       <remarks>Left of center</remarks></summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RemoteIR.DockRed">
            <summary>
                       The Dock Red Buoy is visible
                       <remarks>Right of center</remarks></summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RemoteIR.DockGreenRed">
            <summary>
                       Both Dock Buoy's are visible
                       <remarks>At 90 degrees to base</remarks></summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RemoteIR.DockRedNear">
            <summary>
                       The Dock Red Buoy is visible and the Dock is near
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RemoteIR.DockGreenNear">
            <summary>
                       The Dock Green Buoy is visible and the Dock is near
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RemoteIR.DockRedGreenNear">
            <summary>
                       The Dock Red and Green Buoy's are visible and the Dock is near
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RemoteIR.NoIR">
            <summary>
                       No IR is being received
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ButtonsRoomba">
            <summary>
                       Roomba Physical Buttons
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ButtonsRoomba.Off">
            <summary>
                       No Roomba Buttons pressed
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ButtonsRoomba.Max">
            <summary>
                       Roomba Max Button
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ButtonsRoomba.Clean">
            <summary>
                       Roomba Clean Button
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ButtonsRoomba.Spot">
            <summary>
                       Roomba Spot Button
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ButtonsRoomba.Power">
            <summary>
                       Roomba Power Button
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ButtonsRoomba.Bit5">
            <summary>
                       Not Defined Flag 0x10
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ButtonsRoomba.Bit6">
            <summary>
                       Not Defined Flag 0x20
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ButtonsRoomba.Bit7">
            <summary>
                       Not Defined Flag 0x40
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ButtonsRoomba.Bit8">
            <summary>
                       Not Defined Flag 0x80
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ChargingState">
            <summary>
                       Charging State
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ChargingState.NotCharging">
            <summary>
                       Not Charging
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ChargingState.ChargingRecovery">
            <summary>
                       Charging Recovery
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ChargingState.Charging">
            <summary>
                       Charging
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ChargingState.TrickleCharging">
            <summary>
                       Trickle Charging
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ChargingState.Waiting">
            <summary>
                       Waiting
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ChargingState.ChargingError">
            <summary>
                       Charging Error
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.ChargingState.NoResponse">
            <summary>
                       No response was received from the robot
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency">
            <summary>
                       The table of note frequencies
                       as defined by Roomba
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.Rest">
            <summary>
                       Quiet
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.G_Hz_49p0">
            <summary>
                       G Hz 49.0
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.GSharp_Hz_51p0">
            <summary>
                       GSharp Hz 51.0
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.A_Hz_55p0">
            <summary>
                       A Hz 55.0
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.ASharp_Hz_58p3">
            <summary>
                       ASharp Hz 58.3
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.B_Hz_61p7">
            <summary>
                       B Hz 61.7
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.C_Hz_65p4">
            <summary>
                       C Hz 65.4
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.CSharp_Hz_69p3">
            <summary>
                       CSharp Hz 69.3
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.D_Hz_73p4">
            <summary>
                       D Hz 73.4
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.DSharp_Hz_77p8">
            <summary>
                       DSharp Hz 77.8
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.E_Hz_82p4">
            <summary>
                       E Hz 82.4
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.F_Hz_87p3">
            <summary>
                       F Hz 87.3
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.FSharp_Hz_92p5">
            <summary>
                       FSharp Hz 92.5
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.G_Hz_98p0">
            <summary>
                       G Hz 98.0
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.GSharp_Hz_103p8">
            <summary>
                       GSharp Hz 103.8
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.A_Hz_110p0">
            <summary>
                       A Hz 110.0
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.ASharp_Hz_116p5">
            <summary>
                       ASharp Hz 116.5
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.B_Hz_123p5">
            <summary>
                       B Hz 123.5
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.C_Hz_130p8">
            <summary>
                       C Hz 130.8
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.CSharp_Hz_138p6">
            <summary>
                       CSharp Hz 138.6
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.D_Hz_146p8">
            <summary>
                       D Hz 146.8
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.DSharp_Hz_155p6">
            <summary>
                       DSharp Hz 155.6
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.E_Hz_164p8">
            <summary>
                       E Hz 164.8
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.F_Hz_174p6">
            <summary>
                       F Hz 174.6
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.FSharp_Hz_185p0">
            <summary>
                       FSharp Hz 185.0
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.G_Hz_196p0">
            <summary>
                       G Hz 196.0
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.GSharp_Hz_207p7">
            <summary>
                       GSharp Hz 207.7
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.A_Hz_220p0">
            <summary>
                       A Hz 220.0
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.ASharp_Hz_233p1">
            <summary>
                       ASharp Hz 233.1
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.B_Hz_246p9">
            <summary>
                       B Hz 246.9
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.C_Hz_261p6">
            <summary>
                       C Hz 261.6
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.CSharp_Hz_277p2">
            <summary>
                       CSharp Hz 277.2
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.D_Hz_293p7">
            <summary>
                       D Hz 293.7
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.DSharp_Hz_311p1">
            <summary>
                       DSharp Hz 311.1
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.E_Hz_329p6">
            <summary>
                       E Hz 329.6
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.F_Hz_349p2">
            <summary>
                       F Hz 349.2
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.FSharp_Hz_370p0">
            <summary>
                       FSharp Hz 370.0
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.G_Hz_392p0">
            <summary>
                       G Hz 392.0
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.GSharp_Hz_415p3">
            <summary>
                       GSharp Hz 415.3
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.A_Hz_440p0">
            <summary>
                       A Hz 440.0
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.ASharp_Hz_466p2">
            <summary>
                       ASharp Hz 466.2
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.B_Hz_493p9">
            <summary>
                       B Hz 493.9
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.C_Hz_523p3">
            <summary>
                       C Hz 523.3
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.CSharp_Hz_554p4">
            <summary>
                       CSharp Hz 554.4
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.D_Hz_587p3">
            <summary>
                       D Hz 587.3
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.DSharp_Hz_622p3">
            <summary>
                       DSharp Hz 622.3
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.E_Hz_659p3">
            <summary>
                       E Hz 659.3
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.F_Hz_698p5">
            <summary>
                       F Hz 698.5
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.FSharp_Hz_740p0">
            <summary>
                       FSharp Hz 740.0
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.G_Hz_784p0">
            <summary>
                       G Hz 784.0
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.GSharp_Hz_830p6">
            <summary>
                       GSharp Hz 830.6
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.A_Hz_880p0">
            <summary>
                       A Hz 880.0
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.ASharp_Hz_932p3">
            <summary>
                       ASharp Hz 932.3
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.B_Hz_987p8">
            <summary>
                       B Hz 987.8
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.C_Hz_1046p5">
            <summary>
                       C Hz 1046.5
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.CSharp_Hz_1108p7">
            <summary>
                       CSharp Hz 1108.7
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.D_Hz_1174p7">
            <summary>
                       D Hz 1174.7
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.DSharp_Hz_1244p5">
            <summary>
                       DSharp Hz 1244.5
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.E_Hz_1318p5">
            <summary>
                       E Hz 1318.5
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.F_Hz_1396p9">
            <summary>
                       F Hz 1396.9
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.FSharp_Hz_1480p0">
            <summary>
                       FSharp Hz 1480.0
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.G_Hz_1568p0">
            <summary>
                       G Hz 1568.0
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.GSharp_Hz_1661p2">
            <summary>
                       GSharp Hz 1661.2
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.A_Hz_1760p0">
            <summary>
                       A Hz 1760.0
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.ASharp_Hz_1864p7">
            <summary>
                       ASharp Hz 1864.7
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.B_Hz_1975p5">
            <summary>
                       B Hz 1975.5
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.C_Hz_2093p0">
            <summary>
                       C Hz 2093.0
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.CSharp_Hz_2217p5">
            <summary>
                       CSharp Hz 2217.5
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.D_Hz_2349p3">
            <summary>
                       D Hz 2349.3
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.DSharp_Hz_2489p0">
            <summary>
                       DSharp Hz 2489.0
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.E_Hz_2637p0">
            <summary>
                       E Hz 2637.0
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.F_Hz_2793p8">
            <summary>
                       F Hz 2793.8
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.FSharp_Hz_2960p0">
            <summary>
                       FSharp Hz 2960.0
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.G_Hz_3136p0">
            <summary>
                       G Hz 3136.0
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.GSharp_Hz_3322p4">
            <summary>
                       GSharp Hz 3322.4
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.A_Hz_3520p0">
            <summary>
                       A Hz 3520.0
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.ASharp_Hz_3729p3">
            <summary>
                       ASharp Hz 3729.3
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.B_Hz_3951p1">
            <summary>
                       B Hz 3951.1
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.C_Hz_4186p0">
            <summary>
                       C Hz 4186.0
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.CSharp_Hz_4434p9">
            <summary>
                       CSharp Hz 4434.9
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.D_Hz_4698p6">
            <summary>
                       D Hz 4698.6
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.DSharp_Hz_4978p0">
            <summary>
                       DSharp Hz 4978.0
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.E_Hz_5274p0">
            <summary>
                       E Hz 5274.0
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.F_Hz_5587p7">
            <summary>
                       F Hz 5587.7
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.FSharp_Hz_5919p9">
            <summary>
                       FSharp Hz 5919.9
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.G_Hz_6271p9">
            <summary>
                       G Hz 6271.9
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.GSharp_Hz_6644p9">
            <summary>
                       GSharp Hz 6644.9
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.A_Hz_7040p0">
            <summary>
                       A Hz 7040.0
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.ASharp_Hz_7458p6">
            <summary>
                       ASharp Hz 7458.6
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.B_Hz_7902p1">
            <summary>
                       B Hz 7902.1
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.C_Hz_8372p0">
            <summary>
                       C Hz 8372.0
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.CSharp_Hz_8869p8">
            <summary>
                       CSharp Hz 8869.8
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.D_Hz_9397p3">
            <summary>
                       D Hz 9397.3
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.DSharp_Hz_9956p1">
            <summary>
                       DSharp Hz 9956.1
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.E_Hz_10548p1">
            <summary>
                       E Hz 10548.1
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.F_Hz_11175p3">
            <summary>
                       F Hz 11175.3
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.FSharp_Hz_11839p8">
            <summary>
                       FSharp Hz 11839.8
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaFrequency.G_Hz_12543p9">
            <summary>
                       G Hz 12543.9
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaLedBits">
            <summary>
                       iRobot Leds
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaLedBits.Off">
            <summary>
                       Off
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaLedBits.DirtDetect">
            <summary>
                       Dirt Detect
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaLedBits.Max">
            <summary>
                       Max Led
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaLedBits.CreatePlay">
            <summary>
                       Create center "Play" Button
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaLedBits.Clean">
            <summary>
                       Clean Led
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaLedBits.Spot">
            <summary>
                       Spot Led
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaLedBits.CreateAdvance">
            <summary>
                       Create right "Advance" button
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaLedBits.StatusRed">
            <summary>
                       Status Led - Red
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaLedBits.StatusGreen">
            <summary>
                       Status Led - Green
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaLedBits.StatusAmber">
            <summary>
                       Status Led - Amber
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaLedBits.Bit7">
            <summary>
                       Unused Bit 7
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaLedBits.Bit8">
            <summary>
                       Unused Bit 8
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaMotorBits">
            <summary>
                       Roomba Cleaning Motors
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaMotorBits.SideBrush">
            <summary>
                       Side Brush Motor
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaMotorBits.Vacuum">
            <summary>
                       Vacuum Motor
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaMotorBits.MainBrush">
            <summary>
                       Main Brush Motor
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaMotorBits.Bit4">
            <summary>
                       Not Defined Flag 0x08
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaMotorBits.Bit5">
            <summary>
                       Not Defined Flag 0x10
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaMotorBits.Bit6">
            <summary>
                       Not Defined Flag 0x20
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaMotorBits.Bit7">
            <summary>
                       Not Defined Flag 0x40
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaMotorBits.Bit8">
            <summary>
                       Not Defined Flag 0x80
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode">
            <summary>
                       Roomba Commands
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.None">
            <summary>
                       No Command specified
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.ReturnAllRoomba">
            <summary>
                       All Sensor Data Return Packet
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.ReturnBumpsCliffsAndWalls">
            <summary>
                       Sensors Return Packet
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.ReturnPose">
            <summary>
                       Pose Return Packet
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.ReturnPower">
            <summary>
                       Power Return Packet
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.ReturnCliffDetail">
            <summary>
                       Power Return Packet
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.ReturnTelemetry">
            <summary>
                       Telemetry Return Packet
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.ReturnAllCreate">
            <summary>
                       All Create Sensor data
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.ReturnQueryList">
            <summary>
                       Results of the QueryList
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.OsmoReset">
            <summary>
                       Soft Reset of the iRobot
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.FirmwareDate">
            <summary>
                       Request the Firmware Date (Roomba Command Code 0x08)
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.ReturnDefineScript">
            <summary>
                       Results from define script command
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.ReturnScript">
            <summary>
                       Results from show script command
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.ReturnFirmwareDate">
            <summary>
                       Return Firmware Date
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.ReturnStream">
            <summary>
                       Results from stream notifications
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.Start">
            <summary>
                       Place Roomba in Passive Mode
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.Baud">
            <summary>
                       Set Roomba internal Baud Rate
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.Control">
            <summary>
                       Place Roomba from Passive to Safe Mode
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.Safe">
            <summary>
                       Place Roomba from Full to Safe Mode
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.Full">
            <summary>
                       Place Roomba from Safe to Full Mode
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.Power">
            <summary>
                       Place Roomba in Sleep Mode
                       <remarks>from Safe or Full Mode</remarks></summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.Spot">
            <summary>
                       Start Spot Cleaning
                       <remarks>From Safe or Full Mode</remarks></summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.Clean">
            <summary>
                       Start Cleaning Cycle
                       For Create, seeks to cover the entire room
                       <remarks>From Safe or Full Mode</remarks></summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.Max">
            <summary>
                       Start Maximum time Cleaning Cycle
                       <remarks>From Safe or Full Mode</remarks></summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.Demo">
            <summary>
                       Start an iRobot Create Demo
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.Drive">
            <summary>
                       Control Roomba's Wheels
                       <remarks>From Safe or Full Mode</remarks></summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.Motors">
            <summary>
                       Control Roomba's cleaning motors
                       <remarks>From Safe or Full Mode</remarks></summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.Leds">
            <summary>
                       Set Roomba's display LEDs.
                       <remarks>From Safe or Full Mode</remarks></summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.DefineSong">
            <summary>
                       Define a Song to be played later
                       <remarks>From Passive, Safe or Full Mode</remarks></summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.PlaySong">
            <summary>
                       Play a Song
                       <remarks>From Safe or Full Mode</remarks></summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.Sensors">
            <summary>
                       Request Sensor Data
                       <remarks>From Passive, Safe or Full Mode</remarks></summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.ForceSeekingDock">
            <summary>
                       Force Seeking Dock
                       <remarks>Valid from any mode</remarks></summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.PWMLowSideDrivers">
            <summary>
                       PWM Low Side Drivers
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.DigitalOutputs">
            <summary>
                       Digital Outputs
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.Stream">
            <summary>
                       Starts a continuous stream of data packets.
                       The list of packets requested is sent every 15 ms,
                       which is the rate Create uses to update data.
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.QueryList">
            <summary>
                       Query for a list of sensor packets.
                       The result is returned once.
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.StreamPauseResume">
            <summary>
                       Pause or Resume notifications without clearing the list of requested packets.
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.SendIR">
            <summary>
                       Send IR
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.DefineScript">
            <summary>
                       Define a script
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.PlayScript">
            <summary>
                       Play a script
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.ShowScript">
            <summary>
                       Show a script
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.WaitTime">
            <summary>
                       Wait specified time
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.WaitDistance">
            <summary>
                       Wait until distance is driven
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.WaitAngle">
            <summary>
                       Wait until angle is turned
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaCommandCode.WaitEvent">
            <summary>
                       Wait for an event to occur
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaQueryType">
            <summary>
                       Roomba Query Packets
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaQueryType.ReturnAll">
            <summary>
                       All Sensor Data Return Packet
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaQueryType.ReturnSensors">
            <summary>
                       Sensors Return Packet
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaQueryType.ReturnPose">
            <summary>
                       Pose Return Packet
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaQueryType.ReturnPower">
            <summary>
                       Power Return Packet
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaQueryType.ReturnCliffDetail">
            <summary>
                       Power Return Packet
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaQueryType.ReturnTelemetry">
            <summary>
                       Telemetry Return Packet
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaQueryType.ReturnAllCreate">
            <summary>
                       All Create Sensor data
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaReturnPacketCode">
            <summary>
                       Type of sensor data requested
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaReturnPacketCode.All">
            <summary>
                       Retrieve All Data
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaReturnPacketCode.Sensors">
            <summary>
                       Retrieve Sensor Packet
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaReturnPacketCode.Pose">
            <summary>
                       Retrieve Pose Packet
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaReturnPacketCode.Power">
            <summary>
                       Retrieve Power Packet
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaBaudCode">
            <summary>
                       Internal Roomba Baud Rate
                       <remarks>When using Bluetooth connection,
                       this setting may not be correct</remarks></summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaBaudCode.Baud300">
            <summary>
                       300 Baud
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaBaudCode.Baud600">
            <summary>
                       600 Baud
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaBaudCode.Baud1200">
            <summary>
                       1200 Baud
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaBaudCode.Baud2400">
            <summary>
                       2400 Baud
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaBaudCode.Baud4800">
            <summary>
                       4800 Baud
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaBaudCode.Baud9600">
            <summary>
                       9600 Baud
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaBaudCode.Baud14400">
            <summary>
                       14400 Baud
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaBaudCode.Baud19200">
            <summary>
                       19200 Baud
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaBaudCode.Baud28800">
            <summary>
                       28800 Baud
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaBaudCode.Baud38400">
            <summary>
                       38400 Baud
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaBaudCode.Baud57600">
            <summary>
                       57600 Baud
                       </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.RoombaBaudCode.Baud115200">
            <summary>
                       115200 Baud
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.Contract">
            <summary>
                       iRobot Roomba and Create Service Implementation
                       </summary>
            <remarks>The iRobot Roomba service calls to the serial port and may block a thread
                       The ActivationSettings attribute with Sharing == false makes the runtime
                       dedicate a dispatcher thread pool just for this service.</remarks>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.Contract.CreateService(Microsoft.Dss.Services.Constructor.ConstructorPort,System.String,Microsoft.Dss.ServiceModel.Dssp.PartnerType[])">
            <summary>Creates a new instance of the service.</summary>
            <param name="constructorServicePort">Service constructor port</param>
            <param name="service">service path</param>
            <param name="partners">the partners of the service instance</param>
            <returns>create service response port</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.Roomba.Proxy.Contract.CreateService(Microsoft.Dss.Services.Constructor.ConstructorPort,Microsoft.Dss.ServiceModel.Dssp.PartnerType[])">
            <summary>Creates a new instance of the service.</summary>
            <param name="constructorServicePort">Service constructor port</param>
            <param name="partners">the partners of the service instance</param>
            <returns>create service response port</returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.SensorUpdates.Proxy.Subscribe">
            <summary>
                       Subscribe Operation
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.SensorUpdates.Proxy.UpdateAll">
            <summary>
                       ReturnAll Notification
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.SensorUpdates.Proxy.UpdateBumpsCliffsAndWalls">
            <summary>
                       ReturnSensors Notification
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.SensorUpdates.Proxy.UpdatePose">
            <summary>
                       ReturnPose Notification
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.SensorUpdates.Proxy.UpdatePower">
            <summary>
                       ReturnPower Notification
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.SensorUpdates.Proxy.UpdateMode">
            <summary>
                       Update the Roomba Mode
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.SensorUpdates.Proxy.UpdateCliffDetail">
            <summary>
                       CliffDetail Results
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.SensorUpdates.Proxy.UpdateTelemetry">
            <summary>
                       Telemetry Results
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.SensorUpdates.Proxy.UpdateNotifications">
            <summary>
                       iRobot Create Notification Results
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.SensorUpdates.Proxy.IRobotSensorUpdatesPort">
            <summary>
                       iRobot Sensor Updates Response Port
                       </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.IRobot.SensorUpdates.Proxy.Contract">
            <summary>
                       Roomba Service Contract
                       </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.SensorUpdates.Proxy.Contract.CreateService(Microsoft.Dss.Services.Constructor.ConstructorPort,System.String,Microsoft.Dss.ServiceModel.Dssp.PartnerType[])">
            <summary>Creates a new instance of the service.</summary>
            <param name="constructorServicePort">Service constructor port</param>
            <param name="service">service path</param>
            <param name="partners">the partners of the service instance</param>
            <returns>create service response port</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.IRobot.SensorUpdates.Proxy.Contract.CreateService(Microsoft.Dss.Services.Constructor.ConstructorPort,Microsoft.Dss.ServiceModel.Dssp.PartnerType[])">
            <summary>Creates a new instance of the service.</summary>
            <param name="constructorServicePort">Service constructor port</param>
            <param name="partners">the partners of the service instance</param>
            <returns>create service response port</returns>
        </member>
    </members>
</doc>
