<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NxtBrick.Y2007.M07</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.NxtContactSensorArray">
            <summary>
            Contact Sensor Array Service
            Aggregates up to four LEGO NXT sensors to produce a Contact Sensor Array.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.NxtContactSensorArray._state">
            <summary>
            Configures the minimum and maximum Contact Sensor range for any LEGO NXT device 
            which implements the Generice Analog Sensor contract.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.NxtContactSensorArray._contactSensorArrayState">
            <summary>
            ContactSensorArray State
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.NxtContactSensorArray._legoBrickPort">
            <summary>
            Partner with the LEGO NXT Brick
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.NxtContactSensorArray._subMgrPort">
            <summary>
            Subscription manager partner for Touch Sensor
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.NxtContactSensorArray._mainPort">
            <summary>
            _main Port
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.NxtContactSensorArray._genericPort">
            <summary>
            Generic Port
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.NxtContactSensorArray.#ctor(Microsoft.Dss.ServiceModel.Dssp.DsspServiceCreationPort)">
            <summary>
            Default Service Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.NxtContactSensorArray.Start">
            <summary>
            Service Start
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.NxtContactSensorArray.ValidateState">
            <summary>
            Validate the State.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.NxtContactSensorArray.FindSensors">
            <summary>
            Find sensors on the brick which can be added to 
            our contact sensor array.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.NxtContactSensorArray.ProcessBrickState(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickState)">
            <summary>
            Process Brick State
            </summary>
            <param name="brickState"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.NxtContactSensorArray.GeneratePortConfiguration(System.String,System.String,System.Int32,System.String)">
            <summary>
            Generate a Port Configuration for the specified device.
            </summary>
            <param name="model"></param>
            <param name="name"></param>
            <param name="hardwareIdentifier"></param>
            <param name="serviceUri"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.NxtContactSensorArray.InitializationHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.ConnectToHardware)">
            <summary>
            Wait until the LEGO is connected to the hardware before initializing this service.
            </summary>
            <param name="ready"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.NxtContactSensorArray.AnalogSensorNotificationHandler(Microsoft.Robotics.Services.AnalogSensor.Proxy.Replace)">
            <summary>
            Analog Sensor Notification Handler
            </summary>
            <param name="notification"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.NxtContactSensorArray.UnsubscribeAllSensors">
            <summary>
            Unsubscribe from all prior analog sensor requests
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.NxtContactSensorArray.GetHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.Get)">
            <summary>
            Get Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.NxtContactSensorArray.HttpGetHandler(Microsoft.Dss.Core.DsspHttp.HttpGet)">
            <summary>
            HttpGet Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.NxtContactSensorArray.ConfigureDeviceHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.ConfigureDevice)">
            <summary>
            Configure Device Handler
            </summary>
            <param name="configureDevice"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.NxtContactSensorArray.RemoveDeviceConfigurationHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.ResetConfiguration)">
            <summary>
            ResetConfiguration Handler
            </summary>
            <param name="resetConfiguration"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.NxtContactSensorArray.GenericGetHandler(Microsoft.Robotics.Services.ContactSensor.Proxy.Get)">
            <summary>
            Get Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.NxtContactSensorArray.GenericHttpGetHandler(Microsoft.Dss.Core.DsspHttp.HttpGet)">
            <summary>
            HttpGet Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.NxtContactSensorArray.GenericReplaceHandler(Microsoft.Robotics.Services.ContactSensor.Proxy.Replace)">
            <summary>
            Replace Handler
            </summary>
            <param name="replace"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.NxtContactSensorArray.GenericUpdateHandler(Microsoft.Robotics.Services.ContactSensor.Proxy.Update)">
            <summary>
            Update Handler
            </summary>
            <param name="update"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.NxtContactSensorArray.GenericReliableSubscribeHandler(Microsoft.Robotics.Services.ContactSensor.Proxy.ReliableSubscribe)">
            <summary>
            ReliableSubscribe Handler
            </summary>
            <param name="subscribe"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.NxtContactSensorArray.GenericSubscribeHandler(Microsoft.Robotics.Services.ContactSensor.Proxy.Subscribe)">
            <summary>
            Subscribe Handler
            </summary>
            <param name="subscribe"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.PortConfiguration">
            <summary>
            Runtime configuration of the ContactSensorArray.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.PortConfiguration.Pressed(System.Double)">
            <summary>
            Translate an analog value to a ContactSensor.Pressed value.
            </summary>
            <param name="analogValue"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.PortConfiguration.#ctor">
            <summary>
            Runtime configuration of the ContactSensorArray.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.PortConfiguration.#ctor(System.Int32,System.String,System.Double,System.Double)">
            <summary>
            Runtime configuration of the ContactSensorArray.
            </summary>
            <param name="hardwareIdentifier"></param>
            <param name="name"></param>
            <param name="successRangeMin"></param>
            <param name="successRangeMax"></param>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.PortConfiguration.HardwareIdentifier">
            <summary>
            Indicates the Hardware Identifier.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.PortConfiguration.Name">
            <summary>
            Indicates the Sensor Name.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.PortConfiguration.SuccessRangeMin">
            <summary>
            Specifies the minimum value of the success range for this type of sensor.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.PortConfiguration.SuccessRangeMax">
            <summary>
            Specifies the maximum value of the success range for this type of sensor.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.PortConfiguration.AnalogSensorServiceUri">
            <summary>
            "Specifies the Service URI of the analog sensor service for this sensor."
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.PortConfiguration.Contact">
            <summary>
            Indicates the current state of the Contact Sensor.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.SensorRange">
            <summary>
            Identifies a Sensor Range on the specified Sensor Port.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.SensorRange.Model">
            <summary>
            Identifies the NXT Sensor Model.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.SensorRange.SensorName">
            <summary>
            Identifies the NXT Sensor Name.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.SensorRange.RangeName">
            <summary>
            Identifies the name of this Sensor Range.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.SensorRange.#ctor">
            <summary>
            Identifies a Sensor Range on the specified Sensor Port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.SensorRange.#ctor(System.Int32,System.String,System.String,System.String)">
            <summary>
            Identifies a Sensor Range on the specified Sensor Port.
            </summary>
            <param name="hardwareIdentifier"></param>
            <param name="model"></param>
            <param name="sensorName"></param>
            <param name="rangeName"></param>
        </member>
        <member name="P:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.SensorRange.SensorPort">
            <summary>
            Identifies the Sensor Port.
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.SensorRange.HardwareIdentifier">
            <summary>
            Identifies the Contact Sensor Hardware Identifier.
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.SensorRange.ContactSensorName">
            <summary>
            Generate a unique Contact Sensor Name which is derrived from the Sensor Port, Model, Range Name and Sensor Name.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.SensorConfiguration">
            <summary>
            Configures the minimum and maximum values of an analog sensor to translate the
            analog value to ContactSensor.Pressed.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.SensorConfiguration.RangeName">
            <summary>
            Specifies the user friendly range name.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.SensorConfiguration.DeviceModel">
            <summary>
            Identifies the device model for which this range applies.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.SensorConfiguration.DeviceName">
            <summary>
            Optionally Identifies the user friendly device name to which this range applies.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.SensorConfiguration.SuccessRangeMin">
            <summary>
            Specifies the minimum value of the success range for this type of sensor.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.SensorConfiguration.SuccessRangeMax">
            <summary>
            Specifies the maximum value of the success range for this type of sensor.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.SensorConfiguration.#ctor">
            <summary>
            Configures the minimum and maximum values of an analog sensor to translate the
            analog value to ContactSensor.Pressed.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.SensorConfiguration.#ctor(System.String,System.String,System.String,System.Double,System.Double)">
            <summary>
            Configures the minimum and maximum values of an analog sensor to translate the
            analog value to ContactSensor.Pressed.
            </summary>
            <param name="rangeName"></param>
            <param name="deviceModel"></param>
            <param name="deviceName"></param>
            <param name="successRangeMin"></param>
            <param name="successRangeMax"></param>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.ResetConfigurationRequest">
            <summary>
            Resets the configuration of the LEGO NXT Contact Sensor Array.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.NxtContactSensorArrayState">
            <summary>
            Configures the minimum and maximum Contact Sensor range for any LEGO NXT device which implements the Generice Analog Sensor contract.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.NxtContactSensorArrayState.SensorConfiguration">
            <summary>
            Configures the minimum and maximum Contact Sensor range for any LEGO NXT device which implements the Generice Analog Sensor contract.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.NxtContactSensorArrayState.RuntimeConfiguration">
            <summary>
            Indicates the Runtime configuration of the Contact Sensor Array.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.NxtContactSensorArrayOperations">
            <summary>
            NxtContactSensorArray Main Operations Port
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.Get">
            <summary>
            NxtContactSensorArray Get Operation
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.Get.#ctor">
            <summary>
            NxtContactSensorArray Get Operation
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.Get.#ctor(Microsoft.Dss.ServiceModel.Dssp.GetRequestType)">
            <summary>
            NxtContactSensorArray Get Operation
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.Get.#ctor(Microsoft.Dss.ServiceModel.Dssp.GetRequestType,Microsoft.Ccr.Core.PortSet{Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.NxtContactSensorArrayState,W3C.Soap.Fault})">
            <summary>
            NxtContactSensorArray Get Operation
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.ConfigureDevice">
            <summary>
            Configures a LEGO NXT Device to be interpreted as a Contact Sensor.
            The specified Device must implement the Generic Analog Sensor contract 
            in order to be used by the Contact Sensor Array service.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.ResetConfiguration">
            <summary>
            Resets the configuration of the LEGO NXT Contact Sensor Array.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.StandardNxtDevices">
            <summary>
            Standard NXT Devices which support the generic Analog Sensor contract.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.StandardNxtDevices.TouchSensor">
            <summary>
            The Device Model of the LEGO NXT Touch Sensor.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.StandardNxtDevices.LightSensor">
            <summary>
            The Device Model of the LEGO NXT Light Sensor.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.StandardNxtDevices.SoundSensor">
            <summary>
            The Device Model of the LEGO NXT Sound Sensor.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.StandardNxtDevices.UltrasonicSensor">
            <summary>
            The Device Model of the LEGO NXT Ultrasonic Sensor.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.StandardNxtDevices.Compass">
            <summary>
            The Device Model of the HiTechnic Compass Sensor.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.StandardNxtDevices.CMPS">
            <summary>
            The Device Model of the MindSensors Compass Sensor.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.Contract">
            <summary>
            ContactSensorArray Contract
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ContactSensorArray.Contract.Identifier">
            The Unique Contract Identifier for the ContactSensorArray service
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrick">
            <summary>
            Implementation class for NxtBrick
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrick._state">
            <summary>
            _state
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrick._internalMainPort">
            <summary>
            _main Port
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrick._subMgrPort">
            <summary>
            Subscription manager partner
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrick._internalI2CPort">
            <summary>
            Internal port for processing I2C commands one at a time.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrick.#ctor(Microsoft.Dss.ServiceModel.Dssp.DsspServiceCreationPort)">
            <summary>
            Default Service Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrick.InitializeState">
            <summary>
            Initialize starting state
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrick.OpenLegoNxtServiceInBrowser">
            <summary>
            Open the LEGO NXT Service in a web browser.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrick.Start">
            <summary>
            Service Start
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrick.CreateNxtCommunicationService">
            <summary>
            Creates an instance of the LEGO NXT Communications service.
            </summary>
            <returns>Result PortSet for retrieving service creation response</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrick.ServiceInitialization(Microsoft.Dss.ServiceModel.Dssp.CreateResponse)">
            <summary>
            Service Initialization
            Connect to the Brick and then open up the service for all requests
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrick.InitializationComplete(System.Object)">
            <summary>
            Service Initialization is Complete. 
            Activate the normal operation handlers.
            </summary>
            <param name="response"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrick.SendAnyCommand(Microsoft.Robotics.Services.Sample.Lego.Nxt.Commands.LegoCommand,System.Boolean)">
            <summary>
            Send Any Command, including a two-phase LowSpeed command (LSWrite)
            </summary>
            <param name="cmd"></param>
            <param name="priority"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrick.PollingHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.PollingEntry)">
            <summary>
            The periodic Polling handler
            </summary>
            <param name="entry"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrick.NotConnectedHandler(System.Object)">
            <summary>
            Reply to any request with "Not Connected".
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrick.LegoSensorUpdateHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.LegoSensorUpdate)">
            <summary>
            LegoSensorUpdate External Handler
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrick.GetHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.Get)">
            <summary>
            Get Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrick.HttpGetHandler(Microsoft.Dss.Core.DsspHttp.HttpGet)">
            <summary>
            HttpGet Handler
            </summary>
            <param name="get"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrick.DisconnectFromHardwareHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.DisconnectFromHardware)">
            <summary>
            DisconnectFromHardware Handler
            </summary>
            <param name="disconnect"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrick.ConnectToHardwareHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.ConnectToHardware)">
            <summary>
            Configure Handler
            </summary>
            <param name="configure"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrick.UnregisterDevice(System.String)">
            <summary>
            Remove a device from the device list and polling queue.
            </summary>
            <param name="serviceUri"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrick.ReserveDevicePortHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.ReserveDevicePort)">
            <summary>
            Reserve a port for the specified device.
            </summary>
            <param name="reservation"></param>
            <returns>The port which will be reserved.</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrick.TestPortForI2CSensor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Common.LegoNxtPort,System.String)">
            <summary>
            Test a Sensor Port for an I2C Sensor
            </summary>
            <param name="sensorPort"></param>
            <param name="sensorType"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrick.TestPortForI2CSensorHandler(Microsoft.Ccr.Core.Port{System.Boolean},Microsoft.Robotics.Services.Sample.Lego.Nxt.Common.LegoNxtPort,System.String)">
            <summary>
            Test a Sensor Port for an I2C Sensor
            </summary>
            <param name="response"></param>
            <param name="sensorPort"></param>
            <param name="sensorType"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrick.AttachAndSubscribeHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AttachAndSubscribe)">
            <summary>
            Attach Handler
            </summary>
            <param name="attach"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrick.NormalizeAttachRequest(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AttachRequest)">
            <summary>
            Normalize the Commands which are part of the attach request
            </summary>
            <param name="attachRequest"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrick.NormalizeCommandSequence(Microsoft.Robotics.Services.Sample.Lego.Nxt.Commands.NxtCommandSequence)">
            <summary>
            Normalize the Command Sequence to contain the LegoCommand base type.
            </summary>
            <param name="nxtCommandSequence"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrick.SelectiveSubscribe(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AttachAndSubscribe)">
            <summary>
            Create a custom selective subscribe which filters on the 
            service uri of the subscriber.
            </summary>
            <param name="subscribe"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrick.DetachHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.Detach)">
            <summary>
            Detach Handler
            </summary>
            <param name="detach"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrick.AdjustPollingFrequencyHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AdjustPollingFrequency)">
            <summary>
            AdjustPollingFrequency Handler
            </summary>
            <param name="adjustPollingFrequency"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrick.SendLowSpeedCommandHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.SendLowSpeedCommand)">
            <summary>
            Send I2C Command Handler
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrick.SendLegoCommandHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.SendNxtCommand)">
            <summary>
            Send LEGO Command Handler
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrick.PlayToneHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.PlayTone)">
            <summary>
            Play a tone on the internal LEGO NXT Speaker
            </summary>
            <param name="playTone"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrick.SubscribeHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.Subscribe)">
            <summary>
            Subscribe Handler
            </summary>
            <param name="subscribe"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrick.DropHandler(Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop)">
            <summary>
            Drop Handler
            </summary>
            <param name="drop"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrick.ConnectionUpdateHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.ConnectionUpdate)">
            <summary>
            Connection Update notifications
            </summary>
            <param name="connectionUpdate"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrick.I2cLowSpeedCommandHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.SendLowSpeedCommand)">
            <summary>
            Send I2C Command and post a response when it is completed.
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickState">
            <summary>
            The NxtBrick State
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickState.Configuration">
            <summary>
            LEGO Nxt Brick Configuration
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickState.Runtime">
            <summary>
            LEGO NXT Runtime State
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtRuntime">
            <summary>
            LEGO NXT Runtime State
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtRuntime.Firmware">
            <summary>
            The LEGO NXT Firmware Version
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtRuntime.Connected">
            <summary>
            Indicates an active connection to the LEGO NXT Brick
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtRuntime.Devices">
            <summary>
            Identifies Runtime devices which are attached to the LEGO Brick
            </summary>
            <remarks>The key is LegoNxtConnection.ToString()</remarks>
        </member>
        <member name="P:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtRuntime.BrickName">
            <summary>
            The LEGO NXT Brick Name
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.Note">
            <summary>
            Play a tone on the NXT brick for the specified duration
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.Note.#ctor">
            <summary>
            Play a tone on the NXT brick for the specified duration
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.Note.#ctor(System.Int32,System.Int32)">
            <summary>
            Play a tone on the NXT brick for the specified duration
            </summary>
            <param name="frequency"></param>
            <param name="duration"></param>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.Note.Frequency">
            <summary>
            200 - 14000 Hz
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.Note.Duration">
            <summary>
            Duration to play tome in ms
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.PollingEntry">
            <summary>
            Polling Entry
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.PollingEntry.#ctor">
            <summary>
            Polling Entry
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.PollingEntry.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AttachRequest)">
            <summary>
            Polling Entry
            </summary>
            <param name="request"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.PollingEntry.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AttachRequest,System.DateTime)">
            <summary>
            Polling Entry
            </summary>
            <param name="request"></param>
            <param name="next"></param>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.PollingEntry.Next">
            <summary>
            The Next Scheduled Polling Event for this sensor
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.PollingEntry.Timestamp">
            <summary>
            The Timestamp when this polling entry was registered.
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.PollingEntry.AttachRequest">
            <summary>
            The Attach Request received from the sensor service
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.Registration">
            <summary>
            Register a Sensor or Motor to the LEGO Brick before Attaching
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.Registration.Connection">
            <summary>
            The Brick Connection Port
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.Registration.DeviceType">
            <summary>
            The Device Type
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.Registration.DeviceModel">
            <summary>
            The Device Model
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.Registration.DeviceContract">
            <summary>
            The Device Contract
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.Registration.ServiceUri">
            <summary>
            The Service URI. 
            Use: ServiceInfo.Service
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.Registration.Name">
            <summary>
            Identifies the user friendly name for the LEGO NXT Device.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.Registration.SubscriberUri">
            <summary>
            Subscription Uri
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.Registration.I2CBusAddress">
            <summary>
            The I2C Bus Address of the Ultrasonic or other I2C Sensor.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.Registration.#ctor">
            <summary>
            Attach a Sensor or Motor to the LEGO Brick
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.Registration.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Common.LegoNxtConnection,Microsoft.Robotics.Services.Sample.Lego.Nxt.Common.LegoDeviceType,System.String,System.String,System.String,System.String)">
            <summary>
            Register a Sensor or Motor to the LEGO Brick before Attaching.
            </summary>
            <param name="connection"></param>
            <param name="deviceType"></param>
            <param name="deviceModel"></param>
            <param name="deviceContract"></param>
            <param name="serviceUri"></param>
            <param name="name"></param>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.DetachRequest">
            <summary>
            Detach a Sensor or Motor from the LEGO Brick
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.DetachRequest.#ctor">
            <summary>
            Detach a Sensor or Motor from the LEGO Brick
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.DetachRequest.#ctor(System.String)">
            <summary>
            Detach a Sensor or Motor from the LEGO Brick
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.DetachRequest.ServiceUri">
            <summary>
            The Service URI of a LEGO NXT Device 
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AdjustPollingFrequencyRequest">
            <summary>
            Adjust the Polling Frequency for a LEGO NXT Device.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AdjustPollingFrequencyRequest.#ctor">
            <summary>
            Adjust the Polling Frequency for a LEGO NXT Device.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AdjustPollingFrequencyRequest.#ctor(System.String,System.Int32)">
            <summary>
            Adjust the Polling Frequency for a LEGO NXT Device.
            </summary>
            <param name="serviceUri"></param>
            <param name="pollingFrequencyMs"></param>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AdjustPollingFrequencyRequest.ServiceUri">
            <summary>
            The Service URI of a LEGO NXT Device 
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AdjustPollingFrequencyRequest.PollingFrequencyMs">
            <summary>
            Indicates the new Polling Frequency in milliseconds. \n(-1 = disabled; 0 = Original setting; > 0 = ms)
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AdjustPollingFrequencyResponse">
            <summary>
            The Adjusted Polling Frequency.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AdjustPollingFrequencyResponse.#ctor">
            <summary>
            The Adjusted Polling Frequency.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AdjustPollingFrequencyResponse.#ctor(System.Int32)">
            <summary>
            The Adjusted Polling Frequency.
            </summary>
            <param name="pollingFrequencyMs"></param>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AdjustPollingFrequencyResponse.PollingFrequencyMs">
            <summary>
            Polling Freqency Milliseconds (> 0, -1 disabled)
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AttachRequest">
            <summary>
            Attach a Sensor or Motor to the LEGO Brick
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AttachRequest.Registration">
            <summary>
            Registration
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AttachRequest.InitializationCommands">
            <summary>
            Sensor Initialization Sequence which is executed when the sensor is attached,
            and any time the LEGO NXT brick is reinitialized.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AttachRequest.PollingCommands">
            <summary>
            Commands which are executed for continuous polling of the sensor.
            </summary>
            <remarks>PollingFrequencyMs must be greater than zero.</remarks>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AttachRequest.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AttachRequest.#ctor">
            <summary>
            Attach a Sensor or Motor to the LEGO Brick
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AttachRequest.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.Registration)">
            <summary>
            Attach a Sensor or Motor to the LEGO Brick
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AttachRequest.ToString">
            <summary>
            The description of an Attach Request instance.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AttachResponse">
            <summary>
            Attach Response which identifies which port the sensor was bound to.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AttachResponse.Connection">
            <summary>
            Connection
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AttachResponse.DeviceModel">
            <summary>
            Device Model
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AttachResponse.#ctor">
            <summary>
            Attach a Sensor or Motor to the LEGO Brick
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AttachResponse.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Common.LegoNxtConnection,System.String)">
            <summary>
            Attach a Sensor or Motor to the LEGO Brick
            </summary>
            <param name="connection"></param>
            <param name="deviceModel"></param>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.BrickConfiguration">
            <summary>
            Configure the LEGO NXT Brick
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.BrickConfiguration.SerialPort">
            <summary>
            Communications Serial Port
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.BrickConfiguration.BaudRate">
            <summary>
            Communications Baud Rate
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.BrickConfiguration.ConnectionType">
            <summary>
            Lego Connection Type
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.BrickConfiguration.ShowInBrowser">
            <summary>
            Specifies that the LEGO NXT Brick service will be displayed in a web browser.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.BrickConfiguration.#ctor">
            <summary>
            Configure the LEGO NXT Brick
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.BrickConfiguration.#ctor(System.Int32)">
            <summary>
            Configure the LEGO NXT Brick
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.BrickConfiguration.#ctor(System.Int32,System.Int32,Microsoft.Robotics.Services.Sample.Lego.Nxt.Common.LegoConnectionType)">
            <summary>
            Configure the LEGO NXT Brick
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.DisconnectRequest">
            <summary>
            Disconnect from the LEGO NXT Brick Hardware.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.LegoResponseException">
            <summary>
            A LEGO Response exception 
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.LegoResponseException.#ctor">
            <summary>
            A LEGO Response exception 
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.LegoResponseException.#ctor(System.Byte[])">
            <summary>
            A LEGO Response exception 
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.LegoResponseException.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Commands.LegoCommand,System.Exception)">
            <summary>
            A LEGO Response exception 
            </summary>
            <param name="cmd"></param>
            <param name="ex"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.LegoResponseException.PacketLength">
            <summary>
            Calculate the length of the current packet.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.LegoResponseException.ErrorMessageLength">
            <summary>
            Calculate the length of the error message.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.LegoResponseException.OriginalCommandLength">
            <summary>
            Calculate the length of the original command.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.LegoResponseException.SetCommandData">
            <summary>
            Set CommandData with the current values of ErrorMessage and OriginalCommand
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.LegoResponseException.CommandData">
            <summary>
            The underlying Command Data
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.LegoResponseException.OriginalCommand">
            <summary>
            LEGO Command
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.LegoResponseException.ErrorMessage">
            <summary>
            Error Message
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.InternalBrickStatus">
            <summary>
            Internal Brick Status
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.InternalBrickStatus.Disconnected">
            <summary>
            The brick has been disconnected.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.InternalBrickStatus.ClosePending">
            <summary>
            A Close request is pending.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations">
            <summary>
            NxtBrick Main Operations Port
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.#ctor">
            <summary>
            NxtBrick Main Operations Port
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.op_Implicit(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations)~Microsoft.Ccr.Core.Port{Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup}">
            <summary>
            Implicit Operator for Port of DsspDefaultLookup
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.op_Implicit(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations)~Microsoft.Ccr.Core.Port{Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop}">
            <summary>
            Implicit Operator for Port of DsspDefaultDrop
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.op_Implicit(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.Get}">
            <summary>
            Implicit Operator for Port of Get
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.op_Implicit(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations)~Microsoft.Ccr.Core.Port{Microsoft.Dss.Core.DsspHttp.HttpGet}">
            <summary>
            Implicit Operator for Port of HttpGet
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.op_Implicit(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.ConnectToHardware}">
            <summary>
            Implicit Operator for Port of ConnectToHardware
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.op_Implicit(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.DisconnectFromHardware}">
            <summary>
            Implicit Operator for Port of DisconnectFromHardware
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.op_Implicit(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.ReserveDevicePort}">
            <summary>
            Implicit Operator for Port of ReserveDevicePort
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.op_Implicit(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AttachAndSubscribe}">
            <summary>
            Implicit Operator for Port of AttachAndSubscribe
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.op_Implicit(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.Detach}">
            <summary>
            Implicit Operator for Port of Detach
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.op_Implicit(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AdjustPollingFrequency}">
            <summary>
            Implicit Operator for Port of AdjustPollingFrequency
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.op_Implicit(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.SendLowSpeedCommand}">
            <summary>
            Implicit Operator for Port of SendLowSpeedCommand
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.op_Implicit(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.SendNxtCommand}">
            <summary>
            Implicit Operator for Port of SendNxtCommand
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.op_Implicit(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.Subscribe}">
            <summary>
            Implicit Operator for Port of Subscribe
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.op_Implicit(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.LegoSensorUpdate}">
            <summary>
            Implicit Operator for Port of LegoSensorUpdate
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.op_Implicit(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.PlayTone}">
            <summary>
            Implicit Operator for Port of PlayTone
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.Post(Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup)">
            <summary>
            Post(DsspDefaultLookup)
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.Post(Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop)">
            <summary>
            Post(DsspDefaultDrop)
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.Post(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.Get)">
            <summary>
            Post(Get)
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.Post(Microsoft.Dss.Core.DsspHttp.HttpGet)">
            <summary>
            Post(HttpGet)
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.Post(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.ConnectToHardware)">
            <summary>
            Post(ConnectToHardware)
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.Post(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.DisconnectFromHardware)">
            <summary>
            Post(DisconnectFromHardware)
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.Post(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.ReserveDevicePort)">
            <summary>
            Post(ReserveDevicePort)
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.Post(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AttachAndSubscribe)">
            <summary>
            Post(AttachAndSubscribe)
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.Post(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.Detach)">
            <summary>
            Post(Detach)
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.Post(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AdjustPollingFrequency)">
            <summary>
            Post(AdjustPollingFrequency)
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.Post(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.SendLowSpeedCommand)">
            <summary>
            Post(SendLowSpeedCommand)
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.Post(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.SendNxtCommand)">
            <summary>
            Post(SendNxtCommand)
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.Post(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.Subscribe)">
            <summary>
            Post(Subscribe)
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.Post(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.LegoSensorUpdate)">
            <summary>
            Post(LegoSensorUpdate)
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.Post(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.PlayTone)">
            <summary>
            Post(PlayTone)
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.DsspDefaultLookup">
            <summary>
            Post Dssp Default Lookup and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.DsspDefaultLookup(Microsoft.Dss.ServiceModel.Dssp.LookupRequestType)">
            <summary>
            Post Dssp Default Lookup with body and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.DsspDefaultDrop">
            <summary>
            Post Dssp Default Drop and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.DsspDefaultDrop(Microsoft.Dss.ServiceModel.Dssp.DropRequestType)">
            <summary>
            Post Dssp Default Drop with body and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.Get">
            <summary>
            Post Get and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.Get(Microsoft.Dss.ServiceModel.Dssp.GetRequestType)">
            <summary>
            Post Get with body and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.HttpGet">
            <summary>
            Post Http Get and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.HttpGet(Microsoft.Dss.Core.DsspHttp.HttpGetRequestType)">
            <summary>
            Post Http Get with body and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.ConnectToHardware(System.Int32,System.Int32,Microsoft.Robotics.Services.Sample.Lego.Nxt.Common.LegoConnectionType)">
            <summary>
            Post Connect To Hardware with parameters and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.ConnectToHardware(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.BrickConfiguration)">
            <summary>
            Post Connect To Hardware with body and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.DisconnectFromHardware">
            <summary>
            Post Disconnect From Hardware and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.DisconnectFromHardware(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.DisconnectRequest)">
            <summary>
            Post Disconnect From Hardware with body and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.ReserveDevicePort(Microsoft.Robotics.Services.Sample.Lego.Nxt.Common.LegoNxtConnection,Microsoft.Robotics.Services.Sample.Lego.Nxt.Common.LegoDeviceType,System.String,System.String,System.String,System.String)">
            <summary>
            Post Reserve Device Port with parameters and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.ReserveDevicePort(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.Registration)">
            <summary>
            Post Reserve Device Port with body and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.AttachAndSubscribe(Microsoft.Ccr.Core.IPort)">
            <summary>
            Post Attach And Subscribe and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.AttachAndSubscribe(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AttachRequest,Microsoft.Ccr.Core.IPort)">
            <summary>
            Post Attach And Subscribe with body and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.Detach(System.String)">
            <summary>
            Post Detach with parameters and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.Detach(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.DetachRequest)">
            <summary>
            Post Detach with body and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.AdjustPollingFrequency(System.String,System.Int32)">
            <summary>
            Post AdjustPollingFrequency with parameters and return the response port.
            </summary>
            <param name="serviceUri"></param>
            <param name="pollingFrequencyMs"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.AdjustPollingFrequency(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AdjustPollingFrequencyRequest)">
            <summary>
            Post AdjustPollingFrequency with body and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.SendLowSpeedCommand">
            <summary>
            Post Send Low Speed Command and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.SendLowSpeedCommand(Microsoft.Robotics.Services.Sample.Lego.Nxt.Commands.LegoLSWrite)">
            <summary>
            Post Send Low Speed Command with body and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.SendNxtCommand(Microsoft.Robotics.Services.Sample.Lego.Nxt.Commands.LegoCommand)">
            <summary>
            Post Send Nxt Command with body and return the response port.
            </summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.SendNxtCommand(Microsoft.Robotics.Services.Sample.Lego.Nxt.Commands.LegoCommand,System.Boolean)">
            <summary>
            Post Send Nxt Command with body and return the response port.
            </summary>
            <param name="body"></param>
            <param name="requireResponse"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.SendNxtCommand(Microsoft.Robotics.Services.Sample.Lego.Nxt.Commands.LegoCommand,System.Int32)">
            <summary>
            Post Send Nxt Command with body and return the response port.
            </summary>
            <param name="body"></param>
            <param name="tryCount"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.Subscribe(Microsoft.Ccr.Core.IPort)">
            <summary>
            Post Subscribe and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.Subscribe(Microsoft.Dss.ServiceModel.Dssp.SubscribeRequestType,Microsoft.Ccr.Core.IPort)">
            <summary>
            Post Subscribe with body and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.PlayTone(System.Int32,System.Int32)">
            <summary>
            Post Play Tone with parameters and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickOperations.PlayTone(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.Note)">
            <summary>
            Post Play Tone with body and return the response port.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.Get">
            <summary>
            NxtBrick Get Operation
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.Get.#ctor">
            <summary>
            NxtBrick Get Operation
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.Get.#ctor(Microsoft.Dss.ServiceModel.Dssp.GetRequestType)">
            <summary>
            NxtBrick Get Operation
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.Get.#ctor(Microsoft.Dss.ServiceModel.Dssp.GetRequestType,Microsoft.Ccr.Core.PortSet{Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.NxtBrickState,W3C.Soap.Fault})">
            <summary>
            NxtBrick Get Operation
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.LegoSensorUpdate">
            <summary>
            Indicates a period sensor was updated. Valid only for LEGO Device services
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.PlayTone">
            <summary>
            Play a tone on the internal LEGO NXT Speaker
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.PlayTone.#ctor">
            <summary>
            Play a tone on the internal LEGO NXT Speaker
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.PlayTone.#ctor(System.Int32,System.Int32)">
            <summary>
            Play a tone on the internal LEGO NXT Speaker
            </summary>
            <param name="frequency"></param>
            <param name="duration"></param>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.SendNxtCommand">
            <summary>
            Send a direct LEGO Command to the brick and wait for the response data
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.SendNxtCommand.#ctor">
            <summary>
            Send a direct LEGO Command to the brick and wait for the response data
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.SendNxtCommand.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Commands.LegoCommand)">
            <summary>
            Send a direct LEGO Command to the brick and wait for the response data
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.SendNxtCommand.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Commands.LegoCommand,Microsoft.Ccr.Core.PortSet{Microsoft.Robotics.Services.Sample.Lego.Nxt.Commands.LegoResponse,W3C.Soap.Fault})">
            <summary>
            Send a direct LEGO Command to the brick and wait for the response data
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.SendLowSpeedCommand">
            <summary>
            Send a direct LEGO Command to the brick and wait for the response data
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.SendLowSpeedCommand.#ctor">
            <summary>
            Send a LEGO Command to the Low Speed interface and wait for the response data
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.SendLowSpeedCommand.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Commands.LegoLSWrite)">
            <summary>
            Send a LEGO Command to the Low Speed interface and wait for the response data
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.SendLowSpeedCommand.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Commands.LegoLSWrite,Microsoft.Ccr.Core.PortSet{Microsoft.Robotics.Services.Sample.Lego.Nxt.Commands.LegoResponse,W3C.Soap.Fault})">
            <summary>
            Send a LEGO Command to the Low Speed interface and wait for the response data
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.Subscribe">
            <summary>
            Subscribe to LEGO NXT Brick Connection notifications
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.ConnectToHardware">
            <summary>
            Configure the LEGO NXT Brick
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.ConnectToHardware.#ctor">
            <summary>
            Configure the LEGO NXT Brick
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.ConnectToHardware.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.BrickConfiguration)">
            <summary>
            Configure the LEGO NXT Brick
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.ConnectToHardware.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.BrickConfiguration,Microsoft.Ccr.Core.PortSet{Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType,W3C.Soap.Fault})">
            <summary>
            Configure the LEGO NXT Brick
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.DisconnectFromHardware">
            <summary>
            Disconnect from the LEGO NXT Brick Hardware.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.DisconnectFromHardware.#ctor">
            <summary>
            Disconnect from the LEGO NXT Brick Hardware.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.DisconnectFromHardware.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.DisconnectRequest)">
            <summary>
            Disconnect from the LEGO NXT Brick Hardware.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.DisconnectFromHardware.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.DisconnectRequest,Microsoft.Ccr.Core.PortSet{Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType,W3C.Soap.Fault})">
            <summary>
            Disconnect from the LEGO NXT Brick Hardware.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.Detach">
            <summary>
            Detach a Sensor or Motor from the LEGO Brick
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.Detach.#ctor">
            <summary>
            ( Internal) Detach a Sensor or Motor from the LEGO Brick
            Used by custom LEGO NXT sensor and actuator services.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.Detach.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.DetachRequest)">
            <summary>
            ( Internal) Detach a Sensor or Motor from the LEGO Brick
            Used by custom LEGO NXT sensor and actuator services.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.Detach.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.DetachRequest,Microsoft.Ccr.Core.PortSet{Microsoft.Dss.ServiceModel.Dssp.DefaultSubmitResponseType,W3C.Soap.Fault})">
            <summary>
            ( Internal) Detach a Sensor or Motor from the LEGO Brick
            Used by custom LEGO NXT sensor and actuator services.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AdjustPollingFrequency">
            <summary>
            AdjustPollingFrequency for a LEGO NXT device.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AdjustPollingFrequency.#ctor">
            <summary>
            (Internal) AdjustPollingFrequency for a LEGO NXT device.
            Used by custom LEGO NXT sensor and actuator services.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AdjustPollingFrequency.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AdjustPollingFrequencyRequest)">
            <summary>
            (Internal) AdjustPollingFrequency for a LEGO NXT device.
            Used by custom LEGO NXT sensor and actuator services.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AdjustPollingFrequency.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AdjustPollingFrequencyRequest,Microsoft.Ccr.Core.PortSet{Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AdjustPollingFrequencyResponse,W3C.Soap.Fault})">
            <summary>
            (Internal) AdjustPollingFrequency for a LEGO NXT device.
            Used by custom LEGO NXT sensor and actuator services.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AttachAndSubscribe">
            <summary>
            Attach a Sensor or Motor to the LEGO Brick
            and send notifications when sensor data is updated.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AttachAndSubscribe.#ctor">
            <summary>
            Attach a Sensor or Motor to the LEGO Brick
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AttachAndSubscribe.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AttachRequest)">
            <summary>
            Attach a Sensor or Motor to the LEGO Brick
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AttachAndSubscribe.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AttachRequest,Microsoft.Ccr.Core.PortSet{Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AttachResponse,W3C.Soap.Fault})">
            <summary>
            Attach a Sensor or Motor to the LEGO Brick
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.ReserveDevicePort">
            <summary>
            Reserve a port for the specified device
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.ReserveDevicePort.#ctor">
            <summary>
            Internal Reserve Device Port
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.ReserveDevicePort.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.Registration)">
            <summary>
            Internal Reserve Device Port
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.ReserveDevicePort.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.Registration,Microsoft.Ccr.Core.PortSet{Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.AttachResponse,W3C.Soap.Fault})">
            <summary>
            Internal Reserve Device Port
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.Contract">
            <summary>
            NxtBrick Contract class
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.Contract.Identifier">
            <summary>
            The Dss Service contract
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.LegoCategories">
            <summary>
            Categories published by Microsoft to group LEGO services together.
            These categories are available for use by any Dss Service which works in conjunction with the LEGO services.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.LegoCategories.RCX">
            <summary>
            Indicates that the service works specifically with LEGO RCX.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.LegoCategories.NXT">
            <summary>
            Indicates that the service works specifically with the 'LEGO(R) NXT Brick' service.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommService">
            <summary>
            Implementation class for LegoComm.
            All communication with the LEGO Hardware is done through this service.
            This service is started automatically by the LEGO NXT Brick service.
            </summary>    
            <remarks>The LEGO Communications service calls to the serial port and may block a thread
            The ActivationSettings attribute with ShareDispatch = false makes the runtime
            dedicate a dispatcher thread pool just for this service.</remarks>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommService._state">
            <summary>
            Lego Communications Service State
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommService._mainPort">
            <summary>
            _main Port
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommService._subMgrPort">
            <summary>
            Subscription manager partner for Ultrasonic Sensor
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommService.buffer">
            <summary>
            Buffer used for bluetooth header communications
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommService._commState">
            <summary>
            A connection to the Serial Port
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommService._legoRequestResponsePort">
            <summary>
            Port for processing standard requests which expect a response.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommService._legoPriorityRequestResponsePort">
            <summary>
            Port for processing Priority requests which expect a response.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommService._commSendImmediatePort">
            <summary>
            Port for sending data to the low-level communications.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommService._commOpenClosePort">
            <summary>
            Port for opening and closing the low-level communications.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommService._commGetResponsePort">
            <summary>
            Port which indicates there is receive data pending on the low-level communications.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommService.#ctor(Microsoft.Dss.ServiceModel.Dssp.DsspServiceCreationPort)">
            <summary>
            Default Service Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommService.Start">
            <summary>
            Service Start
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommService.GetHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.Get)">
            <summary>
            Get Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommService.OpenHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.Open)">
            <summary>
            Open a serial port.
            </summary>
            <param name="open"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommService.CloseHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.Close)">
            <summary>
            Close the connection to a serial port.
            </summary>
            <param name="close"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommService.SendCommandHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.SendCommand)">
            <summary>
            Issue a command directly to the serial port
            </summary>
            <param name="sendCommand"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommService.DropHandler(Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop)">
            <summary>
            Drop Handler
            </summary>
            <param name="drop"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommService.SubscribeHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.Subscribe)">
            <summary>
            Subscribe Handler
            </summary>
            <param name="subscribe"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommService.UpdateHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.ConnectionUpdate)">
            <summary>
            ConnectionUpdate is a notification
            </summary>
            <param name="update"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommService.RequestResponseHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.SendCommand)">
            <summary>
            Handle Requests with Responses
            </summary>
            <param name="sendCommand"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommService.CommGetResponseHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.GetResponse)">
            <summary>
            Wait for a response on the serial port.
            </summary>
            <param name="getResponse"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommService.CommSendImmediateHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.SendCommand)">
            <summary>
            Send data immediately to the serial port.
            </summary>
            <param name="sendCommand"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommService.CommCloseHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.Close)">
            <summary>
            Close the serial port
            </summary>
            <param name="close"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommService.CommOpenHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.Open)">
            <summary>
            Open the Serial Port
            </summary>
            <param name="open"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommService.ActivateNextRequest">
            <summary>
            Ready for the next request.
            Decide if it should be a priority request, 
            a standard request, or either of the two.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommService.CloseSerialPort">
            <summary>
            Close the serial port immediately
            </summary>
            <remarks>
            WARNING: This may only be called from an exclusive low-level communication handler!
            </remarks>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommService.CalcMinWaitTimeSpan(Microsoft.Robotics.Services.Sample.Lego.Nxt.Common.LegoCommandCode)">
            <summary>
            Determine how long we should wait before reading a command response on the serial port.
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommService.GetStopwatch">
            <summary>
            Get a stopwatch from the pool.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommService.RetireStopwatch(System.Diagnostics.Stopwatch@)">
            <summary>
            Return a stopwatch to the pool.
            </summary>
            <param name="stopwatch"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommService.ProcessCommunicationStats">
            <summary>
            Process pending communication stats.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommService.ValidateState">
            <summary>
            Validate Startup State
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommOperations">
            <summary>
            LegoComm Main Operations Port
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommOperations.#ctor">
            <summary>
            LegoComm Main Operations Port
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommOperations.DsspDefaultLookup">
            <summary>
            Required Lookup request body type
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommOperations.DsspDefaultLookup(Microsoft.Dss.ServiceModel.Dssp.LookupRequestType)">
            <summary>
            Post Dssp Default Lookup and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommOperations.DsspDefaultDrop">
            <summary>
            A request to drop the service.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommOperations.DsspDefaultDrop(Microsoft.Dss.ServiceModel.Dssp.DropRequestType)">
            <summary>
            Post Dssp Default Drop and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommOperations.Get">
            <summary>
            Required Get body type
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommOperations.Get(Microsoft.Dss.ServiceModel.Dssp.GetRequestType)">
            <summary>
            Post Get and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommOperations.Open">
            <summary>
            Open a connection to the LEGO NXT Hardware
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommOperations.Open(Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.OpenRequest)">
            <summary>
            Post Brick Open and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommOperations.Close">
            <summary>
            Close the connection to the LEGO NXT Hardware
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommOperations.Close(Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.CloseRequest)">
            <summary>
            Post Brick Close and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommOperations.SendCommand(System.Int32,System.Byte[])">
            <summary>
            Lego Command
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommOperations.SendCommand(Microsoft.Robotics.Services.Sample.Lego.Nxt.Commands.LegoCommand)">
            <summary>
            Post Brick SendCommand and return the response port.
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommOperations.SendCommand(Microsoft.Robotics.Services.Sample.Lego.Nxt.Commands.LegoCommand,System.Boolean)">
            <summary>
            Post Brick Send Command and return the response port.
            </summary>
            <param name="cmd"></param>
            <param name="priorityRequest"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommOperations.Subscribe(Microsoft.Ccr.Core.IPort)">
            <summary>
            Post Subscribe and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommOperations.Subscribe(Microsoft.Dss.ServiceModel.Dssp.SubscribeRequestType,Microsoft.Ccr.Core.IPort)">
            <summary>
            Post Subscribe with body and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommOperations.op_Implicit(Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.Open}">
            <summary>
            Implicit Operator for Port of Open
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommOperations.op_Implicit(Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.Close}">
            <summary>
            Implicit Operator for Port of Close
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommOperations.op_Implicit(Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.SendCommand}">
            <summary>
            Implicit Operator for Port of SendCommand
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommOperations.op_Implicit(Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.Subscribe}">
            <summary>
            Implicit Operator for Port of Subscribe
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommOperations.op_Implicit(Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.ConnectionUpdate}">
            <summary>
            Implicit Operator for Port of ConnectionUpdate
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.NxtCommState">
            <summary>
            The LegoComm State
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.NxtCommState.ConnectOverBluetooth">
            <summary>
            Connect using Bluetooth
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.NxtCommState.Connected">
            <summary>
            Is the connection currently active?
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.NxtCommState.RuntimeStatistics">
            <summary>
            Communication Statistics by LEGO Command.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommandStat">
            <summary>
            Communication statistics by LEGO Command.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommandStat.#ctor">
            <summary>
            Communication statistics by LEGO Command.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommandStat.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Common.LegoCommandCode)">
            <summary>
            Communication statistics by LEGO Command.
            </summary>
            <param name="commandCode"></param>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommandStat.CommandCode">
            <summary>
            The LEGO Command Code
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommandStat.TotalMicroseconds">
            <summary>
            Total Milliseconds
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommandStat.Count">
            <summary>
            Number of times this command has been measured.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommandStat.AverageMicroseconds">
            <summary>
            Average Microseconds (µsec).
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.LegoCommandStat.MinimumMicroseconds">
            <summary>
            The quickest command completion (Microseconds).
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.OpenRequest">
            <summary>
            Open a connection to the LEGO NXT Hardware
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.OpenRequest.#ctor">
            <summary>
            Open a connection to the LEGO NXT Hardware
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.OpenRequest.#ctor(System.Int32,System.Int32,Microsoft.Robotics.Services.Sample.Lego.Nxt.Common.LegoConnectionType)">
            <summary>
            Open a connection to the LEGO NXT Hardware
            </summary>
            <param name="serialPort"></param>
            <param name="baudRate"></param>
            <param name="connectionType"></param>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.OpenRequest.SerialPort">
            <summary>
            Serial Port
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.OpenRequest.BaudRate">
            <summary>
            Baud Rate (0 = default)
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.OpenRequest.ConnectionType">
            <summary>
            Connection Type (USB or Bluetooth)
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.CloseRequest">
            <summary>
            Close the connection to the LEGO NXT Hardware
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.SendCommandRequest">
            <summary>
            Send Lego Command Request
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.SendCommandRequest.#ctor">
            <summary>
            Lego Command Request
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.SendCommandRequest.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Commands.LegoCommand)">
            <summary>
            Lego Command Request
            </summary>
            <param name="legoCommand"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.SendCommandRequest.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Commands.LegoCommand,System.Boolean)">
            <summary>
            Lego Command Request
            </summary>
            <param name="legoCommand"></param>
            <param name="priorityRequest"></param>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.SendCommandRequest.LegoCommand">
            <summary>
            The LEGO Command
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.SendCommandRequest.PriorityRequest">
            <summary>
            Process in the Priority Queue
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.SendCommandRequest.Stopwatch">
            <summary>
            Internal Stopwatch
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.SendCommandRequest.MinExpectedTimeSpan">
            <summary>
            The minimum time expected for this response to be returned.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.SendCommandRequest.InternalResponsePort">
            <summary>
            Internal Response Port
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.ConnectionStatus">
            <summary>
            Indicates an update to the Connection Status.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.ConnectionStatus.Connected">
            <summary>
            The current connection status.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.Get">
            <summary>
            LegoComm Get Operation
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.Get.#ctor">
            <summary>
            LegoComm Get Operation
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.Get.#ctor(Microsoft.Dss.ServiceModel.Dssp.GetRequestType)">
            <summary>
            LegoComm Get Operation
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.Get.#ctor(Microsoft.Dss.ServiceModel.Dssp.GetRequestType,Microsoft.Ccr.Core.PortSet{Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.NxtCommState,W3C.Soap.Fault})">
            <summary>
            LegoComm Get Operation
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.Open">
            <summary>
            Open communication to the LEGO NXT Hardware
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.Close">
            <summary>
            Close connection to the LEGO NXT Hardware
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.SendCommand">
            <summary>
            Send a command to the LEGO NXT Brick
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.Subscribe">
            <summary>
            Subscribe to ConnectionUpdate Notifications.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.ConnectionUpdate">
            <summary>
            Indicates a change to the connection status.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.ConnectionUpdate.#ctor">
            <summary>
            Indicates a change to the connection status.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.ConnectionUpdate.#ctor(System.Boolean)">
            <summary>
            Indicates a change to the connection status.
            </summary>
            <param name="connected"></param>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.GetResponse">
            <summary>
            Wait for a response on the serial port
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.GetResponse._staticInstance">
            <summary>
            A static instance of GetResponse
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.GetResponse.Instance">
            <summary>
            Return a stance instance of GetResponse
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.CommState.SerialPort">
            <summary>
            A connection to the Serial Port
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.CommState.ConsecutivePriorityRequests">
            <summary>
            Keep track of how many consecutive priority requests have been handled.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.Contract">
            <summary>
            LegoComm Contract class
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Comm.Contract.Identifier">
            <summary>
            The Dss Service contract
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.NxtBattery">
            <summary>
            Lego NXT Battery Service
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.NxtBattery._initialized">
            <summary>
            Keep track of first time initialization
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.NxtBattery._state">
            <summary>
            _state
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.NxtBattery._mainPort">
            <summary>
            _main Port
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.NxtBattery._legoBrickPort">
            <summary>
            Partner with the LEGO NXT Brick
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.NxtBattery._subMgrPort">
            <summary>
            Subscription manager partner
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.NxtBattery.#ctor(Microsoft.Dss.ServiceModel.Dssp.DsspServiceCreationPort)">
            <summary>
            Default Service Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.NxtBattery.Start">
            <summary>
            Service Start
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.NxtBattery.InitializeState(System.Boolean)">
            <summary>
            Initialize and Validate the state
            </summary>
            <param name="connected"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.NxtBattery.ConnectToBrick">
            <summary>
            Connect to the LEGO NXT Brick
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.NxtBattery.ValidatePollingFrequency(System.Int32)">
            <summary>
            Return a validated polling frequency (ms)
            </summary>
            <param name="pollingSeconds"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.NxtBattery.NotificationHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.LegoSensorUpdate)">
            <summary>
            Receive Battery Notifications
            </summary>
            <param name="update"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.NxtBattery.GetHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.Get)">
            <summary>
            Get Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.NxtBattery.HttpGetHandler(Microsoft.Dss.Core.DsspHttp.HttpGet)">
            <summary>
            HttpGet Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.NxtBattery.ConfigureBatteryHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.ConfigureBattery)">
            <summary>
            Configure Battery Handler
            </summary>
            <param name="configure"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.NxtBattery.GenericHttpGetHandler(Microsoft.Dss.Core.DsspHttp.HttpGet)">
            <summary>
            HttpGet Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.NxtBattery.GenericDropHandler(Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop)">
            <summary>
            Drop Handler
            </summary>
            <param name="drop"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.NxtBattery.GenericGetHandler(Microsoft.Robotics.Services.Battery.Proxy.Get)">
            <summary>
            Get Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.NxtBattery.GenericReplaceHandler(Microsoft.Robotics.Services.Battery.Proxy.Replace)">
            <summary>
            Replace Handler
            </summary>
            <param name="replace"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.NxtBattery.GenericSubscribeHandler(Microsoft.Robotics.Services.Battery.Proxy.Subscribe)">
            <summary>
            Subscribe Handler
            </summary>
            <param name="subscribe"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.NxtBattery.GenericSetCriticalLevelHandler(Microsoft.Robotics.Services.Battery.Proxy.SetCriticalLevel)">
            <summary>
            SetCriticalLevel Handler
            </summary>
            <param name="setCriticalLevel"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.Contract">
            <summary>
            LegoNxtBattery Contract
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.Contract.Identifier">
            The Unique Contract Identifier for the LegoNxtBattery service
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.Contract.DeviceModel">
            <summary>
            The LEGO NXT Battery Device Type
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.Contract.DefaultBatteryPollingSeconds">
            <summary>
            Default Battery Polling (Seconds)
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.BatteryState">
            <summary>
            Battery State
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.BatteryState.Connected">
            <summary>
            Is the Sensor connected to a LEGO Brick?
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.BatteryState.MaxVoltage">
            <summary>
            Full battery power
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.BatteryState.CriticalBatteryVoltage">
            <summary>
            Critical battery voltage
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.BatteryState.MinVoltage">
            <summary>
            Minimum battery voltage;
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.BatteryState.PercentBatteryPower">
            <summary>
            Percentage of remaining battery power
            between 0.0 and 1.0
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.BatteryState.CurrentBatteryVoltage">
            <summary>
            Current Battery Voltage
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.BatteryState.TimeStamp">
            <summary>
            The time of the last battery reading
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.BatteryState.SyncGenericState(Microsoft.Robotics.Services.Battery.Proxy.BatteryState@)">
            <summary>
            Copy To the generic battery state
            </summary>
            <param name="genericBattery"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.BatteryState.CopyFrom(Microsoft.Robotics.Services.Battery.Proxy.BatteryState)">
            <summary>
            Copy From the generic battery state
            </summary>
            <param name="genericBattery"></param>
        </member>
        <member name="P:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.BatteryState.BatteryPollingSeconds">
            <summary>
            Battery Polling Seconds (0 = default)
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.ConfigureBatteryRequest">
            <summary>
            Specifies the LEGO NXT battery\'s configuration.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.ConfigureBatteryRequest.PollingFrequencySeconds">
            <summary>
            Battery Polling Seconds (0 = default)
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.ConfigureBatteryRequest.MaxVoltage">
            <summary>
            Full battery power
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.ConfigureBatteryRequest.CriticalBatteryVoltage">
            <summary>
            Critical battery voltage
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.ConfigureBatteryRequest.MinVoltage">
            <summary>
            Minimum battery voltage;
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.BatteryOperations">
            <summary>
            Battery Operations Port
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.Get">
            <summary>
            Get Operation
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Battery.ConfigureBattery">
            <summary>
            Replace Operation
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.NxtButtons">
            <summary>
            Lego NXT Buttons Service
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.NxtButtons._initialized">
            <summary>
            Keep track of first time initialization
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.NxtButtons._state">
            <summary>
            _state
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.NxtButtons._mainPort">
            <summary>
            _main Port
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.NxtButtons._legoBrickPort">
            <summary>
            Partner with the LEGO NXT Brick
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.NxtButtons._subMgrPort">
            <summary>
            Subscription manager partner
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.NxtButtons.#ctor(Microsoft.Dss.ServiceModel.Dssp.DsspServiceCreationPort)">
            <summary>
            Default Service Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.NxtButtons.Start">
            <summary>
            Service Start
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.NxtButtons.InitializeState">
            <summary>
            Initializate and Validate the state
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.NxtButtons.ConnectToBrick">
            <summary>
            Connect to the LEGO NXT Brick
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.NxtButtons.NotificationHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.LegoSensorUpdate)">
            <summary>
            Receive Buttons Notifications
            </summary>
            <param name="update"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.NxtButtons.DropHandler(Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop)">
            <summary>
            Drop Handler
            </summary>
            <param name="drop"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.NxtButtons.GetHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.Get)">
            <summary>
            Get Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.NxtButtons.HttpGetHandler(Microsoft.Dss.Core.DsspHttp.HttpGet)">
            <summary>
            HttpGet Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.NxtButtons.SubscribeHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.Subscribe)">
            <summary>
            Subscribe Handler
            </summary>
            <param name="subscribe"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.NxtButtons.ButtonsUpdateHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.ButtonsUpdate)">
            <summary>
            Outbound Notification ButtonsUpdate is not valid for inbound requests.
            </summary>
            <param name="notification"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.Contract">
            <summary>
            LegoNxtButtons Contract
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.Contract.Identifier">
            The Unique Contract Identifier for the LegoNxtButtons service
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.Contract.DeviceModel">
            <summary>
            The LEGO NXT Buttons Device Type
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.Contract.DefaultPollingFrequencyMs">
            <summary>
            Default Polling Frequency (ms)
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.ButtonState">
            <summary>
            Buttons State
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.ButtonState.Connected">
            <summary>
            Is the Sensor connected to a LEGO Brick?
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.ButtonState.PollingFrequencyMs">
            <summary>
            The frequency in ms to poll for the buttons (0 = default)
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.ButtonState.Buttons">
            <summary>
            Identifies the most recent state of the LEGO NXT Buttons.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.ButtonState.MaxDateTime(System.DateTime,System.DateTime)">
            <summary>
            Return the greater of two DateTime values
            </summary>
            <param name="first"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.NxtButtonReadings">
            <summary>
            Nxt Button Readings
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.NxtButtonReadings.#ctor">
            <summary>
            Nxt Buttons
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.NxtButtonReadings.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.DateTime)">
            <summary>
            Nxt Buttons
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.NxtButtonReadings.PressedRight">
            <summary>
            Right Button is pressed
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.NxtButtonReadings.PressedLeft">
            <summary>
            Left button is pressed.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.NxtButtonReadings.PressedEnter">
            <summary>
            Enter button is pressed
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.NxtButtonReadings.PressedCancel">
            <summary>
            Cancel Button is pressed
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.NxtButtonReadings.TimeStamp">
            <summary>
            The time of the last buttons reading
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.ButtonsUpdate">
            <summary>
            Indicates one or more LEGO NXT buttons have been pressed or released
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.ButtonsUpdate.#ctor">
            <summary>
            Indicates one or more LEGO NXT buttons have been pressed or released
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.ButtonsUpdate.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.NxtButtonReadings)">
            <summary>
            Indicates one or more LEGO NXT buttons have been pressed or released
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.ButtonsUpdate.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.NxtButtonReadings,Microsoft.Ccr.Core.PortSet{Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType,W3C.Soap.Fault})">
            <summary>
            Indicates one or more LEGO NXT buttons have been pressed or released
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.Subscribe">
            <summary>
            Subscribes to Button updates.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.ButtonOperations">
            <summary>
            Button Operations Port
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Buttons.Get">
            <summary>
            Get Operation
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.NxtColorSensor">
            <summary>
            Lego NXT Color Sensor Service
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.NxtColorSensor._state">
            <summary>
            Service State
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.NxtColorSensor._internalMainPort">
            <summary>
            Main Operations Port
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.NxtColorSensor._genericPort">
            <summary>
            Alternate Port to expose Reading as a Generic Analog Sensor
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.NxtColorSensor._transform">
            <summary>
            XSLT Transform for the service web page
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.NxtColorSensor._legoBrickPort">
            <summary>
            Partner with the LEGO NXT Brick
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.NxtColorSensor._subMgrPort">
            <summary>
            Subscription manager partner
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.NxtColorSensor._genericSubMgrPort">
            <summary>
            Subscription manager partner for generic analog sensor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.NxtColorSensor.#ctor(Microsoft.Dss.ServiceModel.Dssp.DsspServiceCreationPort)">
            <summary>
            Default Service Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.NxtColorSensor.Start">
            <summary>
            Service Start
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.NxtColorSensor.InitializeState">
            <summary>
            Initialize the Color Sensor state
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.NxtColorSensor.SyncGenericState">
            <summary>
            Sync the generic analog sensor state with the color sensor.
            </summary>
            <returns>Analog Sensor State</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.NxtColorSensor.NotificationHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.LegoSensorUpdate)">
            <summary>
            Handle sensor notifications from the brick
            </summary>
            <param name="update">Update message from the Brick</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.NxtColorSensor.GetHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.Get)">
            <summary>
            Get Handler
            </summary>
            <param name="get">Get request (not used)</param>
            <returns>State is posted back</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.NxtColorSensor.AnalogGetHandler(Microsoft.Robotics.Services.AnalogSensor.Proxy.Get)">
            <summary>
            Generic Get Handler
            </summary>
            <param name="get">Analog Get request (not used)</param>
            <returns>Analog State is posted back</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.NxtColorSensor.HttpGetHandler(Microsoft.Dss.Core.DsspHttp.HttpGet)">
            <summary>
            HttpGet Handler
            </summary>
            <param name="get">HTTP Get request</param>
            <returns>Formatted web page</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.NxtColorSensor.AnalogHttpGetHandler(Microsoft.Dss.Core.DsspHttp.HttpGet)">
            <summary>
            HttpGet AnalogSensor Handler
            </summary>
            <param name="get">HTTP Get request for Analog Sensor</param>
            <returns>Raw XML page</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.NxtColorSensor.AnalogReplaceHandler(Microsoft.Robotics.Services.AnalogSensor.Proxy.Replace)">
            <summary>
            Replace Handler for Analog Sensor
            </summary>
            <param name="replace">Replace request</param>
            <returns>Default Response</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.NxtColorSensor.ReplaceHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.Replace)">
            <summary>
            Replace Handler
            </summary>
            <param name="replace">Replace request</param>
            <returns>Fault</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.NxtColorSensor.SubscribeHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.Subscribe)">
            <summary>
            Subscribe Handler
            </summary>
            <param name="subscribe">Subscribe request</param>
            <returns>Default response</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.NxtColorSensor.AnalogReliableSubscribeHandler(Microsoft.Robotics.Services.AnalogSensor.Proxy.ReliableSubscribe)">
            <summary>
            Generic ReliableSubscribe Handler
            </summary>
            <param name="subscribe"></param>
            <returns>Default response</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.NxtColorSensor.AnalogSubscribeHandler(Microsoft.Robotics.Services.AnalogSensor.Proxy.Subscribe)">
            <summary>
            Generic Subscribe Handler
            </summary>
            <param name="subscribe"></param>
            <returns>Default response</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.NxtColorSensor.DropHandler(Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop)">
            <summary>
            Drop Handler
            </summary>
            <param name="drop">Drop request</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.NxtColorSensor.SetModeHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.SetMode)">
            <summary>
            SetMode Handler
            </summary>
            <param name="setMode">SetMode request</param>
            <returns>Default response or Fault</returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.NxtColorSensor.ConnectToBrickHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ConnectToBrick)">
            <summary>
            ConnectToBrick Handler
            </summary>
            <param name="update">Connect message from the Brick</param>
            <returns>Nothing</returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.Contract">
            <summary>
            LegoNxtColorSensor Contract
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.Contract.Identifier">
            The Unique Contract Identifier for the LegoNxtColorSensor service
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.Contract.DeviceModel">
            <summary>
            The Color Sensor Device Type
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.Contract.DefaultPollingFrequencyMs">
            <summary>
            Default Polling Frequency (ms)
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ColorSensorState">
            <summary>
            LEGO NXT Color Sensor State
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ColorSensorState.Connected">
            <summary>
            Is the Sensor connected to a LEGO Brick?
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ColorSensorState.Name">
            <summary>
            The name of this Color Sensor instance
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ColorSensorState.SensorPort">
            <summary>
            LEGO NXT Sensor Port
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ColorSensorState.PollingFrequencyMs">
            <summary>
            Polling Frequency in milliseconds
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ColorSensorState.SensorMode">
            <summary>
            The Mode that the sensor is in (See ColorSensorMode enum)
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ColorSensorState.Reading">
            <summary>
            The current light reading (intensity 0-1023) or Color Number (1-6) in Color mode
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ColorSensorState.TimeStamp">
            <summary>
            The time of the last sensor update
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ModeRequest">
            <summary>
            Request the Color Sensor to change Mode.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ModeRequest.#ctor">
            <summary>
            Request the Mode to be changed.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ModeRequest.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ColorSensorMode)">
            <summary>
            Request the Mode to be changed.
            </summary>
            <param name="mode">Sensor mode - See ColorSensorMode enum.</param>
        </member>
        <member name="P:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ModeRequest.Mode">
            <summary>
            The requested Mode of the LEGO NXT Color sensor
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.SetMode">
            <summary>
            Set the LEGO Color Sensor Mode.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.SetMode.#ctor">
            <summary>
            Set the LEGO Color Sensor Mode - Default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.SetMode.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ModeRequest)">
            <summary>
            Set the LEGO Color Sensor Mode.
            </summary>
            <param name="body">An initialized ModeRequest</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.SetMode.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ColorSensorMode)">
            <summary>
            Set the LEGO Color Sensor Mode.
            </summary>
            <param name="mode">Sensor mode - Select from ColorSensorMode enum</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.SetMode.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ModeRequest,Microsoft.Ccr.Core.PortSet{Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType,W3C.Soap.Fault})">
            <summary>
            Set the LEGO Color Sensor Mode.
            </summary>
            <param name="body">An initialized ModeRequest</param>
            <param name="responsePort">Response Port</param>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.Get">
            <summary>
            Get the LEGO Color Sensor State
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ConnectToBrick">
            <summary>
            Configure Device Connection
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ConnectToBrick.#ctor">
            <summary>
            Configure Device Connection
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ConnectToBrick.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Common.NxtSensorPort)">
            <summary>
            Configure Device Connection
            </summary>
            <param name="sensorPort"></param>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ColorSensorConfig">
            <summary>
            LEGO NXT Color Sensor Configuration.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ColorSensorConfig.#ctor">
            <summary>
            LEGO NXT Color Sensor Configuration - Default constructor.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ColorSensorConfig.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Common.NxtSensorPort)">
            <summary>
            LEGO NXT Color Sensor Configuration.
            </summary>
            <param name="sensorPort"></param>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ColorSensorConfig.Name">
            <summary>
            The name of this Color Sensor instance
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ColorSensorConfig.SensorPort">
            <summary>
            LEGO NXT Sensor Port
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ColorSensorConfig.PollingFrequencyMs">
            <summary>
            Polling Freqency (ms)
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ColorSensorConfig.SensorMode">
            <summary>
            The Mode that the sensor is in
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.Replace">
            <summary>
            Replace the LEGO Color Sensor State
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.Subscribe">
            <summary>
            Subscribe to LEGO NXT Color Sensor notifications
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ColorSensorOperations">
            <summary>
            LEGO NXT Color Sensor Operations
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ColorSensorOperations.#ctor">
            <summary>
            LEGO NXT Color Sensor Operations
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ColorSensorOperations.AddTypes(System.Type[])">
            <summary>
            Add Types with an inherited PortSet
            </summary>
            <param name="types"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ColorSensorOperations.ConnectToBrick(Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ColorSensorConfig)">
            <summary>
            Post Configure Sensor Connection with body and return the response port.
            </summary>
            <param name="body">An initialized ColorSensorConfig</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ColorSensorOperations.ConnectToBrick(Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ColorSensorState)">
            <summary>
            Post Configure Sensor Connection with body and return the response port.
            </summary>
            <param name="state">Color Sensor State to use for initialization</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ColorSensorOperations.ConnectToBrick(Microsoft.Robotics.Services.Sample.Lego.Nxt.Common.NxtSensorPort)">
            <summary>
            Post Configure Sensor Connection with body and return the response port.
            </summary>
            <param name="sensorPort">The sensor port to connect to</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ColorSensorMode">
            <summary>
            Color Sensor Mode
            </summary>
            <remarks>The mode determines which LED(s) are turned on.</remarks>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ColorSensorMode.Color">
            <summary>
            The Color Sensor is in Color Mode with all LEDs On (Default)
            </summary>
            <remarks>The Readings range from 1-6 for standard LEGO brick colors.</remarks>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ColorSensorMode.Red">
            <summary>
            The Color Sensor is in Red Mode (Red LED On)
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ColorSensorMode.Green">
            <summary>
            The Color Sensor is in Green Mode (Green LEG On)
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ColorSensorMode.Blue">
            <summary>
            The Color Sensor is in Blue Mode (Blue LED On)
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ColorSensorMode.None">
            <summary>
            The Color Sensor is in Light Sensor Mode (All LEDs Off)
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ColorSensorMode.Unknown">
            <summary>
            The Color Sensor is in an Unknown Mode
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ColorNumber">
            <summary>
            Color Numbers
            </summary>
            <remarks>These codes are returned as Readings when the sensor is in Color mode.
            The Readings range from 1-6 for standard LEGO brick colors.</remarks>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ColorNumber.Unknown">
            <summary>
            The Color is Unknown
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ColorNumber.Black">
            <summary>
            Black or nothing in range (no color detected)
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ColorNumber.Blue">
            <summary>
            Blue
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ColorNumber.Green">
            <summary>
            Green
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ColorNumber.Yellow">
            <summary>
            Yellow
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ColorNumber.Red">
            <summary>
            Red
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.ColorSensor.ColorNumber.White">
            <summary>
            White (or light is too bright to detect a color)
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.NxtDrive">
            <summary>
            Lego NXT Drive Service
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.NxtDrive._state">
            <summary>
            Robotics.LegoNxtDrive.LegoNxtDriveService State
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.NxtDrive._genericState">
            <summary>
            Generic State instance which is derrived from NxtDriveState.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.NxtDrive._internalMainPort">
            <summary>
            _main Port
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.NxtDrive._legoBrickPort">
            <summary>
            Partner with the LEGO NXT Brick
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.NxtDrive._subMgrPort">
            <summary>
            Subscription manager partner for the "native" notifications
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.NxtDrive._genericSubMgrPort">
            <summary>
            Subscription manager partner for Generic notifications
            </summary>
            <remarks>All notifications through this submgr should be for pxdrive operations</remarks>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.NxtDrive._drivePort">
            <summary>
            Generic Drive Operations Port
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.NxtDrive.#ctor(Microsoft.Dss.ServiceModel.Dssp.DsspServiceCreationPort)">
            <summary>
            Default Service Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.NxtDrive.Start">
            <summary>
            Service Start
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.NxtDrive.NotificationHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.LegoSensorUpdate)">
            <summary>
            Handle periodic sensor readings from the pxbrick
            </summary>
            <param name="update"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.NxtDrive.InternalDrivePowerHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveDistance)">
            <summary>
            Process the most recent Drive Power command
            When complete, self activate for the next internal command
            </summary>
            <param name="driveDistance"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.NxtDrive.MainConnectToBrickHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.ConnectToBrick)">
            <summary>
            ConnectToBrick Handler
            </summary>
            <param name="connectToBrick"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.NxtDrive.MainGetHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.Get)">
            <summary>
            Get Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.NxtDrive.MainHttpGetHandler(Microsoft.Dss.Core.DsspHttp.HttpGet)">
            <summary>
            HttpGet Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.NxtDrive.MainAllStopHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.AllStop)">
            <summary>
            AllStop Handler
            </summary>
            <param name="allStop"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.NxtDrive.MainDriveDistanceHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveDistance)">
            <summary>
            DriveDistance Handler
            </summary>
            <param name="driveDistance"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.NxtDrive.MainDriveEncodersUpdateHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveEncodersUpdate)">
            <summary>
            DriveEncodersUpdate Handler
            </summary>
            <param name="driveEncodersUpdate"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.NxtDrive.MainSubscribeHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.Subscribe)">
            <summary>
            Subscribe Handler
            </summary>
            <param name="subscribe"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.NxtDrive.DualDropHandler(Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop)">
            <summary>
            DsspDefaultDrop Handler
            </summary>
            <param name="drop"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.NxtDrive.GenericGetHandler(Microsoft.Robotics.Services.Drive.Proxy.Get)">
            <summary>
            Generic Get Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.NxtDrive.GenericHttpGetHandler(Microsoft.Dss.Core.DsspHttp.HttpGet)">
            <summary>
            Generic HttpGet Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.NxtDrive.GenericHttpPostHandler(Microsoft.Dss.Core.DsspHttp.HttpPost)">
            <summary>
            HttpPost Handler
            </summary>
            <param name="submit"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.NxtDrive.GenericSubscribeHandler(Microsoft.Robotics.Services.Drive.Proxy.Subscribe)">
            <summary>
            Subscribe Handler
            </summary>
            <param name="subscribe"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.NxtDrive.GenericReliableSubscribeHandler(Microsoft.Robotics.Services.Drive.Proxy.ReliableSubscribe)">
            <summary>
            ReliableSubscribe Handler
            </summary>
            <param name="subscribe"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.NxtDrive.GenericUpdateHandler(Microsoft.Robotics.Services.Drive.Proxy.Update)">
            <summary>
            Update Handler
            </summary>
            <param name="updateGenericDrive"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.NxtDrive.GenericEnableDriveHandler(Microsoft.Robotics.Services.Drive.Proxy.EnableDrive)">
            <summary>
            EnableDrive Handler
            </summary>
            <param name="enableDrive"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.NxtDrive.GenericSetDrivePowerHandler(Microsoft.Robotics.Services.Drive.Proxy.SetDrivePower)">
            <summary>
            SetDrivePower Handler
            </summary>
            <param name="drivePower"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.NxtDrive.GenericSetDriveSpeedHandler(Microsoft.Robotics.Services.Drive.Proxy.SetDriveSpeed)">
            <summary>
            SetDriveSpeed Handler
            </summary>
            <param name="driveSpeed"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.NxtDrive.GenericRotateDegreesHandler(Microsoft.Robotics.Services.Drive.Proxy.RotateDegrees)">
            <summary>
            RotateDegrees Handler
            </summary>
            <param name="rotateDegrees"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.NxtDrive.GenericDriveDistanceHandler(Microsoft.Robotics.Services.Drive.Proxy.DriveDistance)">
            <summary>
            DriveDistance Handler
            </summary>
            <param name="driveDistance"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.NxtDrive.GenericAllStopHandler(Microsoft.Robotics.Services.Drive.Proxy.AllStop)">
            <summary>
            AllStop Handler
            </summary>
            <param name="allStop"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.NxtDrive.EncoderResetHandler(Microsoft.Robotics.Services.Drive.Proxy.ResetEncoders)">
            <summary>
            Resets the encoder tick count to zero on both wheels
            </summary>
            <param name="reset">Request message</param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.NxtDrive.InitializeState">
            <summary>
            Initialize and validate startup DriveState
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.NxtDrive.MotorPortToHardwareIdentifier(Microsoft.Robotics.Services.Sample.Lego.Nxt.Common.NxtMotorPort)">
            <summary>
            Convert Motor Port (A-C) to HardwareIdentifier (1-3)
            </summary>
            <param name="motorPort"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.NxtDrive.HardwareIdentifierToMotorPort(System.Int32,Microsoft.Robotics.Services.Sample.Lego.Nxt.Common.NxtMotorPort)">
            <summary>
            Convert Hardware Identifier (1-3) to MotorPort (A-C)
            </summary>
            <param name="hardwareIdentifier"></param>
            <param name="defaultMotorPort"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.NxtDrive.HandleDriveResponse(Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveDistance,System.Boolean,W3C.Soap.Fault)">
            <summary>
            Post a success or fault to complete a DriveDistance request.
            </summary>
            <param name="driveDistance"></param>
            <param name="success"></param>
            <param name="fault"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.NxtDrive.HandleDriveResponseForGenericOperationsNotifications(Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveDistance,System.Boolean,W3C.Soap.Fault)">
            <summary>
            Notified subscribers a success or fault to completed Drive request.
            </summary>
            <param name="driveDistance"></param>
            <param name="success"></param>
            <param name="fault"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.NxtDrive.CalculatePowerAndTargetDegrees(Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.SetDriveRequest,Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveState,System.Int32@,System.Int32@,System.Int64@,System.Int64@)">
            <summary>
            Calculate the optimal power and target encoder degrees.
            </summary>
            <param name="drive">SetDriveRequest</param>
            <param name="currentState">DriveState</param>
            <param name="leftMotorPower"></param>
            <param name="rightMotorPower"></param>
            <param name="leftTargetEncoderDegrees"></param>
            <param name="rightTargetEncoderDegrees"></param>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.Contract">
            <summary>
            LegoNxtDrive Contract
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.Contract.Identifier">
            The Unique Contract Identifier for the LegoNxtDrive service
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.Contract.DeviceModel">
            <summary>
            The Unique Device Type
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.Contract.DefaultPollingFrequencyMs">
            <summary>
            Default Polling Frequency (ms)
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveState">
            <summary>
            LEGO NXT Drive State
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveState.Connected">
            <summary>
            Is the Drive connected to a LEGO Brick?
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveState.DistanceBetweenWheels">
            <summary>
            Indicates the distance between the drive wheels (meters).
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveState.LeftWheel">
            <summary>
            Left Wheel Configuration
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveState.RightWheel">
            <summary>
            Right Wheel Configuration
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveState.PollingFrequencyMs">
            <summary>
            Polling Freqency Milliseconds (0-N, -1 disabled)
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveState.TimeStamp">
            <summary>
            Indicates the timestamp of the last state change.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveState.RuntimeStatistics">
            <summary>
            Indicates the runtime statistics of entire drive.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveState.CopyToGenericState(Microsoft.Robotics.Services.Drive.Proxy.DriveDifferentialTwoWheelState)">
            <summary>
            Copy state to generic state.
            </summary>
            <param name="genericState"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveState.CopyFromGenericState(Microsoft.Robotics.Services.Drive.Proxy.DriveDifferentialTwoWheelState)">
            <summary>
            Transform generic state to this instance.
            </summary>
            <param name="genericState"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveState.Clone">
            <summary>
            Deep Clone DriveState
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.RuntimeStatistics">
            <summary>
            LEGO Drive Runtime Statistics
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.RuntimeStatistics.LeftPowerCurrent">
            <summary>
            Indicates the Left motor power; range is -1.0 to 1.0.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.RuntimeStatistics.LeftPowerTarget">
            <summary>
            Indicates the Left motor target power; range is -1.0 to 1.0.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.RuntimeStatistics.LeftEncoderTimeStamp">
            <summary>
            Left Encoder TimeStamp.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.RuntimeStatistics.LeftEncoderCurrent">
            <summary>
            Left Motor Encoder.  Current reading in degrees.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.RuntimeStatistics.LeftEncoderTarget">
            <summary>
            Left Motor Encoder Target.  Desired target of the Left encoder in degrees.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.RuntimeStatistics.LeftMotorRpm">
            <summary>
            The Left Motor Speed (RPM).
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.RuntimeStatistics.RightPowerCurrent">
            <summary>
            Indicates the Right motor power; range is -1.0 to 1.0.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.RuntimeStatistics.RightPowerTarget">
            <summary>
            Indicates the Right motor target power; range is -1.0 to 1.0.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.RuntimeStatistics.RightEncoderTimeStamp">
            <summary>
            Right Encoder TimeStamp.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.RuntimeStatistics.RightEncoderCurrent">
            <summary>
            Right Motor Encoder.  Current reading in degrees.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.RuntimeStatistics.RightEncoderTarget">
            <summary>
            Right Motor Encoder Target.  Desired target of the Right encoder in degrees.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.RuntimeStatistics.RightMotorRpm">
            <summary>
            The Right Motor Speed (RPM).
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.RuntimeStatistics.TargetStopState">
            <summary>
            Specifies how to stop after the Target Encoder degrees are reached.
            Valid when Stopping after a specified number of rotation degrees.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.RuntimeStatistics.Clone">
            <summary>
            Clone RuntimeStatistics
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.WheelConfiguration">
            <summary>
            LEGO NXT Wheel Configuration
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.WheelConfiguration.#ctor">
            <summary>
            LEGO NXT Wheel Configuration
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.WheelConfiguration.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Common.NxtMotorPort,System.Boolean,System.Double)">
            <summary>
            LEGO NXT Wheel Configuration
            </summary>
            <param name="motorPort"></param>
            <param name="reversePolarity"></param>
            <param name="wheelDiameter"></param>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.WheelConfiguration.MotorPort">
            <summary>
            Motor Port Configuration
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.WheelConfiguration.ReversePolarity">
            <summary>
            Reverse Motor Polarity
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.WheelConfiguration.WheelDiameter">
            <summary>
            Diameter of the wheel (meters)
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.WheelConfiguration.Clone">
            <summary>
            Deep Clone WheelConfiguration
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.SetDriveRequest">
            <summary>
            LEGO NXT specific drive request which stops after the specified motor rotation degrees.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.SetDriveRequest.LeftPower">
            <summary>
            Left Motor Power (-1.0 - 1.0)
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.SetDriveRequest.RightPower">
            <summary>
            Right Motor Power (-1.0 - 1.0)
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.SetDriveRequest.LeftStopAtRotationDegrees">
            <summary>
            Stop the Left Motor after it has rotated the specified degrees (0-continuous).
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.SetDriveRequest.RightStopAtRotationDegrees">
            <summary>
            Stop the Right Motor after it has rotated the specified degrees (0-continuous).
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.SetDriveRequest.StopState">
            <summary>
            Stop by applying brakes or coasting. \nValid when Stopping after the specified Rotation Degrees
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.SetDriveRequest.isGenericOperation">
            <summary>
            This request orignated from a generic operation
            </summary>
            
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.SetDriveRequest.DriveDistanceStage">
            <summary>
            DriveDistance stage
            </summary>
            
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.SetDriveRequest.RotateDegreesStage">
            <summary>
            RotageDegrees stage
            </summary>
            
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.SetDriveRequest.DriveRequestOperation">
            <summary>
            Drive request;
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.ResetMotorPositionRequest">
            <summary>
            Reset the Motor Encoder Position
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.ResetMotorPositionRequest.Relative">
            <summary>
            Relative to last position (true) or Absolute (false)
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.Get">
            <summary>
            Get the LEGO Motor State
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveDistance">
            <summary>
            Run Motor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveDistance.#ctor">
            <summary>
            Run Motor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveDistance.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.SetDriveRequest)">
            <summary>
            Run Motor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveDistance.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.SetDriveRequest,Microsoft.Ccr.Core.PortSet{Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType,W3C.Soap.Fault})">
            <summary>
            Run Motor
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.ConnectToBrick">
            <summary>
            Configure Drive Connection
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.ConnectToBrick.#ctor">
            <summary>
            Configure Drive Connection
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.ConnectToBrick.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveState)">
            <summary>
            Configure Drive Connection
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.ConnectToBrick.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveState,Microsoft.Ccr.Core.PortSet{Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType,W3C.Soap.Fault})">
            <summary>
            Configure Drive Connection
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.Subscribe">
            <summary>
            Subscribe to LEGO NXT Drive notifications
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveEncodersUpdate">
            <summary>
            Indicates an update to the Left and Right Wheel encoders.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveOperations">
            <summary>
            LEGO NXT Drive Operations Port
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveOperations.#ctor">
            <summary>
            LEGO NXT Drive Operations Port
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveOperations.op_Implicit(Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveOperations)~Microsoft.Ccr.Core.Port{Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup}">
            <summary>
            Implicit Operator for Port of DsspDefaultLookup
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveOperations.op_Implicit(Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveOperations)~Microsoft.Ccr.Core.Port{Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop}">
            <summary>
            Implicit Operator for Port of DsspDefaultDrop
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveOperations.op_Implicit(Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.Get}">
            <summary>
            Implicit Operator for Port of Get
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveOperations.op_Implicit(Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveOperations)~Microsoft.Ccr.Core.Port{Microsoft.Dss.Core.DsspHttp.HttpGet}">
            <summary>
            Implicit Operator for Port of Microsoft.Dss.Core.DsspHttp.HttpGet
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveOperations.op_Implicit(Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.AllStop}">
            <summary>
            Implicit Operator for Port of AllStop
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveOperations.op_Implicit(Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveDistance}">
            <summary>
            Implicit Operator for Port of DriveDistance
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveOperations.op_Implicit(Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveEncodersUpdate}">
            <summary>
            Implicit Operator for Port of DriveEncodersUpdate
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveOperations.op_Implicit(Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.ConnectToBrick}">
            <summary>
            Implicit Operator for Port of ConnectToBrick
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveOperations.op_Implicit(Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveOperations)~Microsoft.Ccr.Core.Port{Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.Subscribe}">
            <summary>
            Implicit Operator for Port of Subscribe
            </summary>
            <param name="portSet"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveOperations.Post(Microsoft.Dss.ServiceModel.Dssp.DsspDefaultLookup)">
            <summary>
            Post(DsspDefaultLookup)
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveOperations.Post(Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop)">
            <summary>
            Post(DsspDefaultDrop)
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveOperations.Post(Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.Get)">
            <summary>
            Post(Get)
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveOperations.Post(Microsoft.Dss.Core.DsspHttp.HttpGet)">
            <summary>
            Post(dssphttp.HttpGet)
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveOperations.Post(Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.AllStop)">
            <summary>
            Post(motor.AllStop)
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveOperations.Post(Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveDistance)">
            <summary>
            Post(DriveDistance)
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveOperations.Post(Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveEncodersUpdate)">
            <summary>
            Post(DriveEncodersUpdate)
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveOperations.Post(Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.ConnectToBrick)">
            <summary>
            Post(ConnectToBrick)
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveOperations.Post(Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.Subscribe)">
            <summary>
            Post(Subscribe)
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveOperations.ConnectToBrick(Microsoft.Robotics.Services.Sample.Lego.Nxt.Drive.DriveState)">
            <summary>
            Post Connect To Brick with body and return the response port.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.NxtLightSensor">
            <summary>
            Lego NXT Light Sensor Service
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.NxtLightSensor._state">
            <summary>
            _state
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.NxtLightSensor._internalMainPort">
            <summary>
            _main Port
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.NxtLightSensor._legoBrickPort">
            <summary>
            Partner with the LEGO NXT Brick
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.NxtLightSensor._subMgrPort">
            <summary>
            Subscription manager partner
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.NxtLightSensor._genericSubMgrPort">
            <summary>
            Subscription manager partner for generic analog sensor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.NxtLightSensor.#ctor(Microsoft.Dss.ServiceModel.Dssp.DsspServiceCreationPort)">
            <summary>
            Default Service Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.NxtLightSensor.Start">
            <summary>
            Service Start
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.NxtLightSensor.InitializeState">
            <summary>
            Initialize the Light Sensor state
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.NxtLightSensor.SyncGenericState">
            <summary>
            Sync the generic analog sensor state with our touch sensor.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.NxtLightSensor.NotificationHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.LegoSensorUpdate)">
            <summary>
            Handle sensor notifications from the brick
            </summary>
            <param name="update"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.NxtLightSensor.GetHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.Get)">
            <summary>
            Get Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.NxtLightSensor.AnalogGetHandler(Microsoft.Robotics.Services.AnalogSensor.Proxy.Get)">
            <summary>
            Generic Get Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.NxtLightSensor.HttpGetHandler(Microsoft.Dss.Core.DsspHttp.HttpGet)">
            <summary>
            HttpGet Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.NxtLightSensor.AnalogHttpGetHandler(Microsoft.Dss.Core.DsspHttp.HttpGet)">
            <summary>
            HttpGet AnalogSensor Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.NxtLightSensor.AnalogReplaceHandler(Microsoft.Robotics.Services.AnalogSensor.Proxy.Replace)">
            <summary>
            Replace Handler for Analog Sensor
            </summary>
            <param name="replace"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.NxtLightSensor.ReplaceHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.Replace)">
            <summary>
            Replace Handler
            </summary>
            <param name="replace"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.NxtLightSensor.SubscribeHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.Subscribe)">
            <summary>
            Subscribe Handler
            </summary>
            <param name="subscribe"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.NxtLightSensor.AnalogReliableSubscribeHandler(Microsoft.Robotics.Services.AnalogSensor.Proxy.ReliableSubscribe)">
            <summary>
            Generic ReliableSubscribe Handler
            </summary>
            <param name="subscribe"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.NxtLightSensor.AnalogSubscribeHandler(Microsoft.Robotics.Services.AnalogSensor.Proxy.Subscribe)">
            <summary>
            Generic Subscribe Handler
            </summary>
            <param name="subscribe"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.NxtLightSensor.DropHandler(Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop)">
            <summary>
            Drop Handler
            </summary>
            <param name="drop"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.NxtLightSensor.SpotlightHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.Spotlight)">
            <summary>
            Spotlight Handler
            </summary>
            <param name="spotlight"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.NxtLightSensor.ConnectToBrickHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.ConnectToBrick)">
            <summary>
            ConnectToBrick Handler
            </summary>
            <param name="update"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.Contract">
            <summary>
            LegoNxtLightSensor Contract
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.Contract.Identifier">
            The Unique Contract Identifier for the LegoNxtLightSensor service
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.Contract.DeviceModel">
            <summary>
            The Light Sensor Device Type
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.Contract.DefaultPollingFrequencyMs">
            <summary>
            Default Polling Frequency (ms)
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.LightSensorState">
            <summary>
            LEGO NXT Light Sensor State
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.LightSensorState.Connected">
            <summary>
            Is the Sensor connected to a LEGO Brick?
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.LightSensorState.Name">
            <summary>
            The name of this Light Sensor instance
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.LightSensorState.SensorPort">
            <summary>
            LEGO NXT Sensor Port
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.LightSensorState.PollingFrequencyMs">
            <summary>
            Polling Freqency (ms)
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.LightSensorState.Intensity">
            <summary>
            The intensity of the current light reading
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.LightSensorState.TimeStamp">
            <summary>
            The time of the last sensor update
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.LightSensorState.SpotlightOn">
            <summary>
            Indicates the current state of the light sensor spotlight
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.SpotlightRequest">
            <summary>
            Request the spotlight to be turned on or off.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.SpotlightRequest.#ctor">
            <summary>
            Request the spotlight to be turned on or off.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.SpotlightRequest.#ctor(System.Boolean)">
            <summary>
            Request the spotlight to be turned on or off.
            </summary>
            <param name="spotlightOn"></param>
        </member>
        <member name="P:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.SpotlightRequest.SpotlightOn">
            <summary>
            The requested state of the spotlight on the LEGO NXT light sensor
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.Spotlight">
            <summary>
            Turn the LEGO LightSensor spotlight on or off.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.Spotlight.#ctor">
            <summary>
            Turn the LEGO LightSensor spotlight on or off.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.Spotlight.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.SpotlightRequest)">
            <summary>
            Turn the LEGO LightSensor spotlight on or off.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.Spotlight.#ctor(System.Boolean)">
            <summary>
            Turn the LEGO LightSensor spotlight on or off.
            </summary>
            <param name="spotlightOn"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.Spotlight.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.SpotlightRequest,Microsoft.Ccr.Core.PortSet{Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType,W3C.Soap.Fault})">
            <summary>
            Turn the LEGO LightSensor spotlight on or off.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.Get">
            <summary>
            Get the LEGO Light Sensor State
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.ConnectToBrick">
            <summary>
            Configure Device Connection
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.ConnectToBrick.#ctor">
            <summary>
            Configure Device Connection
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.ConnectToBrick.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Common.NxtSensorPort)">
            <summary>
            Configure Device Connection
            </summary>
            <param name="sensorPort"></param>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.LightSensorConfig">
            <summary>
            LEGO NXT Light Sensor Configuration.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.LightSensorConfig.#ctor">
            <summary>
            LEGO NXT Light Sensor Configuration.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.LightSensorConfig.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Common.NxtSensorPort)">
            <summary>
            LEGO NXT Light Sensor Configuration.
            </summary>
            <param name="sensorPort"></param>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.LightSensorConfig.Name">
            <summary>
            The name of this Light Sensor instance
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.LightSensorConfig.SensorPort">
            <summary>
            LEGO NXT Sensor Port
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.LightSensorConfig.PollingFrequencyMs">
            <summary>
            Polling Freqency (ms)
            </summary>
        </member>
        <member name="P:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.LightSensorConfig.SpotlightOn">
            <summary>
            Indicates the initial state of the light sensor spotlight
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.Replace">
            <summary>
            Replace the LEGO Light Sensor State
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.Subscribe">
            <summary>
            Subscribe to LEGO NXT Light Sensor notifications
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.LightSensorOperations">
            <summary>
            LEGO NXT Light Sensor Operations
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.LightSensorOperations.#ctor">
            <summary>
            LEGO NXT Light Sensor Operations
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.LightSensorOperations.AddTypes(System.Type[])">
            <summary>
            Add Types with an inherited PortSet
            </summary>
            <param name="types"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.LightSensorOperations.ConnectToBrick(Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.LightSensorConfig)">
            <summary>
            Post Configure Sensor Connection with body and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.LightSensorOperations.ConnectToBrick(Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.LightSensorState)">
            <summary>
            Post Configure Sensor Connection with body and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.LightSensor.LightSensorOperations.ConnectToBrick(Microsoft.Robotics.Services.Sample.Lego.Nxt.Common.NxtSensorPort)">
            <summary>
            Post Configure Sensor Connection with body and return the response port.
            </summary>
            <param name="sensorPort"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.NxtMotor">
            <summary>
            Lego NXT Motor Service
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.NxtMotor._state">
            <summary>
            Motor State
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.NxtMotor._genericState">
            <summary>
            Generic State
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.NxtMotor._rpmEncoderList">
            <summary>
            RPM Prior Stats
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.NxtMotor._rpmIndex">
            <summary>
            RPM Index
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.NxtMotor._internalMainPort">
            <summary>
            _main Port
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.NxtMotor._legoBrickPort">
            <summary>
            Partner with the LEGO NXT Brick
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.NxtMotor._subMgrPort">
            <summary>
            Subscription manager partner
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.NxtMotor._targetEncoderReachedPort">
            <summary>
            Internal CCR port for tracking an encoder target
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.NxtMotor._internalMotorRotationPort">
            <summary>
            Internal CCR port which handles all motor rotation requests (AllStop, SetMotorRotation, [generic] SetMotorPower)
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.NxtMotor._rpmCalcPort">
            <summary>
            Internal CCR port which implements an rpm smoothing function.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.NxtMotor.#ctor(Microsoft.Dss.ServiceModel.Dssp.DsspServiceCreationPort)">
            <summary>
            Default Service Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.NxtMotor.Start">
            <summary>
            Service Start
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.NxtMotor.NotificationHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.LegoSensorUpdate)">
            <summary>
            Handle periodic sensor readings from the pxbrick
            </summary>
            <param name="update"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.NxtMotor.CalculateRpmHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Commands.LegoResponseGetOutputState)">
            <summary>
            Exclusive Handler for updating RPM's
            </summary>
            <param name="encoder"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.NxtMotor.InternalMotorRotationHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.SetMotorRotation)">
            <summary>
            Internal Motor Rotation Handler
            Exclusive handler which controls all motor commands
            Responds to a flood of incoming motor commands by 
            only processing the newest command.
            </summary>
            <param name="setMotorPower"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.NxtMotor.GetHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.Get)">
            <summary>
            Get Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.NxtMotor.HttpGetHandler(Microsoft.Dss.Core.DsspHttp.HttpGet)">
            <summary>
            HttpGet Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.NxtMotor.DropHandler(Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop)">
            <summary>
            Drop Handler
            </summary>
            <param name="drop"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.NxtMotor.ConnectToBrickHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.ConnectToBrick)">
            <summary>
            ConnectToBrick Handler
            </summary>
            <param name="update"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.NxtMotor.AllStopHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.AllStop)">
            <summary>
            Stop Handler
            </summary>
            <param name="stop"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.NxtMotor.SetMotorRotationHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.SetMotorRotation)">
            <summary>
            SetMotorRotation Handler
            </summary>
            <param name="setMotorRotation"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.NxtMotor.RotateForDurationHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.RotateForDuration)">
            <summary>
            RotateForDuration Handler
            </summary>
            <param name="rotateForDuration"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.NxtMotor.SubscribeHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.Subscribe)">
            <summary>
            Subscribe Handler
            </summary>
            <param name="subscribe"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.NxtMotor.EncoderReliableSubscribeHandler(Microsoft.Robotics.Services.Encoder.Proxy.ReliableSubscribe)">
            <summary>
            ReliableSubscribe Handler
            </summary>
            <param name="subscribe"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.NxtMotor.EncoderSubscribeHandler(Microsoft.Robotics.Services.Encoder.Proxy.Subscribe)">
            <summary>
            Subscribe Handler
            </summary>
            <param name="subscribe"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.NxtMotor.EncoderGetHandler(Microsoft.Robotics.Services.Encoder.Proxy.Get)">
            <summary>
            Get Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.NxtMotor.EncoderResetHandler(Microsoft.Robotics.Services.Encoder.Proxy.Reset)">
            <summary>
            Encoder Reset Handler
            </summary>
            <param name="resetEncoder"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.NxtMotor.EncoderUpdateTickCountHandler(Microsoft.Robotics.Services.Encoder.Proxy.UpdateTickCount)">
            <summary>
            UpdateTickCount Handler
            </summary>
            <param name="update"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.NxtMotor.EncoderReplaceHandler(Microsoft.Robotics.Services.Encoder.Proxy.Replace)">
            <summary>
            Replace Handler
            </summary>
            <param name="replace"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.NxtMotor.EncoderHttpGetHandler(Microsoft.Dss.Core.DsspHttp.HttpGet)">
            <summary>
            HttpGet Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.NxtMotor.GenericMotorGetHandler(Microsoft.Robotics.Services.Motor.Proxy.Get)">
            <summary>
            Motor Get Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.NxtMotor.GenericMotorReplaceHandler(Microsoft.Robotics.Services.Motor.Proxy.Replace)">
            <summary>
            Replace Handler
            </summary>
            <param name="replace"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.NxtMotor.GenericMotorHttpGetHandler(Microsoft.Dss.Core.DsspHttp.HttpGet)">
            <summary>
            HttpGet Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.NxtMotor.GenericSetMotorPowerHandler(Microsoft.Robotics.Services.Motor.Proxy.SetMotorPower)">
            <summary>
            SetMotorPower Handler
            </summary>
            <param name="genericMotorPower"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.NxtMotor.InitializeState">
            <summary>
            Initialize starting state
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.NxtMotor.ValidateConnection(Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorState,Microsoft.Ccr.Core.IPort)">
            <summary>
            Validate the Motor Connection
            Post a Fault if the Motor is not connected.
            When ValidateConnection returns false, 
            the calling handler should exit immediately
            without posting to the response port.
            </summary>
            <param name="state"></param>
            <param name="responsePort"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.NxtMotor.CalculatePowerAndTargetDegrees(Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.SetMotorRotationRequest,System.Boolean,System.Int32@,System.Int64@)">
            <summary>
            Calculate the starting power and target degrees
            </summary>
            <param name="request"></param>
            <param name="reversePolarity"></param>
            <param name="motorPower"></param>
            <param name="targetRotationDegrees"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.NxtMotor.CalculateMaxMotorPower(System.Int64,System.Double,System.Double,System.Double)">
            <summary>
            Calculate the maximum allowable target motor power (+-100)
            based on the remaining degrees to travel.
            </summary>
            <param name="degreesRemaining">Negative values indicate we are past the target.</param>
            <param name="targetPower"></param>
            <param name="rpm"></param>
            <param name="degreesAtNextNotification"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.NxtMotor.RespondToMotorPowerRequest(Microsoft.Ccr.Core.PortSet{Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType,W3C.Soap.Fault},System.Boolean)">
            <summary>
            Send a success or failure SetMotorPower response. 
            </summary>
            <param name="responsePort"></param>
            <param name="success"></param>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.Contract">
            <summary>
            LegoNxtMotor Contract
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.Contract.Identifier">
            The Unique Contract Identifier for the LegoNxtMotor service
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.Contract.DeviceModel">
            <summary>
            The Unique Device Type
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.Contract.DefaultPollingFrequencyMs">
            <summary>
            Default Polling Frequency (ms)
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorState">
            <summary>
            LEGO NXT Motor State
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorState.Connected">
            <summary>
            Is the Motor connected to a LEGO Brick?
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorState.Name">
            <summary>
            Specifies the descriptive identifier for the motor.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorState.MotorPort">
            <summary>
            LEGO NXT Motor Port.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorState.ReversePolarity">
            <summary>
            Indicates the direction (polarity) of the motor.
            (Enabling this option (true) reverses the motor)
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorState.PollingFrequencyMs">
            <summary>
            Polling Freqency Milliseconds (0-N, -1 disabled)
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorState.ResetableEncoderDegrees">
            <summary>
            Motor Encoder. Current reading in degrees since the last user reset.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorState.CurrentEncoderDegrees">
            <summary>
            Motor Encoder.  Current reading in degrees since the NXT was activated.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorState.CurrentEncoderTimeStamp">
            <summary>
            Current Encoder TimeStamp.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorState.CurrentMotorRpm">
            <summary>
            The Current Motor Speed (RPM).
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorState.AvgEncoderPollingRateMs">
            <summary>
            The average polling rate (ms).
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorState.CurrentPower">
            <summary>
            Indicates the current power applied to the motor; range is -1.0 to 1.0.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorState.TargetPower">
            <summary>
            Indicates the motor power which was last requested. (range is -1.0 to 1.0)
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorState.TargetEncoderDegrees">
            <summary>
            Current Motor Encoder Target (0-No Target).
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorState.TargetStopState">
            <summary>
            Specifies how to stop after the Target Encoder degrees are reached.
            Valid when Stopping after Degrees or Rotations.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorState.ToGenericState(Microsoft.Robotics.Services.Motor.Proxy.MotorState)">
            <summary>
            Transform current state to the specified generic state.
            </summary>
            <param name="genericState"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorState.Clone">
            <summary>
            Clone the LEGO NXT Motor State
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorState.CopyFromGenericState(Microsoft.Robotics.Services.Motor.Proxy.MotorState)">
            <summary>
            Copy generic state to this state, transforming data members.
            </summary>
            <param name="genericState"></param>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.SetMotorRotationRequest">
            <summary>
            Rotate the LEGO Motor at the specified motor power.
            Optionally stop afer the specified degrees.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.SetMotorRotationRequest.#ctor">
            <summary>
            Rotate the LEGO Motor at the specified motor power.
            Optionally stop afer the specified degrees.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.SetMotorRotationRequest.#ctor(System.Double)">
            <summary>
            Rotate the LEGO Motor at the specified motor power.
            Optionally stop afer the specified degrees.
            </summary>
            <param name="targetPower"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.SetMotorRotationRequest.#ctor(System.Double,System.Double)">
            <summary>
            Rotate the LEGO Motor at the specified motor power.
            Optionally stop afer the specified degrees.
            </summary>
            <param name="targetPower"></param>
            <param name="stopAfterDegrees"></param>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.SetMotorRotationRequest.TargetPower">
            <summary>
            Target Power (-1.0 - 1.0)
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.SetMotorRotationRequest.RampUp">
            <summary>
            Gradually Ramp Up the power until the target Power is reached.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.SetMotorRotationRequest.StopAfterDegrees">
            <summary>
            Stop Motor after the specified Degrees (0-ignore).
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.SetMotorRotationRequest.StopAfterRotations">
            <summary>
            Stop Motor after the specified Rotations (0-ignore).
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.SetMotorRotationRequest.StopState">
            <summary>
            Stop State
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.RotateForDurationRequest">
            <summary>
            Rotate the LEGO Motor at the specified motor power for the specified duration.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.RotateForDurationRequest.#ctor">
            <summary>
            Rotate the LEGO Motor at the specified motor power for the specified duration.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.RotateForDurationRequest.#ctor(System.Double,System.Double)">
            <summary>
            Rotate the LEGO Motor at the specified motor power for the specified duration.
            </summary>
            <param name="targetPower"></param>
            <param name="stopAfterMs"></param>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.RotateForDurationRequest.TargetPower">
            <summary>
            Target Power (-1.0 - 1.0)
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.RotateForDurationRequest.RampUp">
            <summary>
            Gradually Ramp Up the power until the target Power is reached.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.RotateForDurationRequest.StopAfterMs">
            <summary>
            Stop Motor after the specified duration (ms).
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.RotateForDurationRequest.StopState">
            <summary>
            Stop State
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.AllStopRequest">
            <summary>
            Stop Request
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.AllStopRequest.#ctor">
            <summary>
            Stop Request
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.AllStopRequest.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Common.MotorStopState)">
            <summary>
            Stop Request
            </summary>
            <param name="motorStopState"></param>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.AllStopRequest.StopState">
            <summary>
            Stop State
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.Get">
            <summary>
            Get the LEGO Motor State
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.AllStop">
            <summary>
            Stop Motor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.AllStop.#ctor">
            <summary>
            Stop Motor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.AllStop.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Common.MotorStopState)">
            <summary>
            Stop Motor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.AllStop.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.AllStopRequest)">
            <summary>
            Stop Motor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.AllStop.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.AllStopRequest,Microsoft.Ccr.Core.PortSet{Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType,W3C.Soap.Fault})">
            <summary>
            Stop Motor
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.ConnectToBrick">
            <summary>
            Configure Device Connection
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.ConnectToBrick.#ctor">
            <summary>
            Configure Device Connection
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.ConnectToBrick.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Common.NxtMotorPort)">
            <summary>
            Configure Device Connection
            </summary>
            <param name="motorPort"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.ConnectToBrick.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorState)">
            <summary>
            Configure Device Connection
            </summary>
            <param name="state"></param>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorConfig">
            <summary>
            LEGO NXT Motor Configuration.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorConfig.#ctor">
            <summary>
            LEGO NXT Motor Configuration.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorConfig.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Common.NxtMotorPort)">
            <summary>
            LEGO NXT Motor Configuration.
            </summary>
            <param name="motorPort"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorConfig.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorState)">
            <summary>
            LEGO NXT Motor Configuration.
            </summary>
            <param name="state"></param>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorConfig.Name">
            <summary>
            The name of this Motor instance
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorConfig.MotorPort">
            <summary>
            LEGO NXT Motor Port
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorConfig.ReversePolarity">
            <summary>
            Indicates the direction (polarity) of the motor.
            (Enabling this option (true) reverses the motor)
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorConfig.PollingFrequencyMs">
            <summary>
            Polling Freqency Milliseconds (0-N, -1 disabled)
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.SetMotorRotation">
            <summary>
            Rotate the LEGO Motor at the specified motor power.
            Optionally stop afer the specified degrees.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.SetMotorRotation.#ctor">
            <summary>
            Run Motor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.SetMotorRotation.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.SetMotorRotationRequest)">
            <summary>
            Run Motor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.SetMotorRotation.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.SetMotorRotationRequest,Microsoft.Ccr.Core.PortSet{Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType,W3C.Soap.Fault})">
            <summary>
            Run Motor
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.RotateForDuration">
            <summary>
            Rotate the LEGO Motor at the specified motor power, stopping automatically after the specified duration.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.RotateForDuration.#ctor">
            <summary>
            Run Motor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.RotateForDuration.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.RotateForDurationRequest)">
            <summary>
            Run Motor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.RotateForDuration.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.RotateForDurationRequest,Microsoft.Ccr.Core.PortSet{Microsoft.Dss.ServiceModel.Dssp.DefaultUpdateResponseType,W3C.Soap.Fault})">
            <summary>
            Run Motor
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.Subscribe">
            <summary>
            Subscribe to LEGO NXT Motor notifications
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorOperations">
            <summary>
            Motor Operations Port
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorOperations.#ctor">
            <summary>
            Motor Operations Port
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorOperations.DsspDefaultLookup">
            <summary>
            Post Dssp Default Lookup and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorOperations.DsspDefaultLookup(Microsoft.Dss.ServiceModel.Dssp.LookupRequestType)">
            <summary>
            Post Dssp Default Lookup with body and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorOperations.DsspDefaultDrop">
            <summary>
            Post Dssp Default Drop and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorOperations.DsspDefaultDrop(Microsoft.Dss.ServiceModel.Dssp.DropRequestType)">
            <summary>
            Post Dssp Default Drop with body and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorOperations.Get">
            <summary>
            Post Get and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorOperations.Get(Microsoft.Dss.ServiceModel.Dssp.GetRequestType)">
            <summary>
            Post Get with body and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorOperations.SetMotorRotation">
            <summary>
            Post Set Motor Power and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorOperations.SetMotorRotation(Microsoft.Robotics.Services.Motor.Proxy.SetMotorPowerRequest)">
            <summary>
            Post Set Motor Power with body and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorOperations.HttpGet">
            <summary>
            Post Http Get and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorOperations.HttpGet(Microsoft.Dss.Core.DsspHttp.HttpGetRequestType)">
            <summary>
            Post Http Get with body and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorOperations.Subscribe(Microsoft.Ccr.Core.IPort)">
            <summary>
            Post Subscribe and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorOperations.Subscribe(Microsoft.Dss.ServiceModel.Dssp.SubscribeRequestType,Microsoft.Ccr.Core.IPort)">
            <summary>
            Post Subscribe with body and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorOperations.AllStop(Microsoft.Robotics.Services.Sample.Lego.Nxt.Common.MotorStopState)">
            <summary>
            Post Stop Motor with parameters and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorOperations.AllStop(Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.AllStopRequest)">
            <summary>
            Post Stop Motor with body and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorOperations.ConnectToBrick(Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorConfig)">
            <summary>
            Post Configure Sensor Connection with body and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorOperations.ConnectToBrick(Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorState)">
            <summary>
            Post Configure Sensor Connection with body and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.Motor.MotorOperations.ConnectToBrick(Microsoft.Robotics.Services.Sample.Lego.Nxt.Common.NxtMotorPort)">
            <summary>
            Post Configure Sensor Connection with body and return the response port.
            </summary>
            <param name="motorPort"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.NxtUltrasonicSensor">
            <summary>
            Lego NXT Ultrasonic Sensor Service
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.NxtUltrasonicSensor._state">
            <summary>
            _state
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.NxtUltrasonicSensor._internalMainPort">
            <summary>
            _main Port
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.NxtUltrasonicSensor._legoBrickPort">
            <summary>
            Partner with the LEGO NXT Brick
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.NxtUltrasonicSensor._subMgrPort">
            <summary>
            Subscription manager partner for Ultrasonic Sensor
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.NxtUltrasonicSensor._genericSubMgrPort">
            <summary>
            Subscription manager partner for generic analog sensor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.NxtUltrasonicSensor.#ctor(Microsoft.Dss.ServiceModel.Dssp.DsspServiceCreationPort)">
            <summary>
            Default Service Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.NxtUltrasonicSensor.Start">
            <summary>
            Service Start
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.NxtUltrasonicSensor.InitializeState">
            <summary>
            Initialize State
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.NxtUltrasonicSensor.SyncGenericState">
            <summary>
            Sync the generic analog sensor state with our sonar sensor.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.NxtUltrasonicSensor.NotificationHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.LegoSensorUpdate)">
            <summary>
            Handle periodic sensor readings from the brick
            </summary>
            <param name="update"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.NxtUltrasonicSensor.GetSonarSensorHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.Get)">
            <summary>
            Get Ultrasonic Sensor Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.NxtUltrasonicSensor.GetAnalogSensorHandler(Microsoft.Robotics.Services.AnalogSensor.Proxy.Get)">
            <summary>
            Get Analog Sensor Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.NxtUltrasonicSensor.HttpGetSonarSensorHandler(Microsoft.Dss.Core.DsspHttp.HttpGet)">
            <summary>
            HttpGet SonarSensor Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.NxtUltrasonicSensor.HttpGetAnalogSensorHandler(Microsoft.Dss.Core.DsspHttp.HttpGet)">
            <summary>
            HttpGet AnalogSensor Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.NxtUltrasonicSensor.ReplaceHandler(Microsoft.Robotics.Services.AnalogSensor.Proxy.Replace)">
            <summary>
            Replace Handler
            </summary>
            <param name="replace"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.NxtUltrasonicSensor.SonarSensorUpdateHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.SonarSensorUpdate)">
            <summary>
            SonarSensorUpdate Handler
            </summary>
            <param name="update"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.NxtUltrasonicSensor.ReliableSubscribeHandler(Microsoft.Robotics.Services.AnalogSensor.Proxy.ReliableSubscribe)">
            <summary>
            ReliableSubscribe Handler
            </summary>
            <param name="subscribe"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.NxtUltrasonicSensor.SubscribeHandler(Microsoft.Robotics.Services.AnalogSensor.Proxy.Subscribe)">
            <summary>
            Subscribe Handler
            </summary>
            <param name="subscribe"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.NxtUltrasonicSensor.GenericReliableSubscribeHandler(Microsoft.Robotics.Services.AnalogSensor.Proxy.ReliableSubscribe)">
            <summary>
            ReliableSubscribe Handler
            </summary>
            <param name="subscribe"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.NxtUltrasonicSensor.GenericSubscribeHandler(Microsoft.Robotics.Services.AnalogSensor.Proxy.Subscribe)">
            <summary>
            Subscribe Handler
            </summary>
            <param name="subscribe"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.NxtUltrasonicSensor.DropHandler(Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop)">
            <summary>
            Drop Handler
            </summary>
            <param name="drop"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.NxtUltrasonicSensor.ConnectToBrickHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.ConnectToBrick)">
            <summary>
            ConnectToBrick Handler
            </summary>
            <param name="update"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.Contract">
            <summary>
            NxtUltrasonicSensor Contract
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.Contract.Identifier">
            The Unique Contract Identifier for the NxtUltrasonicSensor service
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.Contract.DeviceModel">
            <summary>
            The Nxt Ultrasonic Sensor Device Type
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.Contract.DefaultPollingFrequencyMs">
            <summary>
            Default Polling Frequency (ms)
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.SonarSensorState">
            <summary>
            LEGO NXT Sonar Sensor State
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.SonarSensorState.Connected">
            <summary>
            Is the Sensor connected to a LEGO Brick?
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.SonarSensorState.Name">
            <summary>
            The name of this Sonar Sensor instance
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.SonarSensorState.SensorPort">
            <summary>
            LEGO NXT Sensor Port
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.SonarSensorState.PollingFrequencyMs">
            <summary>
            Polling Freqency (ms)
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.SonarSensorState.Distance">
            <summary>
            The current sonar distance (cm) received from the Sonar Sensor
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.SonarSensorState.TimeStamp">
            <summary>
            The time of the last sensor update
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.Get">
            <summary>
            Get the LEGO Sonar Sensor State
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.SonarSensorUpdate">
            <summary>
            Get the LEGO Sonar Sensor State
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.ConnectToBrick">
            <summary>
            Configure Device Connection
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.ConnectToBrick.#ctor">
            <summary>
            Configure Device Connection
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.ConnectToBrick.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Common.NxtSensorPort)">
            <summary>
            Configure Device Connection
            </summary>
            <param name="sensorPort"></param>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.SonarSensorConfig">
            <summary>
            LEGO NXT Sonar Sensor Configuration.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.SonarSensorConfig.#ctor">
            <summary>
            LEGO NXT Sonar Sensor Configuration.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.SonarSensorConfig.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Common.NxtSensorPort)">
            <summary>
            LEGO NXT Sonar Sensor Configuration.
            </summary>
            <param name="sensorPort"></param>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.SonarSensorConfig.Name">
            <summary>
            The name of this Sonar Sensor instance
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.SonarSensorConfig.SensorPort">
            <summary>
            LEGO NXT Sensor Port
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.SonarSensorConfig.PollingFrequencyMs">
            <summary>
            Polling Freqency (ms)
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.UltrasonicSensorOperations">
            <summary>
            LEGO NXT Sonar Sensor Operations Port
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.UltrasonicSensorOperations.#ctor">
            <summary>
            LEGO NXT Sonar Sensor Operations Port
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.UltrasonicSensorOperations.ConnectToBrick(Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.SonarSensorConfig)">
            <summary>
            Post Configure Sensor Connection with body and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.UltrasonicSensorOperations.ConnectToBrick(Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.SonarSensorState)">
            <summary>
            Post Configure Sensor Connection with body and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SonarSensor.UltrasonicSensorOperations.ConnectToBrick(Microsoft.Robotics.Services.Sample.Lego.Nxt.Common.NxtSensorPort)">
            <summary>
            Post Configure Sensor Connection with body and return the response port.
            </summary>
            <param name="sensorPort"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.NxtSoundSensor">
            <summary>
            Lego NXT Sound Sensor Service
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.NxtSoundSensor._state">
            <summary>
            _state
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.NxtSoundSensor._internalMainPort">
            <summary>
            _main Port
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.NxtSoundSensor._legoBrickPort">
            <summary>
            Partner with the LEGO NXT Brick
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.NxtSoundSensor._subMgrPort">
            <summary>
            Subscription manager partner for Sound Sensor
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.NxtSoundSensor._genericSubMgrPort">
            <summary>
            Subscription manager partner for generic analog sensor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.NxtSoundSensor.#ctor(Microsoft.Dss.ServiceModel.Dssp.DsspServiceCreationPort)">
            <summary>
            Default Service Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.NxtSoundSensor.Start">
            <summary>
            Service Start
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.NxtSoundSensor.InitializeState">
            <summary>
            Initialize State
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.NxtSoundSensor.SyncGenericState">
            <summary>
            Sync the generic analog sensor state with our sound sensor.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.NxtSoundSensor.NotificationHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.Brick.LegoSensorUpdate)">
            <summary>
            Handle sensor notifications from the brick
            </summary>
            <param name="update"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.NxtSoundSensor.GetSoundSensorHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.Get)">
            <summary>
            Get Sound Sensor Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.NxtSoundSensor.GetAnalogSensorHandler(Microsoft.Robotics.Services.AnalogSensor.Proxy.Get)">
            <summary>
            Get Analog Sensor Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.NxtSoundSensor.HttpGetSoundSensorHandler(Microsoft.Dss.Core.DsspHttp.HttpGet)">
            <summary>
            HttpGet SoundSensor Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.NxtSoundSensor.HttpGetAnalogSensorHandler(Microsoft.Dss.Core.DsspHttp.HttpGet)">
            <summary>
            HttpGet AnalogSensor Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.NxtSoundSensor.ReplaceHandler(Microsoft.Robotics.Services.AnalogSensor.Proxy.Replace)">
            <summary>
            Replace Handler
            </summary>
            <param name="replace"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.NxtSoundSensor.SoundSensorUpdateHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.SoundSensorUpdate)">
            <summary>
            SoundSensorUpdate Handler
            </summary>
            <param name="update"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.NxtSoundSensor.ReliableSubscribeHandler(Microsoft.Robotics.Services.AnalogSensor.Proxy.ReliableSubscribe)">
            <summary>
            ReliableSubscribe Handler
            </summary>
            <param name="subscribe"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.NxtSoundSensor.SubscribeHandler(Microsoft.Robotics.Services.AnalogSensor.Proxy.Subscribe)">
            <summary>
            Subscribe Handler
            </summary>
            <param name="subscribe"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.NxtSoundSensor.GenericReliableSubscribeHandler(Microsoft.Robotics.Services.AnalogSensor.Proxy.ReliableSubscribe)">
            <summary>
            ReliableSubscribe Handler
            </summary>
            <param name="subscribe"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.NxtSoundSensor.GenericSubscribeHandler(Microsoft.Robotics.Services.AnalogSensor.Proxy.Subscribe)">
            <summary>
            Subscribe Handler
            </summary>
            <param name="subscribe"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.NxtSoundSensor.DropHandler(Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop)">
            <summary>
            Drop Handler
            </summary>
            <param name="drop"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.NxtSoundSensor.ConnectToBrickHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.ConnectToBrick)">
            <summary>
            ConnectToBrick Handler
            </summary>
            <param name="update"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.Contract">
            <summary>
            LegoNxtSoundSensor Contract
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.Contract.Identifier">
            The Unique Contract Identifier for the NxtSoundSensor service
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.Contract.DeviceModel">
            <summary>
            The NxtSoundSensor Device Type
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.Contract.DefaultPollingFrequencyMs">
            <summary>
            Default Polling Frequency (ms)
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.SoundSensorState">
            <summary>
            LEGO NXT Sound Sensor State
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.SoundSensorState.Connected">
            <summary>
            Is the Sensor connected to a LEGO Brick?
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.SoundSensorState.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.SoundSensorState.SensorPort">
            <summary>
            Sensor Port
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.SoundSensorState.PollingFrequencyMs">
            <summary>
            Polling Freqency (ms)
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.SoundSensorState.Intensity">
            <summary>
            The current sound intensity received from the Sound Sensor.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.SoundSensorState.TimeStamp">
            <summary>
            The time of the last sensor update
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.Get">
            <summary>
            Get the LEGO Sound Sensor State
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.SoundSensorUpdate">
            <summary>
            Indicates an update to the LEGO NXT Sound Sensor State.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.ConnectToBrick">
            <summary>
            Configure Device Connection
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.ConnectToBrick.#ctor">
            <summary>
            Configure Device Connection
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.ConnectToBrick.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Common.NxtSensorPort)">
            <summary>
            Configure Device Connection
            </summary>
            <param name="sensorPort"></param>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.SoundSensorConfig">
            <summary>
            LEGO NXT Sound Sensor Configuration.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.SoundSensorConfig.#ctor">
            <summary>
            LEGO NXT Sound Sensor Configuration.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.SoundSensorConfig.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Common.NxtSensorPort)">
            <summary>
            LEGO NXT Sound Sensor Configuration.
            </summary>
            <param name="sensorPort"></param>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.SoundSensorConfig.Name">
            <summary>
            The name of this Sound Sensor instance
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.SoundSensorConfig.SensorPort">
            <summary>
            LEGO NXT Sensor Port
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.SoundSensorConfig.PollingFrequencyMs">
            <summary>
            Polling Freqency (ms)
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.SoundSensorOperations">
            <summary>
            Sound Sensor Operations Port
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.SoundSensorOperations.#ctor">
            <summary>
            Sound Sensor Operations Port
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.SoundSensorOperations.ConnectToBrick(Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.SoundSensorConfig)">
            <summary>
            Post Configure Sensor Connection with body and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.SoundSensorOperations.ConnectToBrick(Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.SoundSensorState)">
            <summary>
            Post Configure Sensor Connection with body and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.SoundSensor.SoundSensorOperations.ConnectToBrick(Microsoft.Robotics.Services.Sample.Lego.Nxt.Common.NxtSensorPort)">
            <summary>
            Post Configure Sensor Connection with body and return the response port.
            </summary>
            <param name="sensorPort"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.NxtTouchSensor">
            <summary>
            Lego NXT Touch Sensor Service
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.NxtTouchSensor._state">
            <summary>
            _state
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.NxtTouchSensor._internalMainPort">
            <summary>
            _main Port
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.NxtTouchSensor._legoBrickPort">
            <summary>
            Partner with the LEGO NXT Brick
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.NxtTouchSensor._subMgrPort">
            <summary>
            Subscription manager partner for Touch Sensor
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.NxtTouchSensor._genericSubMgrPort">
            <summary>
            Subscription manager partner for generic analog sensor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.NxtTouchSensor.#ctor(Microsoft.Dss.ServiceModel.Dssp.DsspServiceCreationPort)">
            <summary>
            Default Service Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.NxtTouchSensor.Start">
            <summary>
            Service Start
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.NxtTouchSensor.InitializeState">
            <summary>
            Initialize State
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.NxtTouchSensor.SyncGenericContactState">
            <summary>
            Sync the generic contact sensor state with our touch sensor.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.NxtTouchSensor.GetTouchSensorHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.Get)">
            <summary>
            Get Touch Sensor Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.NxtTouchSensor.GetContatSensorHandler(Microsoft.Robotics.Services.ContactSensor.Proxy.Get)">
            <summary>
            Get Contact Sensor Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.NxtTouchSensor.HttpGetTouchSensorHandler(Microsoft.Dss.Core.DsspHttp.HttpGet)">
            <summary>
            HttpGet TouchSensor Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.NxtTouchSensor.HttpGetContactSensorHandler(Microsoft.Dss.Core.DsspHttp.HttpGet)">
            <summary>
            HttpGet Contact Sensor Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.NxtTouchSensor.ReplaceHandler(Microsoft.Robotics.Services.ContactSensor.Proxy.Replace)">
            <summary>
            Replace Handler
            </summary>
            <param name="replace"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.NxtTouchSensor.TouchSensorUpdateHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.TouchSensorUpdate)">
            <summary>
            TouchSensorUpdate Handler
            </summary>
            <param name="update"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.NxtTouchSensor.ReliableSubscribeHandler(Microsoft.Robotics.Services.ContactSensor.Proxy.ReliableSubscribe)">
            <summary>
            ReliableSubscribe Handler
            </summary>
            <param name="subscribe"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.NxtTouchSensor.SubscribeHandler(Microsoft.Robotics.Services.ContactSensor.Proxy.Subscribe)">
            <summary>
            Subscribe Handler
            </summary>
            <param name="subscribe"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.NxtTouchSensor.GenericReliableSubscribeHandler(Microsoft.Robotics.Services.ContactSensor.Proxy.ReliableSubscribe)">
            <summary>
            ReliableSubscribe Handler
            </summary>
            <param name="subscribe"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.NxtTouchSensor.GenericSubscribeHandler(Microsoft.Robotics.Services.ContactSensor.Proxy.Subscribe)">
            <summary>
            Subscribe Handler
            </summary>
            <param name="subscribe"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.NxtTouchSensor.DropHandler(Microsoft.Dss.ServiceModel.Dssp.DsspDefaultDrop)">
            <summary>
            Drop Handler
            </summary>
            <param name="drop"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.NxtTouchSensor.ConnectToBrickHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.ConnectToBrick)">
            <summary>
            ConnectToBrick Handler
            </summary>
            <param name="update"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.Contract">
            <summary>
            LegoNxtTouchSensor Contract
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.Contract.Identifier">
            The Unique Contract Identifier for the NxtTouchSensor service
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.Contract.DeviceModel">
            <summary>
            The NxtTouchSensor Device Type
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.Contract.DefaultPollingFrequencyMs">
            <summary>
            Default Polling Frequency (ms)
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.TouchSensorState">
            <summary>
            LEGO NXT Touch Sensor State
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.TouchSensorState.Connected">
            <summary>
            Is the Sensor connected to a LEGO Brick?
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.TouchSensorState.Name">
            <summary>
            The name of this Touch Sensor instance
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.TouchSensorState.SensorPort">
            <summary>
            LEGO NXT Sensor Port
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.TouchSensorState.PollingFrequencyMs">
            <summary>
            Polling Freqency (ms)
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.TouchSensorState.TouchSensorOn">
            <summary>
            The current state of the active Touch Sensor
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.TouchSensorState.TimeStamp">
            <summary>
            The time of the last sensor update
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.Get">
            <summary>
            Get the LEGO Touch Sensor State
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.TouchSensorUpdate">
            <summary>
            Get the LEGO Touch Sensor State
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.ConnectToBrick">
            <summary>
            Configure Device Connection
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.ConnectToBrick.#ctor">
            <summary>
            Configure Device Connection
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.ConnectToBrick.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Common.NxtSensorPort)">
            <summary>
            Configure Device Connection
            </summary>
            <param name="sensorPort"></param>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.TouchSensorConfig">
            <summary>
            LEGO NXT Touch Sensor Configuration.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.TouchSensorConfig.#ctor">
            <summary>
            LEGO NXT Touch Sensor Configuration.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.TouchSensorConfig.#ctor(Microsoft.Robotics.Services.Sample.Lego.Nxt.Common.NxtSensorPort)">
            <summary>
            LEGO NXT Touch Sensor Configuration.
            </summary>
            <param name="sensorPort"></param>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.TouchSensorConfig.Name">
            <summary>
            The name of this Touch Sensor instance
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.TouchSensorConfig.SensorPort">
            <summary>
            LEGO NXT Sensor Port
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.TouchSensorConfig.PollingFrequencyMs">
            <summary>
            Polling Freqency (ms)
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.TouchSensorOperations">
            <summary>
            LEGO NXT Touch Sensor Operations Port
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.TouchSensorOperations.#ctor">
            <summary>
            LEGO NXT Touch Sensor Operations Port
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.TouchSensorOperations.ConnectToBrick(Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.TouchSensorConfig)">
            <summary>
            Post Configure Sensor Connection with body and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.TouchSensorOperations.ConnectToBrick(Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.TouchSensorState)">
            <summary>
            Post Configure Sensor Connection with body and return the response port.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.TouchSensor.TouchSensorOperations.ConnectToBrick(Microsoft.Robotics.Services.Sample.Lego.Nxt.Common.NxtSensorPort)">
            <summary>
            Post Configure Sensor Connection with body and return the response port.
            </summary>
            <param name="sensorPort"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.NxtBrickIO">
            <summary>
            Lego NXT Battery Service
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.NxtBrickIO._state">
            <summary>
            _state
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.NxtBrickIO._mainPort">
            <summary>
            _main Port
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.NxtBrickIO._legoBrickPort">
            <summary>
            Partner with the LEGO NXT Brick
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.NxtBrickIO.#ctor(Microsoft.Dss.ServiceModel.Dssp.DsspServiceCreationPort)">
            <summary>
            Default Service Constructor
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.NxtBrickIO.Start">
            <summary>
            Service Start
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.NxtBrickIO.InitializeState">
            <summary>
            Initializate and Validate the state
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.NxtBrickIO.GetHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.Get)">
            <summary>
            Get Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.NxtBrickIO.HttpGetHandler(Microsoft.Dss.Core.DsspHttp.HttpGet)">
            <summary>
            HttpGet Handler
            </summary>
            <param name="get"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.NxtBrickIO.QueryFilesHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.QueryFiles)">
            <summary>
            QueryFiles Handler
            </summary>
            <param name="queryFiles"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.NxtBrickIO.SendFileHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.CopyFileToBrick)">
            <summary>
            SendFile Handler
            </summary>
            <param name="sendFile"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.NxtBrickIO.StopLegoProgramHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.StopProgram)">
            <summary>
            StopLegoProgram Handler
            </summary>
            <param name="stopLegoProgram"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.NxtBrickIO.StartLegoProgramHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.StartProgram)">
            <summary>
            StartLegoProgram Handler
            </summary>
            <param name="startLegoProgram"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.NxtBrickIO.QueryRunningLegoProgramHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.QueryRunningProgram)">
            <summary>
            QueryRunningLegoProgram Handler
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.NxtBrickIO.DeleteFileHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.DeleteFile)">
            <summary>
            DeleteFile Handler
            </summary>
            <param name="deleteFile"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.NxtBrickIO.SetBrickNameHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.SetBrickName)">
            <summary>
            SetBrickName Handler
            </summary>
            <param name="setBrickName"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.NxtBrickIO.QueryBrickNameHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.QueryBrickName)">
            <summary>
            QueryBrickName Handler
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.NxtBrickIO.SendBluetoothMessageHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.SendBluetoothMessage)">
            <summary>
            SendBluetoothMessage Handler
            </summary>
            <param name="sendBluetoothMessage"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.NxtBrickIO.ReceiveBluetoothMessageHandler(Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.ReceiveBluetoothMessage)">
            <summary>
            ReceiveBluetoothMessage Handler
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.Contract">
            <summary>
            LegoNxtIO Contract
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.Contract.Identifier">
            The Unique Contract Identifier for the LegoNxtIO service
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.NxtIOState">
            <summary>
            NXT IO State
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.NxtIOState.ResponseFiles">
            <summary>
            The results of the last query.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.QueryFiles">
            <summary>
            Search for one or more files on the LEGO NXT Brick.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.QueryFilesRequest">
            <summary>
            The name of the files to search for on the LEGO NXT Brick.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.QueryFilesRequest.Filespec">
            <summary>
            The filename to search for. (use '*' as a wild card)
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.ResponseFiles">
            <summary>
            The files found on the LEGO NXT Brick.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.ResponseFiles.Files">
            <summary>
            Files Found.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.LegoFile">
            <summary>
            A LEGO file
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.LegoFile.FileName">
            <summary>
            The LEGO (15.3) filename.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.LegoFile.FileSize">
            <summary>
            The size of the file.
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.LegoFile.#ctor">
            <summary>
            A LEGO file
            </summary>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.LegoFile.#ctor(System.String)">
            <summary>
            A LEGO file
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.LegoFile.#ctor(System.String,System.Int32)">
            <summary>
            A LEGO file
            </summary>
            <param name="fileName"></param>
            <param name="fileSize"></param>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.QueryRunningProgram">
            <summary>
            Query for any program running on the LEGO NXT Brick.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.QueryRunningLegoProgramRequest">
            <summary>
            Query for any program running on the LEGO NXT Brick.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.RunningProgramResponse">
            <summary>
            Indicates the program which is currently running on the LEGO NXT Brick.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.RunningProgramResponse.Program">
            <summary>
            The name of the running LEGO NXT program.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.StopProgram">
            <summary>
            Stop any program running on the LEGO NXT Brick.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.StopLegoProgramRequest">
            <summary>
            Stop any program running on the LEGO NXT Brick.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.StartProgram">
            <summary>
            Start running a program on the LEGO NXT Brick.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.StartLegoProgramRequest">
            <summary>
            Start a program on the LEGO NXT Brick.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.StartLegoProgramRequest.Program">
            <summary>
            The name of the program to start.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.DeleteFile">
            <summary>
            Delete a file on the LEGO NXT Brick.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.DeleteFileRequest">
            <summary>
            Delete a file on the LEGO NXT Brick.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.DeleteFileRequest.FileName">
            <summary>
            The name of the file to delete from the LEGO NXT Brick.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.CopyFileToBrick">
            <summary>
            Send a file to the LEGO NXT Brick.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.SendFileRequest">
            <summary>
            Send a file to the LEGO NXT Brick.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.SendFileRequest.FileLocation">
            <summary>
            The fully qualified location of the file to send.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.SendFileRequest.FileData">
            <summary>
            The file data to send to the LEGO NXT Brick.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.SendFileRequest.FileName">
            <summary>
            The name of the file when it is sent to the LEGO NXT.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.SendFileRequest.ReplaceExistingFile">
            <summary>
            The name of the file when it is sent to the LEGO NXT.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.SetBrickName">
            <summary>
            Change the Name of the LEGO NXT Brick.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.SetBrickNameRequest">
            <summary>
            Change the Name of the LEGO NXT Brick.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.SetBrickNameRequest.BrickName">
            <summary>
            The new name of the LEGO NXT Brick.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.QueryBrickName">
            <summary>
            Query for the name of the LEGO NXT Brick.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.QueryBrickNameRequest">
            <summary>
            Query for the name of the LEGO NXT Brick.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.BrickNameResponse">
            <summary>
            Indicates the name of the LEGO NXT Brick.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.BrickNameResponse.BrickName">
            <summary>
            The name of the LEGO NXT Brick.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.SendBluetoothMessage">
            <summary>
            Send a Bluetooth Message to the LEGO NXT Brick.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.ReceiveBluetoothMessage">
            <summary>
            Receive a Bluetooth Message from the LEGO NXT Brick.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.ReceiveBluetoothMessageRequest">
            <summary>
            Receive a Bluetooth Message from the LEGO NXT Brick.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.ReceiveBluetoothMessageRequest.Mailbox">
            <summary>
            Specifies the mailbox to check for a message (1-10).
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.BluetoothMessage">
            <summary>
            Specifies a Bluetooth Message which may be sent to or received from the LEGO NXT Brick.
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.BluetoothMessage.Mailbox">
            <summary>
            Indicates the mailbox where the message is delivered (1-10).
            </summary>
        </member>
        <member name="F:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.BluetoothMessage.Message">
            <summary>
            Indicates the message which is sent to or received from the LEGO NXT Brick.
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.NxtBrickOnboardOperations">
            <summary>
            LEGO IO Operations Port
            </summary>
        </member>
        <member name="T:Microsoft.Robotics.Services.Sample.Lego.Nxt.IO.Get">
            <summary>
            Get Operation
            </summary>
        </member>
    </members>
</doc>
